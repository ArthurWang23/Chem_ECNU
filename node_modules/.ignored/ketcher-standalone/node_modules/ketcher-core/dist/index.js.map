{"version":3,"file":"index.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/entities/atomList.ts","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/entities/box2Abs.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/entities/highlight.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/runAsyncAction.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../src/domain/serializers/ket/validate.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/domain/services/struct/structService.types.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/rxnFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/render/raphael-ext.js","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/util.ts","../src/application/render/draw.js","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/restruct/resgroup.js","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.js","../src/application/render/options.js","../src/application/render/raphaelRender.js","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/shared/constants.js","../src/application/editor/index.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types'\n\ntype ElementColorType = {\n  [key in ElementLabel]: string\n}\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000'\n} as const\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types'\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294\n  }\n]\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element)\n  acc.set(element.number, element)\n  return acc\n}, new Map<string | number, Element>())\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string\n  description?: string\n}\n\nexport type GenItemSet = {\n  items: GenItem[]\n  displayName?: string\n}\n\nexport type GenGroup = {\n  itemSets: GenItemSet[]\n  title: string\n}\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType }\n}\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' }\n        ]\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)'\n          },\n          { label: 'QH', description: 'Any atom except C' }\n        ]\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' }\n        ]\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' }\n        ]\n      }\n    ]\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' }\n        ]\n      }\n    ]\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group'\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen'\n          }\n        ]\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure'\n          },\n          {\n            label: 'GH*',\n            description: 'Any group of hydrogen with a ring closure'\n          }\n        ]\n      }\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' }\n            ]\n          }\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' }\n                ]\n              }\n            ]\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' }\n                ]\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' }\n            ]\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms'\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen'\n              }\n            ]\n          }\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'atyl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen'\n                  }\n                ]\n              }\n            ]\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants'\n\nexport interface AtomListParams {\n  readonly notList: boolean\n  readonly ids: Array<number>\n}\n\nexport class AtomList {\n  notList: boolean\n  ids: Array<number>\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList\n    this.ids = params.ids\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = []\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id)\n      currenElement && labels.push(currenElement!.label)\n    }\n\n    return labels\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']'\n    if (this.notList) {\n      label = '!' + label\n    }\n    return label\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert'\n\nexport interface Point {\n  x?: number\n  y?: number\n  z?: number\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0)\n  static UNIT = new Vec2(1, 1)\n\n  x: number\n  y: number\n  z: number\n\n  constructor(point: Point)\n  constructor(x?: number, y?: number, z?: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0\n      this.y = 0\n      this.z = 0\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0)\n      this.y = parseFloat(args[0].y || 0)\n      this.z = parseFloat(args[0].z || 0)\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0)\n      this.y = parseFloat(args[1] || 0)\n      this.z = 0\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0])\n      this.y = parseFloat(args[1])\n      this.z = parseFloat(args[2])\n    } else {\n      throw new Error('Vec2(): invalid arguments')\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length()\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z)\n    )\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z)\n    )\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z)\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2))\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z)\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2()\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number)\n    }\n    return v\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2\n    )\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5)\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z)\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x\n    this.y += v.y\n    this.z += v.z\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y)\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z)\n  }\n\n  scaled(s: number): Vec2 {\n    return new Vec2(this.x * s, this.y * s, this.z * s)\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z)\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0\n    return new Vec2(this.x, y1 - this.y, this.z)\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f)\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length())\n  }\n\n  normalize(): boolean {\n    const l = this.length()\n\n    if (l < 0.000001) return false\n\n    this.x /= l\n    this.y /= l\n\n    return true\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z)\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString()\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')'\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null)\n\n    return Vec2.max(this, v)\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v)\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z))\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z))\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle)\n    const cos = Math.cos(angle)\n\n    return this.rotateSC(sin, cos)\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin)\n    assert(cos === 0 || !!cos)\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z\n    )\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item\n    }\n\n    return null\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this)\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false\n    }\n\n    return true\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression))\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this)\n\n    for (const item of setB) union.add(item)\n\n    return union\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList'\nimport { Point, Vec2 } from './vec2'\n\nimport { Elements } from 'domain/constants'\nimport { Pile } from './pile'\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue\n}\n\nfunction getPseudo(label: string) {\n  return !Elements.get(label) &&\n    label !== 'L' &&\n    label !== 'L#' &&\n    label !== 'R#'\n    ? label\n    : ''\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2\n  } else {\n    return 0\n  }\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or'\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number\n  stereoLabel?: string | null\n  exactChangeFlag?: number\n  rxnFragmentType?: number\n  invRet?: number\n  aam?: number\n  hCount?: number\n  unsaturatedAtom?: number\n  substitutionCount?: number\n  ringBondCount?: number\n  explicitValence?: number\n  attpnt?: any\n  rglabel?: string | null\n  charge?: number\n  radical?: number\n  isotope?: number\n  alias?: string | null\n  pseudo?: string\n  atomList?: AtomListParams | null\n  label: string\n  fragment?: number\n  pp?: Point\n  implicitH?: number\n}\n\nexport class Atom {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3\n    }\n  }\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: 0,\n    radical: 0,\n    charge: 0,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attpnt: null,\n    aam: 0,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0\n  }\n\n  label: string\n  fragment: number\n  atomList: AtomList | null\n  attpnt: any\n  isotope: number\n  hCount: number\n  radical: number\n  charge: number\n  explicitValence: number\n  ringBondCount: number\n  unsaturatedAtom: number\n  substitutionCount: number\n  valence: number\n  implicitH: number\n  pp: Vec2\n  neighbors: Array<number>\n  sgs: Pile<any>\n  badConn: boolean\n  alias: string | null\n  rglabel: string | null\n  aam: number\n  invRet: number\n  exactChangeFlag: number\n  rxnFragmentType: number\n  stereoLabel?: string | null\n  stereoParity: number\n  hasImplicitH?: boolean\n  pseudo!: string\n\n  constructor(attributes: AtomAttributes) {\n    this.label = attributes.label\n    this.fragment = getValueOrDefault(attributes.fragment, -1)\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias)\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope)\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical)\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge)\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel)\n    this.attpnt = getValueOrDefault(attributes.attpnt, Atom.attrlist.attpnt)\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence\n    )\n\n    this.valence = 0\n    this.implicitH = attributes.implicitH || 0 // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2()\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile()\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount\n    )\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount\n    )\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom\n    )\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount)\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam)\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet)\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag\n    )\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1)\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel\n    )\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity\n    )\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null\n    this.neighbors = [] // set of half-bonds having this atom as their origin\n    this.badConn = false\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label)\n      }\n    })\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {}\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr]\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr]\n    }\n  }\n\n  clone(fidMap: Map<number, number>): Atom {\n    const ret = new Atom(this)\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!\n    }\n    return ret\n  }\n\n  isQuery(): boolean {\n    return (\n      this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount\n    )\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === 0 &&\n      this.radical === 0 &&\n      this.charge === 0 &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    )\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label)\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attpnt !== null ||\n      this.aam\n    )\n  }\n\n  calcValence(conn: number): boolean {\n    const label = this.label\n    const charge = this.charge\n    if (this.isQuery()) {\n      this.implicitH = 0\n      return true\n    }\n    const element = Elements.get(label)\n    if (!element) {\n      this.implicitH = 0\n      return true\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n    let valence = conn\n    let hyd = 0\n    const absCharge = Math.abs(charge)\n    if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      }\n    } else if (groupno === 2) {\n      if (conn + rad + absCharge === 2 || conn + rad + absCharge === 0) {\n        valence = 2\n      } else hyd = -1\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (rad + conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === -2) {\n          if (rad + conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (rad + conn + absCharge <= 1) {\n          valence = 1\n          hyd = 1 - rad - conn - absCharge\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4\n        hyd = 4 - rad - conn - absCharge\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else {\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (label === 'N' || rad + conn + absCharge <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (rad + conn <= 2 && label !== 'As') {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (rad + conn <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else if (conn + rad + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6\n          hyd = 6 - rad - conn - absCharge\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          } else if (conn <= 4) {\n            valence = 4\n            hyd = 4 - rad - conn - absCharge\n          } else if (charge === 0 && conn <= 6) {\n            valence = 6\n            hyd = 6 - rad - conn - absCharge\n          } else {\n            hyd = -1\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else if (conn === 3 || conn === 5 || conn >= 7) {\n            hyd = -1\n          }\n        } else if (charge === 0) {\n          if (conn <= 1) {\n            valence = 1\n            hyd = 1 - rad - conn\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (conn === 2 || conn === 4 || conn === 6) {\n            if (rad === 1) {\n              valence = conn\n              hyd = 0\n            } else {\n              hyd = -1 // will throw an error in the end\n            }\n          } else if (conn > 7) {\n            hyd = -1 // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (conn + rad + absCharge === 0) valence = 1\n      else hyd = -1\n    }\n\n    this.valence = valence\n    this.implicitH = hyd\n    if (this.implicitH < 0) {\n      this.valence = conn\n      this.implicitH = 0\n      this.badConn = true\n      return false\n    }\n    return true\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge\n    const label = this.label\n    const element = Elements.get(this.label)\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0\n      return 0\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn\n        if (charge === 2) return rad + conn\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn\n        else if (charge === 2) return rad + conn\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn\n      }\n    }\n\n    return rad + conn + Math.abs(charge)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number\n  topology?: number\n  stereo?: number\n  xxx?: string\n  type: number\n  end: number\n  begin: number\n}\n\nexport class Bond {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12\n    }\n  }\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED\n  }\n\n  begin: number\n  end: number\n  readonly type: number\n  readonly xxx: string\n  readonly stereo: number\n  readonly topology: number\n  readonly reactingCenterStatus: number\n  len: number\n  sb: number\n  sa: number\n  hb1?: number\n  hb2?: number\n  angle: number\n  center: Vec2\n\n  constructor(attributes: BondAttributes) {\n    this.begin = attributes.begin\n    this.end = attributes.end\n    this.type = attributes.type\n    this.xxx = attributes.xxx || ''\n    this.stereo = Bond.PATTERN.STEREO.NONE\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER\n    this.reactingCenterStatus = 0\n    this.len = 0\n    this.sb = 0\n    this.sa = 0\n    this.angle = 0\n\n    if (attributes.stereo) this.stereo = attributes.stereo\n    if (attributes.topology) this.topology = attributes.topology\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus\n    }\n\n    this.center = new Vec2()\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {}\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr]\n      }\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr]\n    }\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp\n    const p2 = struct.atoms.get(this.end).pp\n    return Vec2.lc2(p1, 0.5, p2, 0.5)\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp\n    const p2 = struct.atoms.get(this.end)!.pp\n    return p2.sub(p1).normalized()\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this)\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!\n      cp.end = aidMap.get(cp.end)!\n    }\n    return cp\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nimport { Bond } from './bond'\nimport { StereoLabel } from './atom'\nimport { Struct } from './struct'\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR'\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel)\n  if (!filteredStereoAtoms.length) return undefined\n\n  const atom = filteredStereoAtoms[0]!\n  const stereoLabel = atom.stereoLabel! // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel\n  )\n\n  let stereoFlag: StereoFlag\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0]\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs\n        break\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And\n        break\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or\n        break\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`)\n      }\n    }\n  }\n  return stereoFlag\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag\n  stereoFlagPosition?: Vec2\n  #stereoAtoms: Array<number>\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms]\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag\n  }\n\n  constructor(stereoAtoms: Array<number> = [], stereoFlagPosition?: Point) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition)\n    }\n\n    this.#stereoAtoms = stereoAtoms\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId)\n    if (!fragment) return undefined\n    const bb = fragment.getCoordBoundingBox()\n    return new Vec2(bb.max.x, bb.min.y - 1)\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!)\n    const fr = new Fragment(stereoAtoms, this.stereoFlagPosition)\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag\n    return fr\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n    return this.#enhancedStereoFlag\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid)\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid)\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId)\n      return true\n    }\n    return false\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId)\n      return true\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\n\nexport interface ScaleOptions {\n  scale: number\n}\n\nfunction scaled2obj(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(1 / options.scale)\n}\n\nfunction obj2scaled(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(options.scale)\n}\n\nexport const Scale = {\n  scaled2obj,\n  obj2scaled\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities'\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct\n) {\n  const beginAtom = struct.atoms.get(bond.begin)\n\n  let EndAtomNeigh: number | undefined = NaN\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider\n  functionalGroupsList: Struct[]\n  constructor() {\n    this.functionalGroupsList = []\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider()\n    }\n    return FunctionalGroupsProvider.instance\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\nexport class Box2Abs {\n  readonly p0: Vec2\n  readonly p1: Vec2\n\n  constructor()\n  constructor(p: Vec2)\n  constructor(p0: Vec2, p1: Vec2)\n  constructor(x0: number, y0: number, x1: number, y1: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min\n      this.p1 = args[0].max\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0]\n      this.p1 = args[1]\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1])\n      this.p1 = new Vec2(args[2], args[3])\n    } else if (args.length === 0) {\n      this.p0 = new Vec2()\n      this.p1 = new Vec2()\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!'\n      )\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString()\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1)\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb))\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null)\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p))\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null)\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    )\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d))\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function')\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options))\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0)\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1)\n  }\n\n  pos() {\n    return this.p0\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height\n    )\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1))\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x)\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x)\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x)\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x)\n\n    return dc * dd <= 0 && da * db <= 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom'\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { Vec2 } from './vec2'\n\nexport class SGroupBracketParams {\n  readonly c: Vec2\n  readonly d: Vec2\n  readonly n: Vec2\n  readonly w: number\n  readonly h: number\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN'\n  }\n\n  type: string\n  id: number\n  label: number\n  bracketBox: any\n  bracketDir: Vec2\n  areas: any\n  hover: boolean\n  hovering: any\n  selected: boolean\n  selectionPlate: any\n  atoms: any\n  atomSet: any\n  parentAtomSet: any\n  patoms?: any\n  allAtoms: any\n  bonds: any\n  xBonds: any\n  neiAtoms: any\n  pp: Vec2 | null\n  data: any\n\n  constructor(type: string) {\n    this.type = type\n    this.id = -1\n    this.label = -1\n    this.bracketBox = null\n    this.bracketDir = new Vec2(1, 0)\n    this.areas = []\n\n    this.hover = false\n    this.hovering = null\n    this.selected = false\n    this.selectionPlate = null\n\n    this.atoms = []\n    this.patoms = []\n    this.bonds = []\n    this.xBonds = []\n    this.neiAtoms = []\n    this.pp = null\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: 'n',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: ''\n    }\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr]\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {}\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr]\n    })\n    return attrs\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr]\n    this.data[attr] = value\n    return oldValue\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset)\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint\n\n    if (this.data.context === 'Atom' || this.data.context === 'Bond') {\n      const contentBoxes: Array<any> = []\n      let contentBB: Box2Abs | null = null\n      const direction = new Vec2(1, 0)\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid)\n        const pos = new Vec2(atom!.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        const bba = new Box2Abs(pos, pos).extend(ext, ext)\n        contentBoxes.push(bba)\n      })\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null\n        ;[bba.p0.x, bba.p1.x].forEach((x) => {\n          ;[bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y)\n            const p = new Vec2(\n              Vec2.dot(v, direction),\n              Vec2.dot(v, direction.rotateSC(1, 0))\n            )\n            bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n          })\n        })\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!)\n      })\n\n      topLeftPoint = contentBB!.p0\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5))\n    }\n\n    const sgroups = Array.from(struct.sgroups.values())\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5))\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0]\n        const sAtomPP = struct.atoms.get(sAtom)?.pp\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms)\n      }\n    }\n\n    this.pp = topLeftPoint\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp) return null\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1)\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = []\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      if (typeof map[aid] !== 'number') newAtoms.push(aid)\n      else if (map[aid] >= 0) newAtoms.push(map[aid])\n      else newAtoms.push(-1)\n    }\n    return newAtoms\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j])\n    }\n    return newAtoms\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap))\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type)\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field]\n    })\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem))\n    cp.pp = sgroup.pp\n    cp.bracketBox = sgroup.bracketBox\n    cp.patoms = null\n    cp.bonds = null\n    cp.allAtoms = sgroup.allAtoms\n    cp.data.expanded = sgroup.data.expanded\n    return cp\n  }\n\n  static addAtom(sgroup: SGroup, aid: number): void {\n    sgroup.atoms.push(aid)\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1)\n        return\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>\n  ): { [key: number]: Array<Bond> } {\n    const crossBonds: { [key: number]: Array<Bond> } = {}\n    mol.bonds.forEach((bond, bid) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = []\n        }\n        crossBonds[bond.begin].push(bid)\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = []\n        }\n        crossBonds[bond.end].push(bid)\n      }\n    })\n    return crossBonds\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> }\n  ): void {\n    const atoms = sGroup.atoms\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDir = new Vec2(1, 0)\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol)\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol)\n      sGroup.bracketDir = Vec2.diff(p2, p1).normalized()\n    }\n    const d = sGroup.bracketDir\n\n    let braketBox: Box2Abs | null = null\n    const contentBoxes: Array<any> = []\n    atoms.forEach((aid) => {\n      const atom = mol.atoms.get(aid)\n      const pos = new Vec2(atom.pp)\n      const ext = new Vec2(0.05 * 3, 0.05 * 3)\n      const bba = new Box2Abs(pos, pos).extend(ext, ext)\n      contentBoxes.push(bba)\n    })\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null\n      ;[bba.p0.x, bba.p1.x].forEach((x) => {\n        ;[bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y)\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)))\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n        })\n      })\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!)\n    })\n    const vext = new Vec2(0.2, 0.4)\n    if (braketBox) braketBox = (braketBox as Box2Abs).extend(vext, vext)\n    sGroup.bracketBox = braketBox\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n\n  ): Array<any> {\n    const brackets: Array<any> = []\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom)\n    const crossBonds = crossBondsPerAtomValues.flat()\n    if (crossBonds.length < 2) {\n      ;(function () {\n        d = d || new Vec2(1, 0)\n        n = n || d.rotateSC(1, 0)\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const bracketHeight = bb.sz().y\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight)\n        )\n      })()\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      ;(function () {\n        const b1 = mol.bonds.get(crossBonds[0])\n        const b2 = mol.bonds.get(crossBonds[1])\n        const cl0 = b1.getCenter(mol)\n        const cr0 = b2.getCenter(mol)\n        const dr = Vec2.diff(cr0, cl0).normalized()\n        const dl = dr.negated()\n\n        const bracketWidth = 0.25\n        const bracketHeight = 1.5\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight\n          )\n        )\n      })()\n    } else {\n      ;(function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i])\n          const c = b.getCenter(mol)\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated()\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0))\n        }\n      })()\n    }\n    return brackets\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp\n    let bb = new Box2Abs(a0, a0)\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      const atom = mol.atoms.get(aid)\n      const p = atom.pp\n      bb = bb.include(p)\n    }\n    return bb\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms\n    const atoms: Array<any> = []\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid)\n    })\n    return atoms\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg)\n    const bonds: Array<any> = []\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid)\n      }\n    })\n    return bonds\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b)\n    sgroup.atomSet = new Pile(sgroup.atoms)\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet)\n    const inBonds: Array<any> = []\n    const xBonds: Array<any> = []\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid)\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid)\n      }\n    })\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number')\n    }\n\n    let xAtom1 = -1\n    let xAtom2 = -1\n    let crossBond = null\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0])\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end\n\n      const bond2 = mol.bonds.get(xBonds[1])\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end\n      crossBond = bond2\n    }\n\n    let tailAtom = xAtom2\n\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {}\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid)\n        const aid2 = mol.atoms.add(new Atom(atom))\n        newAtoms.push(aid2)\n        sgroup.atomSet.add(aid2)\n        amap[aid] = aid2\n      })\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid)\n        const newBond = new Bond(bond)\n        newBond.begin = amap[newBond.begin]\n        newBond.end = amap[newBond.end]\n        mol.bonds.add(newBond)\n      })\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond)\n        newCrossBond.begin = tailAtom\n        newCrossBond.end = amap[xAtom1]\n        mol.bonds.add(newCrossBond)\n        tailAtom = amap[xAtom2]\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1])\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom\n      else xBond2.end = tailAtom\n    }\n    sgroup.bonds = xBonds\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid)\n        })\n    })\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2() // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length)\n    }\n    return c\n  }\n}\n\nfunction descriptorIntersects(sgroups: [], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5))\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5))\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { FunctionalGroupsProvider } from '../helpers'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class FunctionalGroup {\n  #sgroup: SGroup\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null)\n\n    this.#sgroup = sgroup\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const types = provider.getFunctionalGroupsList()\n    return (\n      types.some((type) => type.name === sgroup.data.name) &&\n      sgroup.type === 'SUP'\n    )\n  }\n\n  static atomsInFunctionalGroup(functionalGroups, atom): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return atom\n    }\n    return null\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return bond\n    }\n    return null\n  }\n\n  static findFunctionalGroupByAtom(functionalGroups, atom): number | null {\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static findFunctionalGroupByBond(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup)\n  }\n\n  static isFirstAtomInFunctionalGroup(sgroups, aid): boolean {\n    for (const sg of sgroups.values()) {\n      if (FunctionalGroup.isFunctionalGroup(sg) && aid === sg.atoms[0]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroups: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroups.push(sg.item.id)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.id)\n        }\n      })\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg))\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroupsAtoms: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroupsAtoms.push(...sg.item.atoms)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroupsAtoms.push(...sg.atoms)\n        }\n      })\n    }\n    return (\n      contractedFunctionalGroupsAtoms.includes(bond.begin) &&\n      contractedFunctionalGroupsAtoms.includes(bond.end)\n    )\n  }\n\n  static isContractedFunctionalGroup(sgroupId, functionalGroups): boolean {\n    let isFunctionalGroup = false\n    let expanded = false\n    functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroupId === sgroupId) {\n        isFunctionalGroup = true\n        expanded = fg.isExpanded\n      }\n    })\n    return !expanded && isFunctionalGroup\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\n/** @internal */\nexport class HalfBond {\n  begin: number\n  end: number\n  bid: number\n  dir: Vec2\n  norm: Vec2\n  ang: number\n  p: Vec2\n  loop: number\n  contra: number\n  next: number\n  leftSin: number\n  leftCos: number\n  leftNeighbor: number\n  rightSin: number\n  rightCos: number\n  rightNeighbor: number\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.')\n\n    this.begin = begin\n    this.end = end\n    this.bid = bid\n\n    // rendering properties\n    this.dir = new Vec2() // direction\n    this.norm = new Vec2() // left normal\n    this.ang = 0 // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2() // corrected origin position\n    this.loop = -1 // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1 // the half bond contrary to this one\n    this.next = -1 // the half-bond next ot this one in CCW order\n    this.leftSin = 0\n    this.leftCos = 0\n    this.leftNeighbor = 0\n    this.rightSin = 0\n    this.rightCos = 0\n    this.rightNeighbor = 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond'\nimport { Struct } from './struct'\n\nexport class Loop {\n  hbs: number[]\n  dblBonds: number\n  aromatic: boolean\n  convex: boolean\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs // set of half-bonds involved\n    this.dblBonds = 0 // number of double bonds in the loop\n    this.aromatic = true\n    this.convex = isConvex || false\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { Pool } from './pool'\n\nexport interface RGroupAttributes {\n  index?: number\n  ifthen?: number\n  resth?: boolean\n  range?: string\n}\nexport class RGroup {\n  frags: Pile<number>\n  resth: boolean\n  range: string\n  ifthen: number\n  index: number\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>()\n    this.resth = atrributes?.resth || false\n    this.range = atrributes?.range || ''\n    this.ifthen = atrributes?.ifthen || 0\n    this.index = atrributes?.index || -1\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid))\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index\n    }\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this)\n    this.frags.forEach((fid) => {\n      ret.frags.add(fidMap ? fidMap.get(fid)! : fid)\n    })\n    return ret\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle'\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode\n  pos?: Array<Point>\n  height?: number\n}\n\nexport class RxnArrow {\n  mode: RxnArrowMode\n  pos: Array<Vec2>\n  height?: number\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle\n    ].includes(arrow.mode)\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    this.pos = []\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n    this.mode = attributes.mode\n    const defaultHeight = 2\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this)\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1])\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport interface RxnPlusAttributes {\n  pp?: Point\n}\n\nexport class RxnPlus {\n  pp: Vec2\n\n  constructor(attributes?: RxnPlusAttributes) {\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2()\n  }\n\n  clone() {\n    return new RxnPlus(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>\n  /** node id -> list of child ids */\n  children: Map<number, number[]>\n  atomSets: Map<number, any>\n\n  constructor() {\n    this.parent = new Map()\n    this.children = new Map()\n\n    this.children.set(-1, []) // extra root node\n    this.atomSets = new Map()\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = []\n    const queue = Array.from(this.children.get(-1) as Array<number>)\n    while (queue.length > 0) {\n      const id = queue.shift()\n      if (typeof id !== 'number') {\n        break\n      }\n      const children = this.children.get(id)\n      if (typeof children === 'undefined') {\n        break\n      }\n\n      children.forEach((id) => {\n        queue.push(id)\n      })\n\n      order.push(id)\n    }\n\n    return order\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map()\n    const isSubset = new Map()\n\n    this.atomSets.delete(newId)\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms))\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms)\n      )\n    })\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false\n      }\n      const childs = this.children.get(sgid)\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0\n    })\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id))\n    )\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0]\n    }\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = []\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id)\n    }\n    return path\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest')\n    assert(!this.children.has(id), 'sgid already present in the forest')\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms))\n      parent = guess.parent\n      children = guess.children\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id)\n    })\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id))\n    )\n    this.parent.set(id, parent)\n    this.children.get(parent)?.push(id)\n    this.atomSets.set(id, new Pile(atoms))\n\n    return { parent, children }\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId)\n    if (typeof parentId === 'undefined') {\n      return\n    }\n\n    const childs = this.children.get(parentId)\n    if (!childs) {\n      return\n    }\n\n    const childIndex = childs.indexOf(childId)\n    childs.splice(childIndex, 1)\n    this.parent.set(childId, id)\n  }\n\n  remove(id) {\n    assert(this.parent.has(id), 'sgid is not in the forest')\n    assert(this.children.has(id), 'sgid is not in the forest')\n\n    const parentId = this.parent.get(id) as any\n    const childs = this.children.get(parentId) as any\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId)\n      this.children.get(parentId)?.push(childId)\n    })\n\n    const i = childs.indexOf(id)\n    childs.splice(i, 1)\n\n    this.children.delete(id)\n    this.parent.delete(id)\n    this.atomSets.delete(id)\n  }\n}\n\nexport function checkOverlapping(struct, atoms) {\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid)\n    return res.union(atom.sgs)\n  }, new Pile())\n\n  return Array.from(sgroups).some((sid) => {\n    const sg = struct.sgroups.get(sid)\n    if (sg.type === 'DAT') return false\n    const sgAtoms = SGroup.getAtoms(struct, sg)\n\n    return sgAtoms.length < atoms.length\n      ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n      : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line'\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode\n  pos?: Array<Point>\n}\n\nexport class SimpleObject {\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    this.pos = []\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this)\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1])\n      }\n      default:\n        return this.pos[0]\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0\n\n  add(item: TValue): number {\n    const id = this.nextId++\n    super.set(id, item)\n    return id\n  }\n\n  newId(): number {\n    return this.nextId++\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key\n    }\n\n    return null\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key\n    }\n\n    return null\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value))\n    )\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, radicalElectrons } from './atom'\n\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Elements } from 'domain/constants'\nimport { Fragment } from './fragment'\nimport { FunctionalGroup } from './functionalGroup'\nimport { HalfBond } from './halfBond'\nimport { Loop } from './loop'\nimport { Pile } from './pile'\nimport { Pool } from './pool'\nimport { RGroup } from './rgroup'\nimport { RxnArrow } from './rxnArrow'\nimport { RxnPlus } from './rxnPlus'\nimport { SGroup } from './sgroup'\nimport { SGroupForest } from './sgroupForest'\nimport { SimpleObject } from './simpleObject'\nimport { Text } from './text'\nimport { Vec2 } from './vec2'\nimport { Highlight } from './highlight'\n\nexport type Neighbor = {\n  aid: number\n  bid: number\n}\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false\n  }\n  array.push(item)\n  return true\n}\n\nexport class Struct {\n  atoms: Pool<Atom>\n  bonds: Pool<Bond>\n  sgroups: Pool<SGroup>\n  halfBonds: Pool<HalfBond>\n  loops: Pool<Loop>\n  isReaction: boolean\n  rxnArrows: Pool<RxnArrow>\n  rxnPluses: Pool<RxnPlus>\n  frags: Pool<Fragment | null>\n  rgroups: Pool<RGroup>\n  name: string\n  sGroupForest: SGroupForest\n  simpleObjects: Pool<SimpleObject>\n  texts: Pool<Text>\n  functionalGroups: Pool<FunctionalGroup>\n  highlights: Pool<Highlight>\n\n  constructor() {\n    this.atoms = new Pool<Atom>()\n    this.bonds = new Pool<Bond>()\n    this.sgroups = new Pool<SGroup>()\n    this.halfBonds = new Pool<HalfBond>()\n    this.loops = new Pool<Loop>()\n    this.isReaction = false\n    this.rxnArrows = new Pool<RxnArrow>()\n    this.rxnPluses = new Pool<RxnPlus>()\n    this.frags = new Pool<Fragment>()\n    this.rgroups = new Pool<RGroup>()\n    this.name = ''\n    this.sGroupForest = new SGroupForest()\n    this.simpleObjects = new Pool<SimpleObject>()\n    this.texts = new Pool<Text>()\n    this.functionalGroups = new Pool<FunctionalGroup>()\n    this.highlights = new Pool<Highlight>()\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    )\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses()\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0\n    )\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet\n    )\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>()\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid)\n    })\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid)\n        })\n      })\n    })\n\n    return this.clone(atomSet)\n  }\n\n  getFragmentIds(fid: number): Pile<number> {\n    const atomSet = new Pile<number>()\n\n    this.atoms.forEach((atom, aid) => {\n      if (atom.fragment === fid) atomSet.add(aid)\n    })\n\n    return atomSet\n  }\n\n  getFragment(fid: number): Struct {\n    return this.clone(this.getFragmentIds(fid), null, true)\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys())\n    bondSet = bondSet || new Pile<number>(this.bonds.keys())\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys())\n    textsSet = textsSet || new Pile<number>(this.texts.keys())\n    aidMap = aidMap || new Map()\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end)\n    })\n\n    const fidMask = new Pile()\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment)\n    })\n\n    const fidMap = new Map()\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null))\n    })\n\n    const rgroupsIds: Array<number> = []\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) keepGroup = true\n        })\n\n        if (!keepGroup) return\n      }\n\n      const rg = cp.rgroups.get(rgid)\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid))\n        })\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap))\n      }\n    })\n\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid)\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)) // clone Fragments\n      }\n    })\n\n    const bidMap = new Map()\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)))\n    })\n\n    this.sgroups.forEach((sg) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return\n\n      sg = SGroup.clone(sg, aidMap!)\n      const id = cp.sgroups.add(sg)\n      sg.id = id\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid)\n        if (atom) {\n          atom.sgs.add(id)\n        }\n      })\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, [])\n      else cp.sGroupForest.insert(sg)\n    })\n\n    this.functionalGroups.forEach((fg) => {\n      fg = FunctionalGroup.clone(fg)\n      cp.functionalGroups.add(fg)\n    })\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone())\n    })\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone())\n    })\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone())\n      })\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone())\n      })\n    }\n\n    cp.name = this.name\n\n    return cp\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds()\n    this.initNeighbors()\n    this.updateHalfBonds(Array.from(this.atoms.keys()))\n    this.sortNeighbors(Array.from(this.atoms.keys()))\n    this.findLoops()\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid)\n    this.atoms.get(aid)!.sgs.add(sgid)\n  }\n\n  calcConn(atom) {\n    let conn = 0\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!\n      const bond = this.bonds.get(hb.bid)!\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1\n          break\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2\n          break\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3\n          break\n        case Bond.PATTERN.TYPE.DATIVE:\n          break\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true]\n          return [atom.neighbors.length, true]\n        default:\n          return [-1, false]\n      }\n    }\n    return [conn, false]\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin)\n    )\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = []\n    })\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n      a1.neighbors.push(bond.hb1!)\n      a2.neighbors.push(bond.hb2!)\n    })\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!\n    bond.hb1 = 2 * bid\n    bond.hb2 = 2 * bid + 1 // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid))\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid))\n    const hb1 = this.halfBonds.get(bond.hb1)!\n    const hb2 = this.halfBonds.get(bond.hb2)!\n    hb1.contra = bond.hb2\n    hb2.contra = bond.hb1\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!\n    const startCoords = this.atoms.get(halfBond.begin)!.pp\n    const endCoords = this.atoms.get(halfBond.end)!.pp\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized()\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0)\n    halfBond.norm = halfBond.dir.turnLeft()\n    halfBond.ang = halfBond.dir.oxAngle()\n    if (halfBond.loop < 0) halfBond.loop = -1\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear()\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond)\n    })\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!\n    const hbl = this.halfBonds.get(left)!\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir)\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir)\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir)\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir)\n\n    hb.leftNeighbor = left\n    hbl.rightNeighbor = hbid\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!\n    const atom = this.atoms.get(hb.begin)!\n\n    let i\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break\n    }\n    atom.neighbors.splice(i, 0, hbid)\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length]\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length]\n    this.setHbNext(il, hbid)\n    this.setHbNext(hbid, ir)\n    this.halfBondSetAngle(hbid, il)\n    this.halfBondSetAngle(ir, hbid)\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!\n    const halfBonds = this.halfBonds\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length]\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei\n        this.halfBondSetAngle(nextNei, nei)\n      })\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid)\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra)\n    })\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = []\n      sg.neiAtoms = []\n    })\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.end)\n        }\n      })\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.begin)\n        }\n      })\n    })\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid)\n    })\n\n    this.sGroupForest.remove(sgid)\n    this.sgroups.delete(sgid)\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!\n    item.pp = pp\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!\n    item.pp = pp\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id)\n    if (item) {\n      item.pos = pos\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!\n    item.pos = pos\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id)\n\n    if (item) {\n      item.position = position\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp\n        }\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec)\n            bb.max = Vec2.max(bb.max, vec)\n          })\n        } else {\n          bb.min = Vec2.min(bb.min, pp)\n          bb.max = Vec2.max(bb.max, pp)\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp)\n    })\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp)\n      })\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos)\n      })\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos)\n      })\n      this.texts.forEach((item) => {\n        extend(item.position)\n      })\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1)\n      }\n    }\n    return bb\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp)\n        }\n      } else {\n        bb.min = Vec2.min(bb.min, pp)\n        bb.max = Vec2.max(bb.max, pp)\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp)\n    })\n    return bb\n  }\n\n  getBondLengthData() {\n    let totalLength = 0\n    let cnt = 0\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp\n      )\n      cnt++\n    })\n    return { cnt, totalLength }\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData()\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0\n    let minDist\n    let dist = 0\n    const keys = Array.from(this.atoms.keys())\n    let k\n    let j\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp\n        )\n        if (minDist < 0 || minDist > dist) minDist = dist\n      }\n      totalDist += minDist\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end)\n    )\n\n    return key !== undefined\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid]\n    const ids = new Pile<number>()\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)!\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds()\n      this.initNeighbors()\n      this.updateHalfBonds(Array.from(this.atoms.keys()))\n      this.sortNeighbors(Array.from(this.atoms.keys()))\n    }\n\n    let addedAtoms = new Pile<number>()\n\n    const components: Array<any> = []\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid)\n        components.push(component)\n        addedAtoms = addedAtoms.union(component)\n      }\n    })\n\n    return components\n  }\n\n  markFragment(idSet: Pile<number>) {\n    const frag = new Fragment()\n    const fid = this.frags.add(frag)\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true)\n      atom.fragment = fid\n    })\n  }\n\n  markFragments() {\n    const components = this.findConnectedComponents()\n    components.forEach((comp) => {\n      this.markFragment(comp)\n    })\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale)\n    })\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale)\n    })\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale))\n    })\n\n    this.sgroups.forEach((item) => {\n      item.pp = item.pp ? item.pp.scaled(scale) : null\n    })\n\n    this.texts.forEach((item) => {\n      // Scale text only for reactions - i.e file contains reaction arrows\n      const isReactionStruct = this.rxnArrows.size\n      if (isReactionStruct) {\n        item.pos = item.pos.map((p) => p.scaled(scale))\n        item.position = item.position.scaled(scale)\n      }\n    })\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength()\n    if (avg < 0 && !this.isReaction) {\n      // TODO [MK] this doesn't work well for reactions as the distances between\n      // the atoms in different components are generally larger than those between atoms of a single component\n      // (KETCHER-341)\n      avg = this.getAvgClosestAtomDistance()\n    }\n    if (avg < 1e-3) avg = 1\n\n    const scale = 1 / avg\n    this.scale(scale)\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!\n      const ai = this.atoms.get(hbi.begin)!.pp\n      const bi = this.atoms.get(hbi.end)!.pp\n      const set = new Pile([hbi.begin, hbi.end])\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp\n        const bj = this.atoms.get(hbj.end)!.pp\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true\n      }\n    }\n\n    return false\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = []\n    let continueFlag = true\n    while (continueFlag) {\n      const atomToHalfBond = {} // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l]\n        const aid1 = this.halfBonds.get(hbid)!.begin\n        const aid2 = this.halfBonds.get(hbid)!.end\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2] // where the subloop begins\n          const subloop = loop.slice(s, l + 1)\n          subloops.push(subloop)\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1)\n          }\n          continueFlag = true\n          break\n        }\n        atomToHalfBond[aid1] = l\n      }\n      if (!continueFlag) subloops.push(loop) // we're done, no more subloops found\n    }\n    return subloops\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!\n    const hbb = this.halfBonds.get(hbid2)!\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir))\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length])\n      return angle <= 0\n    })\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length]\n      const hbb = this.halfBonds.get(hbidb)!\n      const angle = this.halfBondAngle(hbida, hbidb)\n      totalAngle += hbb.contra === hbida ? Math.PI : angle // back and forth along the same edge\n    })\n    return Math.abs(totalAngle) < Math.PI\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = []\n    const bondsToMark = new Pile<number>()\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext)\n          continue // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop)\n        subloops.forEach((loop) => {\n          let loopId\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop)\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop))\n            )\n          } else {\n            loopId = -2\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid)\n          })\n\n          if (loopId >= 0) newLoops.push(loopId)\n        })\n        break\n      }\n    })\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark)\n    }\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    const atom = this.atoms.get(aid)!\n    const [conn, isAromatic] = this.calcConn(atom)\n    let correctConn = conn\n    atom.badConn = false\n\n    if (isAromatic) {\n      if (atom.label === 'C' && atom.charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical)\n          return\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical)\n          return\n        }\n      } else if (\n        (atom.label === 'O' && atom.charge === 0) ||\n        (atom.label === 'N' && atom.charge === 0 && conn === 3) ||\n        (atom.label === 'N' && atom.charge === 1 && conn === 3) ||\n        (atom.label === 'S' && atom.charge === 0 && conn === 3)\n      ) {\n        atom.implicitH = 0\n        return\n      } else if (!atom.hasImplicitH) {\n        correctConn++\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery()) {\n      atom.implicitH = 0\n      return\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label)\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0\n        atom.badConn = true\n      }\n    } else {\n      atom.calcValence(correctConn)\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true\n      }\n    })\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid)\n        }\n      })\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!\n      return {\n        aid: hb.end,\n        bid: hb.bid\n      }\n    })\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true)\n    const barriers: Array<any> = []\n    let arrowPos: number | null = null\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x\n    })\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x)\n    })\n\n    if (arrowPos !== null) barriers.push(arrowPos)\n\n    barriers.sort((a, b) => a - b)\n\n    const components: Array<any> = []\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component)\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n      let j = 0\n\n      while (c.x > barriers[j]) ++j\n\n      components[j] = components[j] || new Pile()\n      components[j] = components[j].union(component)\n    })\n\n    const submolTexts: Array<string> = []\n    const reactants: Array<any> = []\n    const products: Array<any> = []\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('')\n        return\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0\n      )\n\n      if (rxnFragmentType === 1) reactants.push(component)\n      else products.push(component)\n    })\n\n    return {\n      reactants,\n      products\n    }\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset)\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n    return c.x < arrowpos ? 1 : 2\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin\n    return aid && this.atoms.get(aid)?.fragment\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup))\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2'\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE'\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string\n  position: Point\n  pos: Array<Point>\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()]\n  }\n\n  return positions.map((position) => new Vec2(position))\n}\n\nexport class Text {\n  content: string\n  position: Vec2\n  pos: Array<Vec2>\n\n  constructor(attributes?: TextAttributes) {\n    this.pos = preparePositions(attributes?.pos)\n    this.content = attributes?.content || ''\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2()\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || []\n  }\n\n  clone(): Text {\n    return new Text(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n}\n\nexport class Highlight {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes\n    this.color = color\n    this.atoms = atoms\n    this.bonds = bonds\n  }\n}\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { cloneDeepWith, cloneDeep } from 'lodash'\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value)\n    clonedValue.y = -clonedValue.y\n    return clonedValue\n  }\n}\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer)\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data)\n  }\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value\n  }\n}\n","export function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number\n  if (typeof value === 'number') {\n    parsedValue = value\n  } else {\n    parsedValue = parseFloat(value)\n  }\n  return parsedValue.toFixed(8)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events'\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE'\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING)\n  try {\n    const res = await action()\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS)\n    return res\n  } catch {\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE)\n    return undefined\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\n\nexport function headerToKet(struct: Struct): any {\n  const header = {}\n\n  ifDef(header, 'moleculeName', struct.name, '')\n  ifDef(header, 'creatorProgram', null, '')\n  ifDef(header, 'comment', null, '')\n\n  return Object.keys(header).length !== 0 ? header : null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = []\n  let rgi\n  let val\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1\n      res.push(val) // push the string\n    }\n  }\n  return res\n}\n\nexport function moleculeToKet(struct: Struct): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      if (atom.label === 'R#') return rglabelToKet(atom)\n      if (atom.label === 'L#') return atomListToKet(atom)\n      return atomToKet(atom)\n    })\n  }\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet)\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup)\n    )\n  }\n\n  const fragment = struct.frags.get(0)\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null)\n  }\n  return {\n    type: 'molecule',\n    ...body\n  }\n}\n\nfunction atomToKet(source) {\n  const result = {}\n  ifDef(result, 'label', source.label)\n  ifDef(result, 'alias', source.alias)\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'charge', source.charge, 0)\n  ifDef(result, 'explicitValence', source.explicitValence, -1)\n  ifDef(result, 'isotope', source.isotope, 0)\n  ifDef(result, 'radical', source.radical, 0)\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null)\n  ifDef(result, 'stereoParity', source.stereoCare, 0)\n  ifDef(result, 'weight', source.weight, 0)\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0)\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0)\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false)\n  ifDef(result, 'hCount', source.hCount, 0)\n  // reaction\n  ifDef(result, 'mapping', parseInt(source.aam), 0)\n  ifDef(result, 'invRet', source.invRet, 0)\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false)\n  return result\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`\n  )\n  ifDef(result, '$refs', refsToRGroups)\n\n  return result\n}\n\nfunction atomListToKet(source) {\n  const result = {\n    type: 'atom-list'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  ifDef(result, 'elements', source.atomList.labelList())\n  ifDef(result, 'notList', source.atomList.notList, false)\n  return result\n}\n\nfunction bondToKet(source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', [source.begin, source.end])\n  ifDef(result, 'stereo', source.stereo, 0)\n  ifDef(result, 'topology', source.topology, 0)\n  ifDef(result, 'center', source.reactingCenterStatus, 0)\n\n  return result\n}\n\nfunction sgroupToKet(struct, source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', source.atoms)\n\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1)\n      break\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n')\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht'\n      )\n      break\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '')\n      ifDef(result, 'expanded', source.data.expanded)\n      ifDef(result, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      const data = source.data\n      ifDef(result, 'placement', data.absolute, true)\n      ifDef(result, 'display', data.attached, false)\n      ifDef(result, 'context', data.context)\n      ifDef(result, 'fieldName', data.fieldName)\n      ifDef(result, 'fieldData', data.fieldValue)\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source))\n      break\n    }\n    default:\n      break\n  }\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport { ifDef } from 'utilities'\n\nexport function toRlabel(values) {\n  let res = 0\n  values.forEach((val) => {\n    const rgi = val - 1\n    res |= 1 << rgi\n  })\n  return res\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = new Struct()\n  ketItem.atoms.forEach((atom) => {\n    if (atom.type === 'rg-label') struct.atoms.add(rglabelToStruct(atom))\n    if (atom.type === 'atom-list') struct.atoms.add(atomListToStruct(atom))\n    if (!atom.type) struct.atoms.add(atomToStruct(atom))\n  })\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)))\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroup) =>\n      struct.sgroups.add(sgroupToStruct(sgroup))\n    )\n  }\n\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.markFragments()\n  struct.bindSGroupsToFunctionalGroups()\n\n  return struct\n}\n\nexport function atomToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'label', source.label)\n  ifDef(params, 'alias', source.alias)\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'charge', source.charge)\n  ifDef(params, 'explicitValence', source.explicitValence)\n  ifDef(params, 'isotope', source.isotope)\n  ifDef(params, 'radical', source.radical)\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel)\n  ifDef(params, 'stereoParity', source.stereoParity)\n  ifDef(params, 'weight', source.weight)\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount)\n  ifDef(params, 'substitutionCount', source.substitutionCount)\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)))\n  ifDef(params, 'hCount', source.hCount)\n  // reaction\n  ifDef(params, 'aam', source.mapping)\n  ifDef(params, 'invRet', source.invRet)\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)))\n  return new Atom(params)\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {}\n  params.label = 'R#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const rglabel = toRlabel(source.$refs.map((el) => parseInt(el.slice(3))))\n  ifDef(params, 'rglabel', rglabel)\n  return new Atom(params)\n}\n\nexport function atomListToStruct(source) {\n  const params: any = {}\n  params.label = 'L#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const ids = source.elements\n    .map((el) => Elements.get(el)?.number)\n    .filter((id) => id)\n  ifDef(params, 'atomList', {\n    ids,\n    notList: source.notList\n  })\n  return new Atom(params)\n}\n\nexport function bondToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'type', source.type)\n  ifDef(params, 'topology', source.topology)\n  ifDef(params, 'reactingCenterStatus', source.center)\n  ifDef(params, 'stereo', source.stereo)\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0])\n  ifDef(params, 'end', source.atoms[1])\n\n  return new Bond(params)\n}\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type)\n  ifDef(sgroup, 'atoms', source.atoms)\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul)\n      break\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript)\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase())\n      break\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name)\n      ifDef(sgroup.data, 'expanded', source.expanded)\n      ifDef(sgroup, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement)\n      ifDef(sgroup.data, 'attached', source.display)\n      ifDef(sgroup.data, 'context', source.context)\n      ifDef(sgroup.data, 'fieldName', source.fieldName)\n      ifDef(sgroup.data, 'fieldValue', source.fieldData)\n      break\n    }\n    default:\n      break\n  }\n  return sgroup\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, SGroup, Struct, Vec2 } from 'domain/entities'\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: any = []\n\n  const rgFrags = new Set() // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid))\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile()\n    )\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup }\n    })\n  }\n\n  Array.from(struct.frags.keys())\n    .filter((fid) => !rgFrags.has(fid))\n    .forEach((fid) => {\n      const fragAtoms = struct.getFragmentIds(fid)\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(fragAtoms),\n        center: getFragmentCenter(struct, fragAtoms)\n      })\n    })\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height\n      }\n    })\n  })\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {}\n    })\n  })\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos\n      }\n    })\n  })\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos\n      }\n    })\n  })\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values())\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined)\n      )\n      const filteredSGroupsMap = new Map()\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg)\n      })\n      ketNode.fragment.sgroups = filteredSGroupsMap\n    }\n  })\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet)\n  return Vec2.centre(bb.min, bb.max)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\nimport { moleculeToKet } from './moleculeToKet'\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct)\n  }\n\n  return {\n    ...body,\n    type: 'rgroup'\n  }\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {}\n\n  ifDef(result, 'number', rgnumber)\n  ifDef(result, 'range', rglogic.range, '')\n  ifDef(result, 'resth', rglogic.resth, false)\n  ifDef(result, 'ifthen', rglogic.ifthen, 0)\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\nimport { moleculeToStruct } from './moleculeToStruct'\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem)\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic)\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key)\n  })\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup)\n  return struct\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {}\n  ifDef(params, 'range', rglogic.range)\n  ifDef(params, 'resth', rglogic.resth)\n  ifDef(params, 'ifthen', rglogic.ifthen)\n\n  return new RGroup(params)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    struct.rxnArrows.add(new RxnArrow(getNodeWithInvertedYCoord(ketItem.data)))\n  } else {\n    struct.rxnPluses.add(\n      new RxnPlus({\n        pp: {\n          x: ketItem.location[0],\n          y: -ketItem.location[1],\n          z: ketItem.location[2]\n        }\n      })\n    )\n  }\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data\n  struct.simpleObjects.add(new SimpleObject(getNodeWithInvertedYCoord(object)))\n  return struct\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0])\n  const pos0 = ketItem.data.pos[0]\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius)\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius)\n      }\n    ]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const object = getNodeWithInvertedYCoord(ketItem.data)\n  struct.texts.add(new Text(object))\n\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Ajv from 'ajv'\nimport schema from './schema.json'\n\nexport function validate(ket: any): boolean {\n  const ajv = new Ajv()\n  const validate = ajv.compile(schema)\n  return validate(ket)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities'\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet'\n\nimport { Serializer } from '../serializers.types'\nimport { headerToKet } from './toKet/headerToKet'\nimport { moleculeToKet } from './toKet/moleculeToKet'\nimport { moleculeToStruct } from './fromKet/moleculeToStruct'\nimport { prepareStructForKet } from './toKet/prepare'\nimport { rgroupToKet } from './toKet/rgroupToKet'\nimport { rgroupToStruct } from './fromKet/rgroupToStruct'\nimport { rxnToStruct } from './fromKet/rxnToStruct'\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet'\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct'\nimport { textToKet } from './toKet/textToKet'\nimport { textToStruct } from './fromKet/textToStruct'\nimport { validate } from './validate'\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'plus': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct)\n      break\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node)\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition)\n      }\n\n      currentStruct.mergeInto(struct)\n      break\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct)\n      break\n    }\n    case 'text': {\n      textToStruct(node, struct)\n      break\n    }\n    default:\n      break\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserialize(content: string): Struct {\n    const resultingStruct = new Struct()\n    const ket = JSON.parse(content)\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.')\n    }\n    const nodes = ket.root.nodes\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct)\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct)\n    })\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null\n\n    return resultingStruct\n  }\n\n  serialize(struct: Struct): string {\n    const result: any = {\n      root: {\n        nodes: []\n      }\n    }\n\n    const header = headerToKet(struct)\n    if (header) result.header = header\n\n    const ketNodes = prepareStructForKet(struct)\n\n    let moleculeId = 0\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` })\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment)\n          break\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` })\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment,\n            item.data\n          )\n          break\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item))\n          break\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item))\n          break\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item))\n          break\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item))\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return JSON.stringify(result, null, 4)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment\n} from 'domain/entities'\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number)\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.') // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit')\n\n  return numStr.padStart(width)\n}\n\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10)\n\n  return isNaN(val) ? 0 : val // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength))\n    if (withspace) shift++\n  }\n  return res\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [0, +3, +2, +1, 0, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount'\n  },\n  rxnItemsPartition: [3, 3, 3]\n}\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3\n}\n\nconst SHOULD_RESCALE_MOLECULES = true\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct()\n  const bbReact = []\n  const bbAgent = []\n  const bbProd = []\n  const molReact = []\n  const molAgent = []\n  const molProd = []\n  let j\n  const bondLengthData = { cnt: 0, totalLength: 0 }\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j]\n    const bondLengthDataMol = mol.getBondLengthData()\n    bondLengthData.cnt += bondLengthDataMol.cnt\n    bondLengthData.totalLength += bondLengthDataMol.totalLength\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt)\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j]\n      mol.scale(avgBondLength)\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j]\n    const bb = mol.getCoordBoundingBoxObj()\n    if (!bb) continue // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb)\n      molReact.push(mol)\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb)\n      molAgent.push(mol)\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb)\n      molProd.push(mol)\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType\n    })\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2\n    )\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n    bb.min.add_(d) // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d) // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret)\n    return bb.max.x - bb.min.x\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0\n    }\n    xorig += 2.0\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0\n    }\n    xorig += 2.0\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret)\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret)\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret)\n  }\n\n  let bb1\n  let bb2\n  let x\n  let y\n  let bbReactAll = null\n  let bbProdAll = null\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j]\n    bb2 = bbReact[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {}\n      bbReactAll.max = new Vec2(bbReact[j].max)\n      bbReactAll.min = new Vec2(bbReact[j].min)\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max)\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min)\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j]\n    bb2 = bbProd[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {}\n      bbProdAll.max = new Vec2(bbProd[j].max)\n      bbProdAll.min = new Vec2(bbProd[j].min)\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max)\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min)\n    }\n  }\n  bb1 = bbReactAll\n  bb2 = bbProdAll\n  const defaultArrowLength = 2\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)]\n      })\n    )\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null\n    const defaultOffset = 3\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y)\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y)\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5)\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd]\n      })\n    )\n  }\n  ret.isReaction = true\n  return ret\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct()\n\n  scaffold.mergeInto(ret, null, null, false, true)\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10)\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j]\n      ctab.rgroups.set(rgid, new RGroup())\n      const frag = new Fragment()\n      const frid = ctab.frags.add(frag)\n      ctab.rgroups.get(rgid).frags.add(frid)\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      ctab.mergeInto(ret)\n    }\n  })\n\n  return ret\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2 } from 'domain/entities'\n\nimport utils from './utils'\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool()\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2])\n\n    ret.set(key, value)\n  }\n\n  return ret\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = []\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2])\n      /* eslint-enable no-mixed-operators */\n    ])\n  }\n  return ret\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0\n  const atomReductionMap = {}\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap)\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap)\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m] // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing')\n      atomReductionMap[raid] = sgroup.patoms[m] // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms)\n\n  const patomsMap = identityMap(sgroup.patoms)\n\n  const bondsToRemove = []\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap\n    const endIn = bond.end in atomReductionMap\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid)\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin]\n    else if (endIn) bond.end = atomReductionMap[bond.end]\n  }, sgroup)\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b])\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a)\n    atomMap[a] = -1\n  }\n  sgroup.atoms = sgroup.patoms\n  sgroup.patoms = null\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase()\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim()\n  sgroup.data.subscript = ''\n}\n\nfunction postLoadGen(sgroup, mol, atomMap) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms))\n  }\n}\n\nfunction postLoadMon(sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen\n  }\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg)\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap)\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id)\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, [])\n  else mol.sGroupForest.insert(sg)\n\n  return sg.id\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true)\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type)\n    sg.number = key\n    sGroups[key] = sg\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric)\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    ;(core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key)\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1\n  const num = utils.parseDecimalInt(propData.slice(4, 8))\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true))\n\n  if (part.length !== num) throw new Error('File format invalid')\n  if (shift) part = part.map((v) => v + shift)\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part)\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false)\n  const id = utils.parseDecimalInt(split[0]) - 1\n  const fieldName = split[1].trim()\n  const fieldType = split[2].trim()\n  const units = split[3].trim()\n  const query = split[4].trim()\n  const queryOp = split[5].trim()\n  const sGroup = sGroups[id]\n  sGroup.data.fieldType = fieldType\n  sGroup.data.fieldName = fieldName\n  sGroup.data.units = units\n  sGroup.data.query = query\n  sGroup.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */\n    ],\n    false\n  )\n\n  const x = parseFloat(split[0])\n  const y = parseFloat(split[1])\n  const attached = split[3].trim() === 'A'\n  const absolute = split[4].trim() === 'A'\n  const showUnits = split[5].trim() === 'U'\n  let nCharsToDisplay = split[7].trim()\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay)\n  const tagChar = split[10].trim()\n  const daspPos = utils.parseDecimalInt(split[11].trim())\n\n  sg.pp = new Vec2(x, -y)\n  sg.data.attached = attached\n  sg.data.absolute = absolute\n  sg.data.showUnits = showUnits\n  sg.data.nCharsToDisplay = nCharsToDisplay\n  sg.data.tagChar = tagChar\n  sg.data.daspPos = daspPos\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1\n  const sg = sGroups[id]\n  applyDataSGroupInfo(sg, propData.substr(5))\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue)\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2\n      )\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1\n  const data = propData.substr(5)\n  const sg = sGroups[id]\n  applyDataSGroupData(sg, data, finalize)\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = []\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j])\n  }\n  return ret\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '')\n}\n\nfunction identityMap(array) {\n  const map = {}\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i]\n  return map\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition\n  )\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2])\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16])\n  }\n  return new Atom(params)\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition\n  )\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6])\n  }\n\n  return new Bond(params)\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition\n  )\n\n  const number = utils.parseDecimalInt(split[0]) - 1\n  const notList = split[2].trim() === 'T'\n  const count = utils.parseDecimalInt(split[4].trim())\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength)\n  const list = []\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1)\n    )\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list\n    })\n  }\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool()\n\n  while (shift < end) {\n    const line = ctabLines[shift]\n    if (line.charAt(0) === 'A') {\n      let propValue = ctabLines[++shift]\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue)\n      if (isPseudo && !props.get('pseudo')) props.set('pseudo', new Pool())\n      if (!isPseudo && !props.get('alias')) props.set('alias', new Pool())\n      if (isPseudo) propValue = propValue.replace(/'/g, '')\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3, 6)) - 1, propValue)\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6)\n      let propertyData = line.slice(6)\n      if (type === 'END') {\n        break\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount')) {\n          props.set('substitutionCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData))\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool())\n        const rglabels = props.get('rglabel')\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData)\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri]\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1))\n          )\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4)\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim())\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim())\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim())\n        const ooo = propertyData.slice(12).trim()\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[rgid] = logic\n      } else if (type === 'APO') {\n        if (!props.get('attpnt')) {\n          props.set('attpnt', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false)\n        )\n\n        if (!props.get('atomList')) props.set('atomList', new Pool())\n        if (!props.get('label')) props.set('label', new Pool())\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#')\n          props.get('atomList').set(aid, atomList)\n        })\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData)\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData)\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true)\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true)\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData)\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1)\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1)\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1)\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1\n        sGroups[sid].data.subscript = propertyData.slice(4).trim()\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData)\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData)\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false)\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true)\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ')\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1\n          sGroups[sGroupId].data.expanded = true\n        })\n      }\n    }\n    ++shift\n  }\n  return props\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal\n  })\n}\n\nfunction parseCTabV2000(ctabLines, countsSplit) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n  let i\n  const atomCount = utils.parseDecimalInt(countsSplit[0])\n  const bondCount = utils.parseDecimalInt(countsSplit[1])\n  const atomListCount = utils.parseDecimalInt(countsSplit[2])\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1\n  const isAnd = utils.parseDecimalInt(countsSplit[4]) === 0\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5])\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10])\n  let shift = 0\n  const atomLines = ctabLines.slice(shift, shift + atomCount)\n  shift += atomCount\n  const bondLines = ctabLines.slice(shift, shift + bondCount)\n  shift += bondCount\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount)\n  shift += atomListCount + stextLinesCount\n\n  const atoms = atomLines.map(parseAtomLine)\n  atoms.forEach((atom) => ctab.atoms.add(atom))\n\n  const bonds = bondLines.map(parseBondLine)\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`\n    }\n    ctab.bonds.add(bond)\n  })\n\n  const atomLists = atomListLines.map(parseAtomListLine)\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList\n    ctab.atoms.get(pair.aid).label = 'L#'\n  })\n\n  const sGroups = {}\n  const rLogic = {}\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic\n  )\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId)\n  })\n\n  const atomMap = {}\n  let sid\n  for (sid in sGroups) {\n    const sg = sGroups[sid]\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1]\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms)\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap)\n  const emptyGroups = []\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap)\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid)\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i])\n    ctab.sgroups.delete(emptyGroups[i])\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10)\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n  }\n  return ctab\n}\n\nfunction parseRg2000(/* string[] */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7)\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid')\n  let i = 1\n  while (ctabLines[i].charAt(0) !== '$') i++\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid')\n  }\n  const coreLines = ctabLines.slice(1, i)\n  ctabLines = ctabLines.slice(i + 1)\n  const fragmentLines = {}\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n    let line = ctabLines[0].trim()\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1)\n      break\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid')\n\n    const rgid = parseInt(ctabLines[1].trim(), 10)\n    fragmentLines[rgid] = []\n    ctabLines = ctabLines.slice(2)\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n      line = ctabLines[0].trim()\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1)\n        break\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid')\n      i = 1\n      while (ctabLines[i].charAt(0) !== '$') i++\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid')\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i))\n      ctabLines = ctabLines.slice(i + 1)\n    }\n  }\n\n  const core = parseCTab(coreLines)\n  const frag = {}\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10)\n      frag[id] = []\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j]))\n      }\n    }\n  }\n  return utils.rgMerge(core, frag)\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition\n  )\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit[2] - 0\n  ctabLines = ctabLines.slice(1) // consume counts line\n  const mols = []\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1)\n    let n = 0\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++\n\n    const lines = ctabLines.slice(0, n)\n    var struct\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines)\n    } else {\n      struct = parseCTab(lines.slice(3))\n      struct.name = lines[0].trim()\n    }\n    mols.push(struct)\n    ctabLines = ctabLines.slice(n)\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n}\n\nfunction parseCTab(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  ctabLines = ctabLines.slice(1)\n  return parseCTabV2000(ctabLines, countsSplit)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1\n  const count = utils.parseDecimalInt(hdr[2])\n  const notList = hdr[4].trim() === 'T'\n  const ids = labelsListToIds(lst.slice(0, count))\n  const ret = new Pool()\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids\n    })\n  )\n  return ret\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4])\n    ),\n    aam: split[5].trim()\n  }\n  let label = split[1].trim()\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2)\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1) // remove ']'\n    const atomListParams = {}\n    atomListParams.notList = false\n    const matchNotListInfo = label.match(/NOT ?\\[/)\n    if (matchNotListInfo) {\n      atomListParams.notList = true\n      const [matchedSubstr] = matchNotListInfo\n      label = label.substr(matchedSubstr.length) // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\")\n    } else {\n      label = label.substr(1) // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','))\n    params.atomList = new AtomList(atomListParams)\n    params.label = 'L#'\n  } else {\n    params.label = label\n  }\n  split.splice(0, 6)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value)\n      if (key === 'VAL') {\n        if (ival === 0) continue // eslint-disable-line no-continue\n        if (ival === -1) ival = 0\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2)\n      const rgrsplit = value.split(' ').slice(1)\n      params.rglabel = 0\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1)\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0\n    }\n  }\n\n  return new Atom(params)\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])]\n  }\n  split.splice(0, 4)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)]\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)]\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value)\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value)\n    }\n  }\n  return new Bond(params)\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++\n  shift++\n  return shift\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = ''\n  shift++\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim()\n    if (line.trim() === 'END SGROUP') return shift\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim()\n    }\n    const split = splitSGroupDef(line)\n    const type = split[1]\n    const sg = new SGroup(type)\n    sg.number = split[0] - 0\n    sg.type = type\n    sg.label = split[2] - 0\n    sgroups[sg.number] = sg\n    const props = {}\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=')\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\"\n        )\n      }\n      const name = subsplit[0]\n      if (!(name in props)) props[name] = []\n      props[name].push(subsplit[1])\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1)\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1)\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : []\n    const brkxyzStrs = props.BRKXYZ\n    sg.brkxyz = []\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]))\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim()\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase()\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]))\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true)\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0])\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0])\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0])\n    sGroup.loadSGroup(ctab, sg, atomMap)\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0])\n  }\n  throw new Error('S-group declaration incomplete.')\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n\n  let shift = 0\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid')\n  }\n  const vals = ctabLines[shift].slice(14).split(' ')\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1\n  shift++\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++\n    let line\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim()\n      if (line === 'END ATOM') break\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim()\n      }\n      ctab.atoms.add(parseAtomLineV3000(line))\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim()\n        if (line === 'END BOND') break\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim()\n        }\n        const bond = parseBondLineV3000(line)\n        if (bond.stereo && isAbs) ctab.atoms.get(bond.begin).stereoLabel = 'abs'\n        ctab.bonds.add(bond)\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {}\n    const atomMap = {}\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift)\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift)\n      } else throw Error('CTAB V3000 invalid')\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift))\n\n  return ctab\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {}\n  const rLogic = {}\n  let shift = 0\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop()\n    rfrags[id] = []\n    rLogic[id] = {}\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim()\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13)\n        const rlsplit = line.trim().split(/\\s+/g)\n        const iii = utils.parseDecimalInt(rlsplit[0])\n        const hhh = utils.parseDecimalInt(rlsplit[1])\n        const ooo = rlsplit.slice(2).join(' ')\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[id] = logic\n        shift++\n        continue // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid')\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1)\n      const rfrag = parseCTabV3000(lines, true)\n      rfrags[id].push(rfrag)\n      shift = shift + i + 1\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++\n        break\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n      const frid = rg.frags.add({})\n      rg.rgroups.get(rgid).frags.add(frid)\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      rg.mergeInto(ctab)\n    })\n  })\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3)\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j\n    }\n\n    return console.error('CTab format invalid')\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j\n    }\n    return console.error('CTab format invalid')\n  }\n\n  const molLinesReactants = []\n  const molLinesProducts = []\n  let current = null\n  const rGroups = []\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim()\n    var j\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i)\n      rGroups.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i)\n      current.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else {\n      throw new Error('line unrecognized: ' + line)\n    }\n  }\n  const mols = []\n  const molLines = molLinesReactants.concat(molLinesProducts)\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit)\n    mols.push(mol)\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = []\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k])\n      return res\n    })(rGroups)\n  )\n\n  return ctab\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let bracketEquality = 0\n  let currentIndex = 0\n  let firstSliceIndex = -1\n  let quoted = false\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex]\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']')\n      split.push(line.slice(currentIndex, closingBracketIndex + 1))\n      currentIndex = closingBracketIndex + 1\n      firstSliceIndex = currentIndex\n    } else if (currentSymbol === '(') bracketEquality += 1\n    else if (currentSymbol === ')') bracketEquality -= 1\n    else if (currentSymbol === '\"') quoted = !quoted\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex))\n      }\n      firstSliceIndex = currentIndex\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex))\n  }\n  return split\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2)\n  }\n  return str\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim)\n  return [line.slice(0, p), line.slice(p + 1)]\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let braceBalance = 0\n  let quoted = false\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i)\n    if (c === '\"') {\n      quoted = !quoted\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++\n      } else if (c === ')') {\n        braceBalance--\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i))\n        line = line.slice(i + 1).trim()\n        i = 0\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!')\n  }\n  if (line.length > 0) split.push(line.trim())\n  return split\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null\n  const list = []\n  line = line.trim()\n  line = line.substr(1, line.length - 2)\n  const split = line.split(' ')\n  shift = shift || 0\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i])\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift)\n    }\n  }\n\n  return list\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid')\n  return line.slice(7)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile, SGroup } from 'domain/entities'\n\nimport utils from './utils'\nimport v2000 from './v2000'\nimport v3000 from './v3000'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines)\n    struct.name = ctabLines[3].trim()\n    return struct\n  }\n  const struct = parseCTab(ctabLines.slice(3))\n  struct.name = ctabLines[0].trim()\n  return struct\n}\n\nfunction parseCTab(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  const version = countsSplit[11].trim()\n  ctabLines = ctabLines.slice(1)\n  if (version === 'V2000') return v2000.parseCTabV2000(ctabLines, countsSplit)\n  else if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments)\n  } else throw new Error('Molfile version unknown: ' + version) // eslint-disable-line no-else-return\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ')\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout)\n  }\n\n  const struct = v2000.parseRxn2000(ctabLines, shouldReactionRelayout)\n  struct.name = ctabLines[1].trim()\n  return struct\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving\n}\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number'\n    }\n  }\n  sgroup.bonds = xBonds\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  sgroup.bonds = xBonds\n}\n\nfunction prepareGenForSaving(sgroup, mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup)\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile\n}\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap\n    )\n  ) // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap\n    )\n  )\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul\n  lines.push(smtLine)\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  if (sgroup.data.name && sgroup.data.name !== '') {\n    lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name)\n  }\n  return lines.join('\\n')\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  const data = sgroup.data\n  let pp = sgroup.pp\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms))\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2)\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65)\n  }\n\n  lines.push(sdtLine)\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  ' // oo\n  lines.push(sddLine)\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '')\n  const charsPerLine = 69\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine))\n      chars = chars.slice(charsPerLine)\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars)\n  })\n  return lines.join('\\n')\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return []\n  const lines = []\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15) // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2)\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3)\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine)\n  }\n  return lines\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms)\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet)\n  SGroup.bracketPos(sg, mol, crossBonds)\n  const bb = sg.bracketBox\n  const d = sg.bracketDir\n  const n = d.rotateSC(1, 0)\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n\n  )\n  const lines = []\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement()\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement()\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3)\n    const coord = [a0.x, a0.y, a1.x, a1.y]\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4)\n    }\n    lines.push(line)\n  }\n  return lines\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n')\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { StereoFlag, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport common from './common'\nimport utils from './utils'\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0'\n\ntype Mapping = {\n  [key in number]: number\n}\ntype NumberTuple = [number, number]\n\nexport class Molfile {\n  molecule: Struct | null\n  molfile: string | null\n  reaction: boolean\n  mapping: Mapping\n  bondMapping: Mapping\n\n  constructor() {\n    this.molecule = null\n    this.molfile = null\n\n    this.reaction = false\n    this.mapping = {}\n    this.bondMapping = {}\n  }\n\n  parseCTFile(molfileLines: string[], shouldReactionRelayout?: boolean) {\n    let ret\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(molfileLines, shouldReactionRelayout)\n    } else {\n      ret = common.parseMol(molfileLines)\n    }\n    ret.initHalfBonds()\n    ret.initNeighbors()\n    ret.bindSGroupsToFunctionalGroups()\n\n    return ret\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule\n    const toRemove: any[] = []\n    let errors = 0\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!\n        let errorIgnore = false\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol)\n        } catch (ex: any) {\n          if (!skipErrors || typeof ex.id !== 'number') {\n            throw new Error(`Error: ${ex.message}`)\n          }\n          errorIgnore = true\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore\n          toRemove.push(sgroup.id)\n        }\n      }, this)\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.'\n      )\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i])\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone()\n    this.prepareSGroups(false, false)\n    this.molfile = ''\n    this.writeCTab2000(rgroups)\n    return this.molfile\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow()\n    this.molfile = '' + molecule.name\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment'\n        )\n      }\n      const components = molecule.getComponents()\n\n      const reactants = components.reactants\n      const products = components.products\n      const all = reactants.concat(products)\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n'\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile()\n        const submol = molecule.clone(all[i], null, true)\n        const molfile = saver.saveMolecule(submol, false, true)\n        this.molfile += '$MOL\\n' + molfile\n      }\n      return this.molfile\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold()\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups\n        )\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n'\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n'\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n'\n          this.writePaddedNumber(rgid, 3)\n          this.molfile += '\\n'\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid))\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n'\n          })\n          this.molfile += '$END RGP\\n'\n        })\n        this.molfile += '$END MOL\\n'\n\n        return this.molfile\n      }\n    }\n\n    this.molecule = molecule.clone()\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc)\n\n    this.writeHeader()\n    this.writeCTab2000()\n\n    return this.molfile\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date()\n\n    this.writeCR() // TODO: write structure name\n    this.writeWhiteSpace(2)\n    this.write('Ketcher')\n    this.writeWhiteSpace()\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000\n    )\n    this.writeCR()\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = ''\n    }\n\n    this.molfile += str + '\\n'\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)))\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str)\n    this.writeWhiteSpace(width - str.length)\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString()\n\n    this.writeWhiteSpace(width - str.length)\n    this.write(str)\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision))\n  }\n\n  writeCTab2000Header() {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3)\n    this.writePaddedNumber(this.molecule!.bonds.size, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false\n    )\n    this.writePaddedNumber(isAbsFlag ? 1 : 0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(999, 3)\n    this.writeCR(' V2000')\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header()\n\n    this.mapping = {}\n    let i = 1\n\n    const atomsIds: number[] = []\n    const atomsProps: {\n      id: number\n      value: string\n    }[] = []\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label\n      if (atom.atomList != null) {\n        label = 'L'\n        atomsIds.push(id)\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A'\n          atomsProps.push({ id, value: `'${atom.pseudo}'` })\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias })\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C'\n        atomsProps.push({ id, value: atom.label })\n      }\n\n      this.writeAtom(atom, label)\n\n      this.mapping[id] = i++\n    }, this)\n\n    this.bondMapping = {}\n    i = 1\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++\n      this.writeBond(bond)\n    }, this)\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0])\n      atomsProps.splice(0, 1)\n    }\n\n    const chargeList: NumberTuple[] = []\n    const isotopeList: NumberTuple[] = []\n    const radicalList: NumberTuple[] = []\n    const rglabelList: NumberTuple[] = []\n    const rglogicList: string[] = []\n    const aplabelList: NumberTuple[] = []\n    const rbcountList: NumberTuple[] = []\n    const unsaturatedList: NumberTuple[] = []\n    const substcountList: NumberTuple[] = []\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0) {\n        chargeList.push([id, atom.charge])\n      }\n      if (atom.isotope !== 0) {\n        isotopeList.push([id, atom.isotope])\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical])\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1])\n          }\n        }\n      }\n      if (atom.attpnt != null) {\n        aplabelList.push([id, atom.attpnt])\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount])\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount])\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom])\n      }\n    })\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range\n          rglogicList.push(line)\n        }\n      })\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList)\n    this.writeAtomPropList('M  ISO', isotopeList)\n    this.writeAtomPropList('M  RAD', radicalList)\n    this.writeAtomPropList('M  RGP', rglabelList)\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n')\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList)\n    this.writeAtomPropList('M  RBC', rbcountList)\n    this.writeAtomPropList('M  SUB', substcountList)\n    this.writeAtomPropList('M  UNS', unsaturatedList)\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j]\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!\n        this.write('M  ALS')\n        this.writePaddedNumber(atomId + 1, 4)\n        this.writePaddedNumber(atomList.ids.length, 3)\n        this.writeWhiteSpace()\n        this.write(atomList.notList ? 'T' : 'F')\n\n        const labelList = atomList.labelList()\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace()\n          this.writePadded(labelList[k], 3)\n        }\n        this.writeCR()\n      }\n    }\n\n    const sgmap = {}\n    let cnt = 1\n    const sgmapback = {}\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS()\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id\n      sgmap[id] = cnt++\n    })\n    for (let q = 1; q < cnt; ++q) {\n      // each group on its own\n      const id = sgmapback[q]\n      const sgroup = this.molecule!.sgroups.get(id)!\n      this.write('M  STY')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePadded(sgroup.type, 3)\n      this.writeCR()\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeCR()\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!\n      if (parentId >= 0) {\n        this.write('M  SPL')\n        this.writePaddedNumber(1, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(sgmap[parentId], 3)\n        this.writeCR()\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${q.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`\n\n        this.write('M  SCN')\n        this.writePaddedNumber(1, 3)\n        this.write(connectivity.toUpperCase())\n        this.writeCR()\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ')\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace()\n        this.write(sgroup.data.subscript || 'n')\n        this.writeCR()\n      }\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping\n        )\n      )\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = []\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.data.expanded) expandedGroups.push(sg.id + 1)\n    })\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`\n      this.writeCR(expandedGroupsLine)\n    }\n\n    this.writeCR('M  END')\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4)\n    this.writePaddedFloat(-atom.pp.y, 10, 4)\n    this.writePaddedFloat(atom.pp.z, 10, 4)\n    this.writeWhiteSpace()\n    this.writePadded(atomLabel, 3)\n    this.writePaddedNumber(0, 2)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0\n    }\n    this.writePaddedNumber(atom.hCount, 3)\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0\n    }\n    this.writePaddedNumber(atom.stereoCare, 3)\n\n    let number: number\n    if (atom.explicitValence < 0) {\n      number = 0\n    } else if (atom.explicitValence === 0) {\n      number = 15\n    } else {\n      number = atom.explicitValence\n    }\n    this.writePaddedNumber(number, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0\n    }\n    this.writePaddedNumber(atom.aam, 3)\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0\n    }\n    this.writePaddedNumber(atom.invRet, 3)\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3)\n\n    this.writeCR()\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3)\n    this.writePaddedNumber(this.mapping[bond.end], 3)\n    this.writePaddedNumber(bond.type, 3)\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0\n    }\n    this.writePaddedNumber(bond.stereo, 3)\n\n    this.writePadded(bond.xxx, 3)\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0\n    }\n    this.writePaddedNumber(bond.topology, 3)\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3)\n\n    this.writeCR()\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ')\n    this.writePaddedNumber(props.id + 1, 3)\n    this.writeCR()\n    this.writeCR(props.value)\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = []\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0])\n        values.splice(0, 1)\n      }\n\n      this.write(propId)\n      this.writePaddedNumber(part.length, 3)\n\n      part.forEach((value) => {\n        this.writeWhiteSpace()\n        this.writePaddedNumber(this.mapping[value[0]], 3)\n        this.writeWhiteSpace()\n        this.writePaddedNumber(value[1], 3)\n      })\n\n      this.writeCR()\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types'\nimport { Molfile } from './molfile'\nimport { Serializer } from '../serializers.types'\nimport { Struct } from 'domain/entities'\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false\n  }\n\n  readonly options: MolSerializerOptions\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile()\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g)\n    try {\n      return molfile.parseCTFile(lines, this.options.reactionRelayout)\n    } catch (ex) {\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile(\n            lines.slice(1),\n            this.options.reactionRelayout\n          )\n        } catch (ex1) {\n          //\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile(\n            [''].concat(lines),\n            this.options.reactionRelayout\n          )\n        } catch (ex2) {\n          //\n        }\n      }\n      throw ex\n    }\n  }\n\n  serialize(struct: Struct): string {\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities'\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.bonds = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2\n}\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func)\n}\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity\n}\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents\n}\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end)\n  const norm = new Vec2(-diff.y, diff.x)\n\n  if (!norm.normalize()) return 0\n\n  const normBeg = Vec2.diff(neiBeg, beg)\n  const normEnd = Vec2.diff(neiEnd, end)\n\n  if (!normBeg.normalize()) return 0\n  if (!normEnd.normalize()) return 0\n\n  const prodBeg = Vec2.dot(normBeg, norm)\n  const prodEnd = Vec2.dot(normEnd, norm)\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0\n\n  return prodBeg * prodEnd > 0 ? 1 : -1\n}\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp\n  )\n}\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen()\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen()\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen()\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen()\n\n  if (h0 && h1) return false\n  if (h2 && h3) return false\n\n  if (h1) {\n    substituents[1] = -1\n  } else if (h0) {\n    substituents[0] = substituents[1]\n    substituents[1] = -1\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1)\n  }\n\n  if (h3) {\n    substituents[3] = -1\n  } else if (h2) {\n    substituents[2] = substituents[3]\n    substituents[3] = -1\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3)\n  }\n\n  return true\n}\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx)\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false\n\n  const label1 = this.molecule.atoms.get(bond.begin).label\n  const label2 = this.molecule.atoms.get(bond.end).label\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin)\n  const neiEnd = this.getNeighbors.call(this.context, bond.end)\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false\n  }\n\n  substituents[0] = -1\n  substituents[1] = -1\n  substituents[2] = -1\n  substituents[3] = -1\n\n  let i\n  let nei\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false\n  }\n\n  return true\n}\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: []\n    }\n    this.bonds.set(bid, ct)\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return\n\n    if (!this.sortSubstituents(ct.substituents)) return\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2]\n    )\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS\n  })\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default CisTrans\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol\n  this.atom_data = atomData\n  this.components = components\n  this.nComponentsInReactants = -1\n  this.nReactants = nReactants\n\n  this.vertices = new Array(this.molecule.atoms.size) // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc()\n  }, this)\n\n  this.edges = new Array(this.molecule.bonds.size) // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc()\n  }, this)\n\n  this.v_seq = []\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0 // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0 // parent vertex in DFS tree\n  this.parent_edge = 0 // edge to parent vertex\n  this.branches = 0 // how many DFS branches go out from this vertex}\n}\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0 // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0 // 1 if this edge closes a cycle\n}\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx // index of vertex in _graph\n  this.parent_vertex = parVertex // parent vertex in DFS tree\n  this.parent_edge = parEdge // edge to parent vertex\n}\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = []\n  let i, j\n  let cid = 0\n  let component = 0\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n        if (selected === null) {\n          selected = -1\n          cid++\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n      }\n      if (selected === -1) break\n      this.vertices[selected].parent_vertex = -1\n      this.vertices[selected].parent_edge = -1\n      vStack.push(selected)\n      component++\n    }\n\n    const vIdx = vStack.pop()\n    const parentVertex = this.vertices[vIdx].parent_vertex\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge\n    )\n    this.v_seq.push(seqElem)\n\n    this.vertices[vIdx].dfs_state = 2\n\n    const atomD = this.atom_data[vIdx]\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid\n      const edgeIdx = atomD.neighbours[i].bid\n\n      if (neiIdx === parentVertex) continue // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1\n\n        j = vIdx\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex\n        }\n\n        if (j === -1) throw new Error('cycle unwind error')\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++\n        this.vertices[vIdx].branches++\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx)\n        this.v_seq.push(seqElem)\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx)\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack')\n          }\n\n          vStack.splice(j, 1)\n\n          const parent = this.vertices[neiIdx].parent_vertex\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--\n          }\n        }\n\n        this.vertices[vIdx].branches++\n        this.vertices[neiIdx].parent_vertex = vIdx\n        this.vertices[neiIdx].parent_edge = edgeIdx\n        this.vertices[neiIdx].dfs_state = 1\n        vStack.push(neiIdx)\n      }\n    }\n  }\n}\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0\n}\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches\n}\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles\n}\n\nDfs.prototype.toString = function () {\n  let str = ''\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> '\n  })\n  str += '*'\n  return str\n}\n\nexport default Dfs\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities'\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.atoms = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context)\n}\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors\n) {\n  const atoms = this.molecule.atoms\n  const bonds = this.molecule.bonds\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile()\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid)\n    if (neiList.length !== 2) return false\n    const nei1 = neiList[0]\n    const nei2 = neiList[1]\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid)\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid)\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid)\n    return true\n  })\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid)\n      let stereocenter = false\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid)\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true\n            return true\n          }\n        }\n        return false\n      }, this)\n\n      if (!stereocenter) return\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      }\n    })\n  }\n}\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 }\n]\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx)\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx)\n  const degree = neiList.length\n  let implicitDegree = -1\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: []\n  }\n\n  const edgeIds = []\n\n  let lastAtomDir = 0\n  let nDoubleBonds = 0\n\n  stereocenter.pyramid[0] = -1\n  stereocenter.pyramid[1] = -1\n  stereocenter.pyramid[2] = -1\n  stereocenter.pyramid[3] = -1\n\n  let nPureHydrogens = 0\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree)\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid)\n    const bond = this.molecule.bonds.get(nei.bid)\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement()\n    }\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++\n      edgeIds[neiIdx].rank = 10000\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length')\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++\n  })\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree\n      return true\n    }\n    return false\n  })\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)'\n    )\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter')\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter'\n    )\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n\n    var main1 = -1\n    let main2 = -1\n    var side1 = -1\n    var side2 = -1\n    var mainDir = 0\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx\n        mainDir = stereo\n        break\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond')\n    }\n\n    let xyz1, xyz2\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4\n        side1 = (main1 + 1) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 1) % 4\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond')\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec\n    )\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx)\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx)\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx)\n\n    let nUp = 0\n    let nDown = 0\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom')\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom')\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case')\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      }\n\n      mainDir = 0\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP\n      } else {\n        main1 = -1\n        side1 = -1\n        side2 = -1\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx\n            mainDir = dir\n            side1 = (neiIdx + 1) % 3\n            side2 = (neiIdx + 2) % 3\n            break\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond')\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec\n        )\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom')\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      }\n\n      stereocenter.pyramid[3] = -1\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      var dir\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter')\n      } else if (nUp > 0) dir = 1\n      else dir = -1\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      }\n      stereocenter.pyramid[3] = -1\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter)\n}\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx)\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0\n  }\n\n  return bond.stereo\n}\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001\n\n  const sine1 = Vec2.cross(v1, v2)\n  const cosine1 = Vec2.dot(v1, v2)\n\n  const sine2 = Vec2.cross(v1, u)\n  const cosine2 = Vec2.dot(v1, u)\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap')\n    }\n\n    return sine2 > 0 ? 4 : 8\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2\n\n  if (cosine2 < cosine1) return 2\n\n  return 1\n}\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x) // eslint-disable-line no-mixed-operators\n  const eps = 0.001\n\n  if (res > eps) return 1\n  if (res < -eps) return -1\n\n  throw new Error('degenerate triangle')\n}\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice()\n  let rigid = true\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n\n  return rigid\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default Stereocenters\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities'\n\nimport CisTrans from './cis_trans'\nimport Dfs from './dfs'\nimport Stereocenters from './stereocenters'\n\nexport function Smiles() {\n  this.smiles = ''\n  this.writtenAtoms = []\n  this.writtenComponents = 0\n\n  this.ignoreErrors = false\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = [] // Array of integer pairs {a, b}\n  this.aromatic = false // has aromatic bond\n  this.lowercase = false // aromatic and has to be written lowercase\n  this.chirality = 0 // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0 // runs from 0 to (branches - 1)\n  this.paren_written = false\n  this.h_count = hCount\n  this.parent = -1\n}\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid]\n}\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.sortNeighbors()\n  struct.setImplicitHydrogen()\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct)\n      } catch (ex) {\n        throw Error('Bad s-group (' + ex.message + ')')\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  })\n  // END\n\n  this.atoms = new Array(struct.atoms.size)\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH) // eslint-disable-line no-underscore-dangle\n  })\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As']\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true\n      }\n      this.atoms[bond.end].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid })\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid })\n  })\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure()\n    let bondsInLoops = new Pile()\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid)\n        bondsInLoops = bondsInLoops.union(new Pile(hbids))\n      }\n    })\n    const inLoop = {}\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1\n    })\n    return inLoop\n  })()\n\n  this.touchedCistransbonds = 0\n  this.markCisTrans(struct)\n\n  const components = struct.getComponents()\n  const componentsAll = components.reactants.concat(components.products)\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length\n  )\n\n  walk.walk()\n  this.atoms.forEach((atom) => {\n    atom.neighbours = []\n  })\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i]\n    var vIdx = seqEl.idx\n    var eIdx = seqEl.parent_edge\n    var vPrevIdx = seqEl.parent_vertex\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx]\n\n      var openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 })\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx\n            atom.neighbours[k].bid = eIdx\n            break\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place')\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx })\n        atom.parent = vPrevIdx\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx })\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours\n      },\n      this\n    )\n    stereocenters.buildFromBonds(this.ignoreErrors)\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = []\n      let counter = 0\n\n      const atom = this.atoms[atomIdx]\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow')\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0]\n        pyramidMapping[0] = pyramidMapping[1]\n        pyramidMapping[1] = pyramidMapping[2]\n        pyramidMapping[2] = pyramidMapping[3]\n        pyramidMapping[3] = counter\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality')\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1\n      } else this.atoms[atomIdx].chirality = 2\n    })\n  } catch (ex) {\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = []\n\n  cycleNumbers.push(0) // never used\n\n  let firstComponent = true\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i]\n    vIdx = seqEl.idx\n    eIdx = seqEl.parent_edge\n    vPrevIdx = seqEl.parent_vertex\n    let writeAtom = true\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')'\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx)\n        else cycleNumbers[k] = vPrevIdx\n\n        this.writeCycleNumber(k)\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx)\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false\n          } else {\n            this.smiles += '('\n            this.atoms[vPrevIdx].paren_written = true\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch')\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx)\n\n      let dir = 0\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx)\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/'\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\'\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '='\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,='\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':'\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-'\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break\n        }\n\n        if (j === cycleNumbers.length) throw new Error('cycle number not found')\n\n        this.writeCycleNumber(j)\n\n        cycleNumbers[j] = -1\n        writeAtom = false\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.' // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false\n      this.writtenComponents++\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality\n      )\n      this.writtenAtoms.push(seqEl.idx)\n    }\n  }\n\n  this.comma = false\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct)\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|'\n\n  return this.smiles\n}\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n\n  else if (n >= 10 && n < 100) this.smiles += '%' + n\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n\n  else throw new Error('bad cycle number: ' + n)\n}\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx)\n  let needBrackets = false\n  let hydro = -1\n  let aam = 0\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*'\n    return\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]'\n    return\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count\n  }\n\n  let label = atom.label\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label()\n    needBrackets = false // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*'\n    needBrackets = false\n  } else if (\n    chirality ||\n    atom.charge !== 0 ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count\n    this.smiles += '['\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope\n\n  if (lowercase) this.smiles += label.toLowerCase()\n  else this.smiles += label\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@'\n    // chirality == 2\n    else this.smiles += '@@'\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter')\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro\n    else if (hydro === 1) this.smiles += 'H'\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge\n  else if (atom.charge < -1) this.smiles += atom.charge\n  else if (atom.charge === 1) this.smiles += '+'\n  else if (atom.charge === -1) this.smiles += '-'\n\n  if (aam > 0) this.smiles += ':' + aam\n\n  if (needBrackets) this.smiles += ']'\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n}\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours\n    },\n    this\n  )\n  this.cis_trans.build()\n  this.dbonds = new Array(mol.bonds.size)\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0\n    }\n  })\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid)\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours\n      const neiEnd = this.atoms[bond.end].neighbours\n      let aromFailBeg = true\n      let aromFailEnd = true\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false\n        }\n      })\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false\n        }\n      })\n\n      if (aromFailBeg || aromFailEnd) return\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n    }\n  })\n}\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx)\n  const subst = this.cis_trans.getSubstituents(bondIdx)\n  const parity = this.cis_trans.getParity(bondIdx)\n\n  const sidebonds = [-1, -1, -1, -1]\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin)\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin)\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end)\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end)\n\n  let n1 = 0\n  let n2 = 0\n  let n3 = 0\n  let n4 = 0\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3\n    n2 += n4\n  } else {\n    n1 += n4\n    n2 += n3\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration')\n\n  if (n1 === 0 && n2 === 0) return false\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2\n    }\n  }\n\n  return true\n}\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type)\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++\n      }\n    })\n    if (ntouched === this.touchedCistransbonds) break\n    this.touchedCistransbonds = ntouched\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1\n    else this.dbonds[idx].saved = 2\n  }\n\n  return this.dbonds[idx].saved\n}\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length)\n  let i, j\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical\n\n    if (radical === 0) continue // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ','\n    } else {\n      this.smiles += ' |'\n      this.comma = true\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:'\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:'\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:'\n\n    this.smiles += i\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true\n        this.smiles += ',' + j\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types'\nimport { SmiSerializerOptions } from './smi.types'\nimport { Smiles } from './smiles'\nimport { Struct } from 'domain/entities'\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false\n  }\n\n  private readonly options: SmiSerializerOptions\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.')\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types'\n\nimport { MolSerializer } from '../mol/molSerializer'\nimport { Serializer } from '../serializers.types'\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  deserialize(content: string): Array<SdfItem> {\n    let m: any\n    const result: Array<SdfItem> = []\n    const molSerializer = new MolSerializer()\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim() // TODO: normalize newline?\n      const end = chunk.indexOf('M  END')\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m)\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6))\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/)\n            if (m) {\n              const field = m[1]\n              const value = pc.split('\\n')[1].trim()\n              acc[field] = Number.isFinite(value) ? +value : value.toString() // eslint-disable-line\n            }\n            return acc\n          },\n          {} as StructAssociatedData\n        )\n\n        result.push({ struct, props })\n      }\n    }\n    return result\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer()\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct)\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`\n        res += `${item.props[prop]}\\n\\n`\n      })\n\n      return `${res}$$$$\\n`\n    }, '')\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket'\n}\n\nexport interface WithStruct {\n  struct: string\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType\n}\n\nexport interface WithSelection {\n  selected?: Array<number>\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence'\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>\n}\n\nexport interface CheckResult {\n  [key: string]: string\n}\n\nexport interface ConvertData extends WithStruct, WithOutputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition'\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear'\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string\n  imagoVersions: Array<string>\n  isAvailable: boolean\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined\n}\n\nexport type OutputFormatType = 'png' | 'svg'\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType\n  backgroundColor?: string\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions\n  ) => Promise<ConvertResult>\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions\n  ) => Promise<LayoutResult>\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions\n  ) => Promise<CleanResult>\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ) => Promise<AromatizeResult>\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ) => Promise<DearomatizeResult>\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateCipResult>\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions\n  ) => Promise<AutomapResult>\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions\n  ) => Promise<CheckResult>\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateResult>\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>\n  generateInchIKey: (struct: string) => Promise<string>\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions\n  ) => Promise<string>\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val)\n            else setTimeout(iterate, timeGap)\n          } catch (e) {\n            reject(e)\n          }\n        },\n        (err) => reject(err)\n      )\n    }\n    setTimeout(iterate, startTimeGap || 0)\n  })\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val])\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>\n) {\n  let requestUrl = url\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data)\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json'\n      },\n      headers\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin'\n  })\n\n  if (responseHandler) {\n    response = responseHandler(response)\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error)))\n    )\n  }\n\n  return response\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>\n  ) {\n    const body = Object.assign({}, data)\n    body.options = Object.assign(body.options || {}, defaultOptions, options)\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders\n      },\n      responseHandler\n    )\n  }\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string\n  private readonly defaultOptions: StructServiceOptions\n  private readonly customHeaders?: Record<string, string>\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>\n  ) {\n    this.apiPath = apiPath\n    this.defaultOptions = defaultOptions\n    this.customHeaders = customHeaders\n  }\n\n  generateInchIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi'\n      },\n      {}\n    )\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string\n    let imagoVersions: Array<string>\n    let isAvailable = false\n\n    try {\n      const response = await request('GET', this.apiPath + 'info')\n      indigoVersion = response.indigo_version\n      imagoVersions = response.imago_versions\n      isAvailable = true\n    } catch (e) {\n      indigoVersion = ''\n      imagoVersions = []\n      isAvailable = false\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable\n    }\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions\n  ): Promise<ConvertResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : ''\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream'\n      }\n    )\n    const status = request.bind(null, 'GET', this.apiPath + 'imago/uploads/:id')\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response\n            return response.state === 'SUCCESS'\n          },\n          500,\n          300\n        )\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }))\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png'\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )({ struct: data }, { 'render-output-format': outputFormat }, (response) =>\n      response.then((resp) => resp.text())\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { RemoteStructService } from './remoteStructService'\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string\n  mode: ServiceMode = 'remote'\n  customHeaders?: Record<string, string>\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath\n    this.customHeaders = customHeaders\n    const params = new URLSearchParams(document.location.search)\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/'\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\n\nexport class SupportedFormatProperties {\n  name: string\n  mime: ChemicalMimeType\n  extensions: string[]\n  supportsCoords?: boolean\n  options?: any\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any\n  ) {\n    this.name = name\n    this.mime = mime\n    this.extensions = extensions\n    this.supportsCoords = supportsCoords || false\n    this.options = options || {}\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\nimport { SupportedFormat } from './structFormatter.types'\nimport { SupportedFormatProperties } from './supportedFormatProperties'\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties\n}\n\nconst formatProperties: FormatPropertiesMap = {\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles']\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles']\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts']\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi'\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi']\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket'\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true\n  )\n}\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' }\n}\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format]\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format]\n}\n\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const ket = this.#ketSerializer.serialize(struct)\n    return ket\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class RxnFormatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\nimport { StructFormatter, SupportedFormat } from './structFormatter.types'\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { getPropertiesByFormat } from './formatProperties'\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions\n) => Promise<ConvertResult>\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions\n) => Promise<LayoutResult>\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n  #format: SupportedFormat\n  #options?: StructServiceOptions\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions\n  ) {\n    this.#structService = structService\n    this.#ketSerializer = ketSerializer\n    this.#format = format\n    this.#options = options\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format)\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(struct)\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime\n        },\n        { ...this.#options, ...formatProperties.options }\n      )\n\n      return convertResult.struct\n    } catch (error: any) {\n      let message\n      if (error.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`\n      } else {\n        message = `Convert error!\\n${error.message || error}`\n      }\n\n      throw new Error(message)\n    }\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    let promise: LayoutPromise | ConvertPromise\n\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat('ket').mime\n    }\n\n    const withCoords = getPropertiesByFormat(this.#format).supportsCoords\n    if (withCoords) {\n      promise = this.#structService.convert\n      data.struct = stringifiedStruct\n    } else {\n      promise = this.#structService.layout\n      data.struct = stringifiedStruct.trim()\n    }\n\n    try {\n      const result = await promise(data, this.#options)\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct)\n      if (!withCoords) {\n        parsedStruct.rescale()\n      }\n      return parsedStruct\n    } catch (error: any) {\n      if (error.message !== 'Server is not compatible') {\n        throw Error(`Convert error!\\n${error.message || error}`)\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${getPropertiesByFormat('smilesExt').name} and opening of ${\n              getPropertiesByFormat('smiles').name\n            }`\n          : getPropertiesByFormat(this.#format).name\n\n      throw Error(`${formatError} is not supported in standalone mode.`)\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat\n} from './structFormatter.types'\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions\n} from 'domain/serializers'\nimport { StructService, StructServiceOptions } from 'domain/services'\nimport { KetFormatter } from './ketFormatter'\nimport { RxnFormatter } from './rxnFormatter'\nimport { ServerFormatter } from './serverFormatter'\nimport { MolfileV2000Formatter } from './molfileV2000Formatter'\n\nexport class FormatterFactory {\n  #structService: StructService\n\n  constructor(structService: StructService) {\n    this.#structService = structService\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}]\n    }\n\n    const { reactionRelayout, badHeaderRecover, ...structServiceOptions } =\n      options\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {}\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover\n    }\n\n    return [molfileParseOptions, structServiceOptions]\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options)\n\n    let formatter: StructFormatter\n    switch (format) {\n      case 'ket':\n        formatter = new KetFormatter(new KetSerializer())\n        break\n\n      case 'rxn':\n        formatter = new RxnFormatter(new MolSerializer(molSerializerOptions))\n        break\n\n      case 'mol':\n        formatter = new MolfileV2000Formatter(\n          new MolSerializer(molSerializerOptions)\n        )\n        break\n\n      case 'cml':\n      case 'inChIAuxInfo':\n      case 'inChI':\n      case 'molV3000':\n      case 'smiles':\n      case 'rxnV3000':\n      case 'smilesExt':\n      case 'smarts':\n      case 'cdxml':\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions\n        )\n    }\n\n    return formatter\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SupportedFormat } from './structFormatter.types'\n\nexport function identifyStructFormat(\n  stringifiedStruct: string\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim()\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return 'ket'\n    }\n  } catch (er) {} // eslint-disable-line\n\n  if (sanitizedString.indexOf('$RXN') !== -1) {\n    return 'rxn'\n  }\n\n  if (sanitizedString.indexOf('V3000') !== -1) {\n    return 'molV3000'\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m)\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return 'mol'\n    }\n  }\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return 'cml'\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return 'inChI'\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1) {\n    // TODO: smiles regexp\n    return 'smiles'\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return 'cdxml'\n  }\n  // Molfile by default as Indigo does\n  return 'mol'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport Raphael from 'raphael'\nimport { Vec2 } from 'domain/entities'\n\n// TODO: refactor ugly prototype extensions to plain old functions\nRaphael.el.translateAbs = function (x, y) {\n  this.delta = this.delta || new Vec2()\n  this.delta.x += x - 0\n  this.delta.y += y - 0\n  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString())\n}\n\nRaphael.st.translateAbs = function (x, y) {\n  this.forEach((el) => {\n    el.translateAbs(x, y)\n  })\n}\n\nexport default Raphael\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  warnings = 'warnings',\n  data = 'data',\n  indices = 'indices'\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off'\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nclass Visel {\n  constructor(type) {\n    this.type = type\n    this.paths = []\n    this.boxes = []\n    this.boundingBox = null\n    this.exts = []\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path)\n    if (bb) {\n      this.boxes.push(bb)\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb)\n    }\n    if (ext) this.exts.push(ext)\n  }\n\n  clear() {\n    this.paths = []\n    this.boxes = []\n    this.exts = []\n    this.boundingBox = null\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected')\n    }\n    if (args.length === 1) {\n      const vector = args[0]\n      this.translate(vector.x, vector.y)\n    } else {\n      const x = args[0]\n      const y = args[1]\n      const delta = new Vec2(x, y)\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y)\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta)\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta)\n      }\n    }\n  }\n}\n\nexport default Visel\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport Visel from './visel'\n\nclass ReObject {\n  public visel: Visel\n  public hover = false\n  public hovering: any = null\n  public selected = false\n  public selectionPlate: any = null\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType)\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox\n    if (vbox === null) return null\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated())\n    }\n    return vbox.transform(Scale.scaled2obj, render.options)\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null // && !this.highlighting.removed;\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return\n          noredraw = !this.hovering[0].removed\n        } else {\n          noredraw = !this.hovering.removed\n        }\n      }\n      if (noredraw) {\n        this.hovering.show()\n      } else {\n        render.paper.setStart()\n        this.drawHover(render)\n        this.hovering = render.paper.setFinish()\n      }\n    } else if (this.hovering) {\n      this.hovering.hide()\n    }\n\n    this.hover = hover\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.')\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden')\n  }\n}\n\nexport default ReObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport assert from 'assert'\n\nfunction tfx(v) {\n  return parseFloat(v).toFixed(8)\n}\n\nfunction relBox(box) {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height\n  }\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n * @param p { Vec2 }\n * @param d { Vec2 }\n * @param bb { Box2Abs }\n */\nfunction shiftRayBox(p, d, bb) {\n  assert(!!p)\n  assert(!!d)\n  assert(!!bb)\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y)\n  ]\n\n  const r = b.map((v) => v.sub(p)) // b relative to p\n\n  d = d.normalized()\n\n  const rc = r.map((v) => Vec2.cross(v, d)) // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)) // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1\n  let nid = -1\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid\n  const id1 = rd[pid] > rd[nid] ? pid : nid\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  )\n}\nfunction calcCoordinates(aPoint, bPoint, lengthHyp) {\n  const obj: {\n    pos1: null | { x: number; y: number }\n    pos2: null | { x: number; y: number }\n  } = { pos1: null, pos2: null }\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y }\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x\n    const D = b * b - 4 * a * e\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 }\n      obj.pos2 = { x: 0, y: 0 }\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a)\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a)\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 }\n    obj.pos2 = { x: 0, y: 0 }\n    obj.pos1.y = c / oPos2.y\n    obj.pos2.y = c / oPos2.y\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x\n    obj.pos1.y += aPoint.y\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x\n    obj.pos2.y += aPoint.y\n  }\n  return obj\n}\n\nconst util = {\n  tfx,\n  relBox,\n  shiftRayBox,\n  calcCoordinates\n}\n\nexport default util\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrowMode, Vec2, RxnArrow } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport svgPath from 'svgpath'\nimport util from './util'\n\nconst tfx = util.tfx\n\nfunction rectangle(paper, pos, options) {\n  return paper.rect(\n    tfx(Math.min(pos[0].x, pos[1].x)),\n    tfx(Math.min(pos[0].y, pos[1].y)),\n    tfx(Math.abs(pos[1].x - pos[0].x)),\n    tfx(Math.abs(pos[1].y - pos[0].y))\n  )\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  paper,\n  { pos, height },\n  length,\n  angle,\n  options\n) {\n  const [a, b] = pos\n  const b0x = a.x + length\n  const [wOffset, hOffset] = [5, height || 8]\n\n  const path =\n    `M${tfx(a.x - wOffset)},${tfx(a.y)}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y + (!height && hOffset))}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y + (!height && hOffset))}Z`\n\n  const transformedPath = svgPath(path).rotate(angle, a.x, a.y).toString()\n\n  return transformedPath\n}\n\nfunction ellipse(paper, pos, options) {\n  const rad = Vec2.diff(pos[1], pos[0])\n  const rx = rad.x / 2\n  const ry = rad.y / 2\n  return paper.ellipse(pos[0].x + rx, pos[0].y + ry, Math.abs(rx), Math.abs(ry))\n}\n\nfunction polyline(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  for (let i = 1; i < pos.length; i++) path.push('L', pos[i].x, pos[i].y)\n  return paper.path(path)\n}\n\nfunction line(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  path.push('L', pos[1].x, pos[1].y)\n  return paper.path(path)\n}\n\nfunction arrow(paper, item, length, angle, options) {\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const arrowHeadLength = direction * 10\n  const arrowHeadWidth = direction * 5\n  const arrowHeadAttr = direction * 4\n\n  const b0x = a.x + arrowLength\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadWidth)},${tfx(a.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const triangleLength = direction * 10\n  const triangleWidth = direction * 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleWidth)},${tfx(a.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - width)},${tfx(a.y - length)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)},${tfx(a.y - width)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)}, ${tfx(a.y + width)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFilledBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n    `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowDashedOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n  const dashInterval = 3.5\n\n  const path = []\n\n  const b0x = a.x + arrowLength\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    } else {\n      path.push(`M${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n      `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFailed(paper, { pos: [a, b] }, arrowLength, arrowAngle, options) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n  const failSignWidth = 8\n\n  const b0x = a.x + arrowLength\n\n  const arrowCenter = b0x - (b0x - a.x) / 2\n\n  const path = []\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n      `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n      `L${tfx(b0x)},${tfx(a.y)}Z`\n  )\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y - failSignWidth)}`\n  )\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y + failSignWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(a.x)},${tfx(a.y)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // Arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 10\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction plus(paper, c, options) {\n  const s = options.scale / 5\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      tfx(c.x),\n      tfx(c.y),\n      tfx(c.x - s),\n      tfx(c.x + s),\n      tfx(c.y - s),\n      tfx(c.y + s)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingle(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleUp(paper, a, b2, b3, options, color = '#000') {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y)\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondSingleStereoBold(paper, a1, a2, a3, a4, options, color = '#000') {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y)\n    )\n    .attr(options.lineattr)\n  bond.attr({\n    stroke: color,\n    fill: color\n  })\n  return bond\n}\n\nfunction bondDoubleStereoBold(\n  paper,\n  sgBondPath,\n  b1,\n  b2,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color\n      })\n  ])\n}\n\nfunction bondSingleDown(paper, hb1, d, nlines, step, options, color = '#000') {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = ''\n  let p\n  let q\n  let r\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i)\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5))\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5))\n    path += makeStroke(p, q)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleEither(\n  paper,\n  hb1,\n  d,\n  nlines,\n  step,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y)\n  let r = a\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5))\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondDouble(paper, a1, a2, b1, b2, cisTrans, options) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingleOrDouble(paper, hb1, hb2, nSect, options) {\n  // eslint-disable-line max-statements, max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = options.bondSpace / 2\n\n  let path = ''\n  let pi\n  let pp = a\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect)\n    if (i & 1) {\n      path += makeStroke(pp, pi)\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp))\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp))\n    }\n    pp = pi\n  }\n  return paper.path(path).attr(options.lineattr)\n}\n\nfunction bondTriple(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const a2 = a.addScaled(n, options.bondSpace)\n  const b2 = b.addScaled(n, options.bondSpace)\n  const a3 = a.addScaled(n, -options.bondSpace)\n  const b3 = b.addScaled(n, -options.bondSpace)\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondAromatic(paper, paths, bondShift, options) {\n  const l1 = paper.path(paths[0]).attr(options.lineattr)\n  const l2 = paper.path(paths[1]).attr(options.lineattr)\n  if (bondShift !== undefined && bondShift !== null) {\n    ;(bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' })\n  }\n\n  return paper.set([l1, l2])\n}\n\nfunction bondAny(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n}\n\nfunction bondHydrogen(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    'stroke-dasharray': '.',\n    'stroke-linecap': 'square'\n  })\n}\n\nfunction bondDative(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n}\n\nfunction reactingCenter(paper, p, options) {\n  let pathdesc = ''\n  for (let i = 0; i < p.length / 2; ++i) {\n    pathdesc += makeStroke(p[2 * i], p[2 * i + 1])\n  }\n  return paper.path(pathdesc).attr(options.lineattr)\n}\n\nfunction topologyMark(paper, p, mark, options) {\n  const path = paper.text(p.x, p.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000'\n  })\n  const rbb = util.relBox(path.getBBox())\n  recenterText(path, rbb)\n  return path\n}\n\nfunction radicalCap(paper, p, options) {\n  const s = options.lineWidth * 0.9\n  const dw = s\n  const dh = 2 * s\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      tfx(p.x - dw),\n      tfx(p.y + dh),\n      tfx(p.x),\n      tfx(p.y),\n      tfx(p.x + dw),\n      tfx(p.y + dh)\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter'\n    })\n}\n\nfunction radicalBullet(paper, p, options) {\n  return paper.circle(tfx(p.x), tfx(p.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000'\n  })\n}\n\nfunction bracket(paper, d, n, c, bracketWidth, bracketHeight, options) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25\n  bracketHeight = bracketHeight || 1.0\n  const a0 = c.addScaled(n, -0.5 * bracketHeight)\n  const a1 = c.addScaled(n, 0.5 * bracketHeight)\n  const b0 = a0.addScaled(d, -bracketWidth)\n  const b1 = a1.addScaled(d, -bracketWidth)\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      tfx(b0.x),\n      tfx(b0.y),\n      tfx(a0.x),\n      tfx(a0.y),\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y)\n    )\n    .attr(options.sgroupBracketStyle)\n}\n\nfunction selectionRectangle(paper, p0, p1, options) {\n  return paper\n    .rect(\n      tfx(Math.min(p0.x, p1.x)),\n      tfx(Math.min(p0.y, p1.y)),\n      tfx(Math.abs(p1.x - p0.x)),\n      tfx(Math.abs(p1.y - p0.y))\n    )\n    .attr(options.lassoStyle)\n}\n\nfunction selectionPolygon(paper, r, options) {\n  const v = r[r.length - 1]\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y)\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y)\n  }\n  return paper.path(pstr).attr(options.lassoStyle)\n}\n\nfunction selectionLine(paper, p0, p1, options) {\n  return paper.path(makeStroke(p0, p1)).attr(options.lassoStyle)\n}\n\nfunction makeStroke(a, b) {\n  return 'M' + tfx(a.x) + ',' + tfx(a.y) + 'L' + tfx(b.x) + ',' + tfx(b.y) + '\t'\n}\n\nfunction dashedPath(p0, p1, dash) {\n  let t0 = 0\n  const t1 = Vec2.dist(p0, p1)\n  const d = Vec2.diff(p1, p0).normalized()\n  let black = true\n  let path = ''\n  let i = 0\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length]\n    const t2 = t0 + Math.min(len, t1 - t0)\n    if (black) {\n      path +=\n        'M ' +\n        p0.addScaled(d, t0).coordStr() +\n        ' L ' +\n        p0.addScaled(d, t2).coordStr()\n    }\n    t0 += len\n    black = !black\n    i++\n  }\n  return path\n}\n\nfunction aromaticBondPaths(a2, a3, b2, b3, mask, dash) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2)\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3)\n\n  return [l1, l2]\n}\n\nfunction recenterText(path, rbb) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = rbb.height * 0.16\n    path.translateAbs(0, gap)\n    rbb.y += gap\n  }\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  topologyMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { ElementColor, Elements } from 'domain/constants'\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType\n} from './generalEnumTypes'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ninterface ElemAttr {\n  text: string\n  path: any\n  rbb: { x: number; y: number; width: number; height: number }\n}\n\nconst StereoLabelMinOpacity = 0.3\n\nenum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'on'\n}\n\nclass ReAtom extends ReObject {\n  a: Atom\n  showLabel: boolean\n  hydrogenOnTheLeft: boolean\n  color: string\n  component: number\n  label?: ElemAttr\n\n  constructor(atom: Atom) {\n    super('atom')\n    this.a = atom // TODO rename a to item\n    this.showLabel = false\n\n    this.hydrogenOnTheLeft = false\n\n    this.color = '#000000'\n    this.component = -1\n  }\n\n  static isSelectable(): true {\n    return true\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render)\n    }\n    return new Box2Abs(this.a.pp, this.a.pp)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const paper = render.paper\n    const options = render.options\n    const ps = Scale.obj2scaled(this.a.pp, options)\n    const atom = this.a\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n    return paper\n      .circle(ps.x, ps.y, options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any) {\n    const atom = this.a\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n    return paper\n      .circle(ps.x, ps.y, styles.atomSelectionPlateRadius)\n      .attr(styles.selectionStyle)\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const atom = restruct.molecule.atoms.get(aid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    const render = restruct.render\n    const ps = Scale.obj2scaled(this.a.pp, render.options)\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      if (FunctionalGroup.isFirstAtomInFunctionalGroup(sgroups, aid)) {\n        let sgroupName\n        for (const sg of sgroups.values()) {\n          if (aid === sg.atoms[0]) sgroupName = sg.data.name\n        }\n        const path = render.paper.text(ps.x, ps.y, sgroupName).attr({\n          'font-weight': 700,\n          'font-size': 14\n        })\n        restruct.addReObjectPath(LayerMap.data, this.visel, path, ps, true)\n      }\n      return\n    }\n\n    this.hydrogenOnTheLeft = setHydrogenPos(restruct.molecule, this)\n    this.showLabel = isLabelVisible(restruct, render.options, this)\n    this.color = 'black' // reset colour\n\n    let delta\n    let rightMargin\n    let leftMargin\n    let implh\n    let isHydrogen\n    let label\n    let index: any = null\n\n    if (this.showLabel) {\n      label = buildLabel(this, render.paper, ps, options)\n      delta = 0.5 * options.lineWidth\n      rightMargin =\n        (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      leftMargin =\n        (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      implh = Math.floor(this.a.implicitH)\n      isHydrogen = label.text === 'H'\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true)\n    }\n    if (options.showAtomIds) {\n      index = {}\n      index.text = aid.toString()\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6)\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6)\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070'\n      })\n      index.rbb = util.relBox(index.path.getBBox())\n      draw.recenterText(index.path, index.rbb)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps)\n    }\n    this.setHover(this.hover, render)\n\n    if (this.showLabel && !this.a.pseudo) {\n      let hydroIndex: any = null\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin)\n        rightMargin += hydroIndex.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render)\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.isotope !== 0) {\n        const isotope = showIsotope(this, render, leftMargin)\n        leftMargin -= isotope.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true\n        )\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(options.showHydrogenLabels, this)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin\n        })\n        const hydrogen = data.hydrogen\n        hydroIndex = data.hydroIndex\n        rightMargin = data.rightMargin\n        leftMargin = data.leftMargin\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true\n        )\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true\n          )\n        }\n      }\n\n      if (this.a.charge !== 0 && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin)\n        rightMargin += charge.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin)\n        rightMargin += valence.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin)\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true\n        )\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height\n        )\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    if (this.a.attpnt) {\n      const lsb = bisectLargestSector(this, restruct.molecule)\n      showAttpnt(this, render, lsb, restruct.addReObjectPath.bind(restruct))\n    }\n\n    const stereoLabel = this.a.stereoLabel // Enhanced Stereo\n    const aamText = getAamText(this)\n    const queryAttrsText = !this.a.pseudo ? getQueryAttrsText(this) : ''\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment)\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId)\n\n    const text =\n      (shouldDisplayStereoLabel(\n        stereoLabel,\n        options.stereoLabelStyle,\n        fragment?.enhancedStereoFlag\n      )\n        ? `${stereoLabel}\\n`\n        : '') +\n      (queryAttrsText.length > 0 ? `${queryAttrsText}\\n` : '') +\n      (aamText.length > 0 ? `.${aamText}.` : '')\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label)\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: options.atomColoring && elem ? ElementColor[this.a.label] : '#000'\n      })\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill', color)\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill-opacity', opacity)\n      }\n      const aamBox = util.relBox(aamPath.getBBox())\n      draw.recenterText(aamPath, aamBox)\n      const visel = this.visel\n      let t = 3\n      let dir = bisectLargestSector(this, restruct.molecule)\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)))\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox))\n      dir = dir.scaled(8 + t)\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y)\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true)\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' }\n\n      const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style)\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path)\n    }\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000'\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters\n    case StereoLabel.Or:\n      return options.colorOfOrCenters\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters\n    default:\n      return '#000'\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '')\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity)\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  flag: StereoFlag | undefined\n): boolean {\n  if (!stereoLabel) {\n    return false\n  }\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  switch (labelStyle) {\n    // Off\n    case StereLabelStyleType.Off:\n      return false\n    // On\n    case StereLabelStyleType.On:\n      return true\n    // Classic\n    case StereLabelStyleType.Classic:\n      return !!(flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or)\n    // IUPAC\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      )\n    default:\n      return true\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom) {\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal)\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    atom.a.alias ||\n    atom.a.isotope !== 0 ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== 0 ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c'\n\n  if (shouldBeVisible) return true\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0]\n    const nei2 = atom.a.neighbors[1]\n    const hb1 = restruct.molecule.halfBonds.get(nei1)\n    const hb2 = restruct.molecule.halfBonds.get(nei2)\n    const bond1 = restruct.bonds.get(hb1.bid)\n    const bond2 = restruct.bonds.get(hb2.bid)\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction displayHydrogen(hydrogenLabels, atom) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label.text.toLowerCase() !== 'c'))\n  )\n}\n\nfunction setHydrogenPos(struct, atom) {\n  // check where should the hydrogen be put on the left of the label\n  if (atom.a.neighbors.length === 0) {\n    const element = Elements.get(atom.a.label)\n    return !element || Boolean(element.leftH)\n  }\n\n  let yl = 1\n  let yr = 1\n  let nl = 0\n  let nr = 0\n\n  atom.a.neighbors.forEach((nei) => {\n    const d = struct.halfBonds.get(nei).dir\n\n    if (d.x <= 0) {\n      yl = Math.min(yl, Math.abs(d.y))\n      nl++\n    } else {\n      yr = Math.min(yr, Math.abs(d.y))\n      nr++\n    }\n  })\n\n  return yl < 0.51 || yr < 0.51 ? yr < yl : nr > nl\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any\n): ElemAttr {\n  // eslint-disable-line max-statements\n  let label: any = {}\n  label.text = getLabelText(atom.a)\n\n  if (label.text === '') label = 'R#' // for structures that missed 'M  RGP' tag in molfile\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text)\n    if (options.atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000'\n    }\n  }\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : ''\n  })\n\n  label.rbb = util.relBox(label.path.getBBox())\n  draw.recenterText(label.path, label.rbb)\n\n  if (atom.a.atomList !== null) {\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n        2,\n      0\n    )\n  }\n\n  atom.label = label\n  return label\n}\n\nfunction getLabelText(atom) {\n  if (atom.atomList !== null) return atom.atomList.label()\n\n  if (atom.pseudo) return atom.pseudo\n\n  if (atom.alias) return atom.alias\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = ''\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString()\n      }\n    }\n\n    return text\n  }\n\n  return atom.label\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydroIndex: any = {}\n  hydroIndex.text = (implh + 1).toString()\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const paper: any = render.paper\n  const radical: any = {}\n  let hshift\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('fill', atom.color)\n      break\n    case 2:\n      radical.path = paper.set()\n      radical.path.push(draw.radicalBullet(paper, ps, options))\n      radical.path.attr('fill', atom.color)\n      break\n    case 3:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('stroke', atom.color)\n      break\n    default:\n      break\n  }\n  radical.rbb = util.relBox(radical.path.getBBox())\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height)\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift)\n  return radical\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const isotope: any = {}\n  isotope.text = atom.a.isotope.toString()\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  isotope.rbb = util.relBox(isotope.path.getBBox())\n  draw.recenterText(isotope.path, isotope.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return isotope\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const charge: any = {}\n  charge.text = ''\n  const absCharge = Math.abs(atom.a.charge)\n  if (absCharge !== 1) charge.text = absCharge.toString()\n  if (atom.a.charge < 0) charge.text += '\\u2013'\n  else charge.text += '+'\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  charge.rbb = util.relBox(charge.path.getBBox())\n  draw.recenterText(charge.path, charge.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return charge\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV'\n  }\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const valence: any = {}\n  valence.text = mapValence[atom.a.explicitValence]\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString())\n  }\n  valence.text = '(' + valence.text + ')'\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  valence.rbb = util.relBox(valence.path.getBBox())\n  draw.recenterText(valence.path, valence.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return valence\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any\n    hydroIndex: number\n    rightMargin: number\n    leftMargin: number\n  }\n): {\n  hydrogen: ElemAttr\n  hydroIndex: ElemAttr\n  rightMargin: number\n  leftMargin: number\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex\n  const hydrogenLeft = atom.hydrogenOnTheLeft\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydrogen = data.hydrogen\n  hydrogen.text = 'H'\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color\n  })\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox())\n  draw.recenterText(hydrogen.path, hydrogen.rbb)\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0\n    )\n    data.rightMargin += hydrogen.rbb.width + delta\n  }\n  if (implh > 1) {\n    hydroIndex = {}\n    hydroIndex.text = implh.toString()\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color\n    })\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.rightMargin += hydroIndex.rbb.width + delta\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.leftMargin -= hydroIndex.rbb.width + delta\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0\n    )\n    data.leftMargin -= hydrogen.rbb.width + delta\n  }\n  return Object.assign(data, { hydrogen, hydroIndex })\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const delta = 0.5 * render.options.lineWidth\n  const tfx = util.tfx\n  const warning: any = {}\n  const y = ps.y + atom.label.rbb.height / 2 + delta\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y)\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' })\n  warning.rbb = util.relBox(warning.path.getBBox())\n  return warning\n}\n\nfunction showAttpnt(atom, render, lsb, addReObjectPath) {\n  // eslint-disable-line max-statements\n  const asterisk = '∗'\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const tfx = util.tfx\n  let i, j\n  for (i = 0; i < 4; ++i) {\n    let attpntText = ''\n    if (atom.a.attpnt & (1 << i)) {\n      if (attpntText.length > 0) attpntText += ' '\n      attpntText += asterisk\n      for (j = 0; j < (i === 0 ? 0 : i + 1); ++j) attpntText += \"'\"\n      let pos0 = new Vec2(ps)\n      let pos1 = ps.addScaled(lsb, 0.7 * options.scale)\n\n      const attpntPath1 = render.paper.text(pos1.x, pos1.y, attpntText).attr({\n        font: options.font,\n        'font-size': options.fontsz,\n        fill: atom.color\n      })\n      const attpntRbb = util.relBox(attpntPath1.getBBox())\n      draw.recenterText(attpntPath1, attpntRbb)\n\n      const lsbn = lsb.negated()\n      /* eslint-disable no-mixed-operators */\n      pos1 = pos1.addScaled(\n        lsbn,\n        util.shiftRayBox(pos1, lsbn, Box2Abs.fromRelBox(attpntRbb)) +\n          options.lineWidth / 2\n      )\n      /* eslint-enable no-mixed-operators */\n      pos0 = shiftBondEnd(atom, pos0, lsb, options.lineWidth)\n      const n = lsb.rotateSC(1, 0)\n      const arrowLeft = pos1\n        .addScaled(n, 0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const arrowRight = pos1\n        .addScaled(n, -0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const attpntPath = render.paper.set()\n      attpntPath.push(\n        attpntPath1,\n        render.paper\n          .path(\n            'M{0},{1}L{2},{3}M{4},{5}L{2},{3}L{6},{7}',\n            tfx(pos0.x),\n            tfx(pos0.y),\n            tfx(pos1.x),\n            tfx(pos1.y),\n            tfx(arrowLeft.x),\n            tfx(arrowLeft.y),\n            tfx(arrowRight.x),\n            tfx(arrowRight.y)\n          )\n          .attr(render.options.lineattr)\n          .attr({ 'stroke-width': options.lineWidth / 2 })\n      )\n      addReObjectPath(LayerMap.indices, atom.visel, attpntPath, ps)\n      lsb = lsb.rotate(Math.PI / 6)\n    }\n  }\n}\n\n// function getStereoLabelText(atom, aid, render) {\n// \tconst struct = render.ctab.molecule;\n// \tconst frag = struct.frags.get(atom.a.fragment);\n// \tconst stereo = frag.getStereoAtomMark(aid);\n// \tif (!stereo.type) return null;\n//\n// \treturn stereo.type + (stereo.number || '');\n// }\n\nfunction getAamText(atom) {\n  let aamText = ''\n  if (atom.a.aam > 0) aamText += atom.a.aam\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.invRet === 1) aamText += 'Inv'\n    else if (atom.a.invRet === 2) aamText += 'Ret'\n    else throw new Error('Invalid value for the invert/retain flag')\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext'\n    else throw new Error('Invalid value for the exact change flag')\n  }\n  return aamText\n}\n\nfunction getQueryAttrsText(atom) {\n  let queryAttrsText = ''\n  if (atom.a.ringBondCount !== 0) {\n    if (atom.a.ringBondCount > 0) {\n      queryAttrsText += 'rb' + atom.a.ringBondCount.toString()\n    } else if (atom.a.ringBondCount === -1) queryAttrsText += 'rb0'\n    else if (atom.a.ringBondCount === -2) queryAttrsText += 'rb*'\n    else throw new Error('Ring bond count invalid')\n  }\n  if (atom.a.substitutionCount !== 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.substitutionCount > 0) {\n      queryAttrsText += 's' + atom.a.substitutionCount.toString()\n    } else if (atom.a.substitutionCount === -1) queryAttrsText += 's0'\n    else if (atom.a.substitutionCount === -2) queryAttrsText += 's*'\n    else throw new Error('Substitution count invalid')\n  }\n  if (atom.a.unsaturatedAtom > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.unsaturatedAtom === 1) queryAttrsText += 'u'\n    else throw new Error('Unsaturated atom invalid value')\n  }\n  if (atom.a.hCount > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    queryAttrsText += 'H' + (atom.a.hCount - 1).toString()\n  }\n  return queryAttrsText\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y)\n  rbb.x += x\n  rbb.y += y\n}\n\nfunction bisectLargestSector(atom: ReAtom, struct: Struct) {\n  let angles: Array<number> = []\n  atom.a.neighbors.forEach((hbid) => {\n    const hb = struct.halfBonds.get(hbid)\n    hb && angles.push(hb.ang)\n  })\n  angles = angles.sort((a, b) => a - b)\n  const da: Array<number> = []\n  for (let i = 0; i < angles.length - 1; ++i) {\n    da.push(angles[(i + 1) % angles.length] - angles[i])\n  }\n  da.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI)\n  let daMax = 0\n  let ang = -Math.PI / 2\n  for (let i = 0; i < angles.length; ++i) {\n    if (da[i] > daMax) {\n      daMax = da[i]\n      ang = angles[i] + da[i] / 2\n    }\n  }\n  return new Vec2(Math.cos(ang), Math.sin(ang))\n}\n\nfunction shiftBondEnd(atom, pos0, dir, margin) {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nexport default ReAtom\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { LayerMap, StereoColoringType } from './generalEnumTypes'\nimport ReAtom, { getColorFromStereoLabel } from './reatom'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReBond extends ReObject {\n  b: Bond\n  doubleBondShift: number\n  path: any\n  neihbid1 = -1\n  neihbid2 = -1\n  boldStereo?: boolean\n  rbb?: { x: number; y: number; width: number; height: number }\n\n  constructor(bond: Bond) {\n    super('bond')\n    this.b = bond // TODO rename b to item\n    this.doubleBondShift = 0\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const options = render.options\n    bondRecalc(this, render.ctab, options)\n    const bond = this.b\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return render.paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any) {\n    bondRecalc(this, restruct, options)\n    const bond = this.b\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const struct = restruct.molecule\n    const bond = restruct.molecule.bonds.get(bid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      return\n    }\n\n    const paper = render.paper\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null\n\n    checkStereoBold(bid, this, restruct)\n    bondRecalc(this, restruct, options)\n    setDoubleBondShift(this, struct)\n    if (!hb1 || !hb2) return\n    this.path = getBondPath(restruct, this, hb1, hb2)\n    this.rbb = util.relBox(this.path.getBBox())\n    restruct.addReObjectPath(LayerMap.data, this.visel, this.path, null, true)\n    const reactingCenter: any = {}\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2)\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true\n      )\n    }\n    const topology: any = {}\n    topology.path = getTopologyMark(render, this, hb1, hb2)\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true\n      )\n    }\n    this.setHover(this.hover, render)\n\n    let ipath = null\n    const bondIdxOff = options.subFontSize * 0.6\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round'\n      }\n\n      const c = Scale.obj2scaled(this.b.center, restruct.render.options)\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2)\n      highlightPath.attr(style)\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true\n      )\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y }\n  const end = { x: hb2.p.x, y: hb2.p.y }\n\n  const paper = restruct.render.paper\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`\n\n  const path = paper.path(pathString)\n\n  return path\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid)\n\n    if (!hb || hb.bid === bid0) return false\n\n    const neibond = restruct.bonds.get(hb.bid)\n\n    if (!neibond) return false\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      )\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    )\n  })\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    if (!atom) return -1\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0]\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1]\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  let path = null\n  const render = restruct.render\n  const struct = restruct.molecule\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel\n\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct)\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n          } else path = getBondSingleUpPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(render, hb1, hb2, bond, struct)\n          break\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            getStereoBondColor(render.options, bond, struct)\n          )\n          break\n      }\n      break\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct)\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB\n        )\n      } else path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic)\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options)\n        : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      path = getSingleOrDoublePath(render, hb1, hb2)\n      break\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.ANY:\n      path = draw.bondAny(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      path = draw.bondHydrogen(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(render.paper, hb1, hb2, render.options)\n      break\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported')\n  }\n  return path\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const options = render.options\n  const bsp = 0.7 * options.stereoBond\n  let b2 = b.addScaled(n, bsp)\n  let b3 = b.addScaled(n, -bsp)\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct\n    )\n    b2 = coords[0]\n    b3 = coords[1]\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct\n): string {\n  const defaultColor = '#000'\n\n  if (bond.b.stereo === 0) return defaultColor\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel\n\n  let stereoLabel = ''\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const options = render.options\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct\n  )\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct\n  )\n  const a1 = coords1[0]\n  const a2 = coords1[1]\n  const a3 = coords2[0]\n  const a4 = coords2[1]\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = bond.doubleBondShift\n  const bsp = 1.5 * render.options.stereoBond\n  let b1 = a.addScaled(n, bsp * shift)\n  let b2 = b.addScaled(n, bsp * shift)\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    getStereoBondColor(render.options, bond, struct)\n  )\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0\n  return sin / (1 - cos)\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid)\n  const cos = Vec2.dot(hb.dir, neihb!.dir)\n  const sin = Vec2.cross(hb.dir, neihb!.dir)\n  const cosHalf = Math.sqrt(0.5 * (1 - cos))\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos))\n  )\n\n  const denomAdd = 0.3\n  const scale = 0.7\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd))\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd)\n  )\n  return sin > 0 ? [a1, a2] : [a2, a1]\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length() + 0.2\n  d = d.normalized()\n  const interval = 1.2 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 1)\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length()\n  d = d.normalized()\n  const interval = 0.6 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 0.5)\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS\n\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = cisTrans ? 0 : bond.doubleBondShift\n\n  const options = render.options\n  const bsp = options.bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n\n  let a1 = a.addScaled(n, s1)\n  let b1 = b.addScaled(n, s1)\n  let a2 = a.addScaled(n, s2)\n  let b2 = b.addScaled(n, s2)\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n\n  return draw.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options)\n}\n\nfunction getSingleOrDoublePath(render: Render, hb1: HalfBond, hb2: HalfBond) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed())\n  if (!(nSect & 1)) nSect += 1\n  return draw.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options)\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125]\n  let mark: number | null = null\n  let dash: number[] | null = null\n  const options = render.options\n  const bondShift = bond.doubleBondShift\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mark = bondShift > 0 ? 1 : 2\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mark = 3\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mark,\n    dash\n  )\n  return draw.bondAromatic(render.paper, paths, bondShift, options)\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number | null,\n  dash: number[] | null\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n  let a2 = a.addScaled(n, s1)\n  let b2 = b.addScaled(n, s1)\n  let a3 = a.addScaled(n, s2)\n  let b3 = b.addScaled(n, s2)\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash)\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  const n = d.rotateSC(1, 0)\n\n  const p: Array<Vec2> = []\n\n  const lw = render.options.lineWidth\n  const bs = render.options.bondSpace / 2\n  const alongIntRc = lw // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs // half size along for CENTER\n  const acrossInt = 1.5 * bs // half interval across for CENTER\n  const acrossSz = 3.0 * bs // half size across for all\n  const tiltTan = 0.2 // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt))\n      break\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      break\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    default:\n      return null\n  }\n  return draw.reactingCenter(render.paper, p, render.options)\n}\n\nfunction getTopologyMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const options = render.options\n  let mark: string | null = null\n\n  if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) mark = 'rng'\n  else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) mark = 'chn'\n  else return null\n\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  let n = d.rotateSC(1, 0)\n  let fixed = options.lineWidth\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift)\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace)\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)))\n\n  return draw.topologyMark(render.paper, p, mark, options)\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff)\n  const ipath = paper.text(pb.x, pb.y, bid.toString())\n  const irbb = util.relBox(ipath.getBBox())\n  draw.recenterText(ipath, irbb)\n  return ipath\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1\n  const hb2 = bond.b.hb2\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n    return\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop\n  const loop2 = struct.halfBonds.get(hb2)!.loop\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds\n    const d2 = struct.loops.get(loop2)!.dblBonds\n    const n1 = struct.loops.get(loop1)!.hbs.length\n    const n2 = struct.loops.get(loop2)!.hbs.length\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2)\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n  }\n}\n\nfunction bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n  const render = restruct.render\n  const atom1 = restruct.atoms.get(bond.b.begin)\n  const atom2 = restruct.atoms.get(bond.b.end)\n\n  if (\n    !atom1 ||\n    !atom2 ||\n    bond.b.hb1 === undefined ||\n    bond.b.hb2 === undefined\n  ) {\n    return\n  }\n\n  const p1 = Scale.obj2scaled(atom1.a.pp, render.options)\n  const p2 = Scale.obj2scaled(atom2.a.pp, render.options)\n  const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n  const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n  if (!hb1?.dir || !hb2?.dir) return\n\n  hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth)\n  hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth)\n  bond.b.center = Vec2.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5)\n  bond.b.len = Vec2.dist(p1, p2)\n  bond.b.sb = options.lineWidth * 5\n  /* eslint-disable no-mixed-operators */\n  bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2)\n  /* eslint-enable no-mixed-operators */\n  bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI\n}\n\nfunction shiftBondEnd(\n  atom: ReAtom,\n  pos0: Vec2,\n  dir: Vec2,\n  margin: number\n): Vec2 {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1\n  if (n2 * d1 > n1 * d2) return -1\n  if (n2 * d1 < n1 * d2) return 1\n  if (n2 > n1) return -1\n  return 1\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1)\n  const hb2 = struct.halfBonds.get(bond.b.hb2)\n  if (!hb1 || !hb2) return 0\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0)\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0)\n  if (nLeft > nRight) return -1\n  if (nLeft < nRight) return 1\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1) return 1\n  return 0\n}\n\nexport default ReBond\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any\n\n  constructor() {\n    super('enhancedFlag')\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox())\n    const sz = box.p1.sub(box.p0)\n    const p0 = box.p0.sub(render.options.offset)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render\n    const fragment = restruct.molecule.frags.get(fragmentId)\n    if (!fragment?.enhancedStereoFlag) return\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!\n\n    const paper = render.paper\n    const ps = Scale.obj2scaled(position, options)\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel\n    }\n\n    if (options.showStereoFlags) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : ''\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000'\n        })\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true\n    )\n  }\n}\n\nexport default ReEnhancedFlag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag')\n    this.item = frag\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid\n    )\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment\n\n      return firstFrag === fid && secondFrag === fid\n    })\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        bba = bba.extend(ext, ext)\n      } else {\n        if (!render) render = global._ui_editor.render // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba\n    })\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render)\n\n    if (bb) {\n      const p0 = Scale.obj2scaled(new Vec2(bb.p0.x, bb.p0.y), render.options)\n      const p1 = Scale.obj2scaled(new Vec2(bb.p1.x, bb.p1.y), render.options)\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs)\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(render) {\n    // eslint-disable-line no-unused-vars\n    return null // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this)\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render')\n      return\n    }\n\n    fid = parseInt(fid, 10)\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render)\n    })\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render)\n      }\n    })\n  }\n}\nexport default ReFrag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3)\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup')\n    this.labelBox = null\n    this.item = rgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  getAtoms(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  getBonds(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  calcBBox(render) {\n    let ret = null\n    this.item.frags.forEach((fid) => {\n      const bbf = render.ctab.frags.get(fid).calcBBox(render.ctab, fid, render)\n      if (bbf) ret = ret ? Box2Abs.union(ret, bbf) : bbf\n    })\n\n    if (ret) ret = ret.extend(BORDER_EXT, BORDER_EXT)\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    const bb = this.calcBBox(render)\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools'\n      )\n      return {}\n    }\n\n    const ret = { data: [] }\n    const p0 = Scale.obj2scaled(bb.p0, options)\n    const p1 = Scale.obj2scaled(bb.p1, options)\n    const brackets = render.paper.set()\n\n    rGroupdrawBrackets(brackets, render, bb) // eslint-disable-line new-cap\n\n    ret.data.push(brackets)\n    const key = render.ctab.rgroups.keyOf(this)\n    const labelSet = render.paper.set()\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black'\n      })\n\n    const labelBox = util.relBox(label.getBBox())\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0)\n\n    labelSet.push(label)\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black'\n    }\n\n    const logic = [rLogicToString(key, this.item)]\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle)\n      const logicBox = util.relBox(logicPath.getBBox())\n      shift += logicBox.height / 2\n      logicPath.translateAbs(-logicBox.width / 2 - 6 * options.lineWidth, shift)\n      shift += logicBox.height / 2 + options.lineWidth / 2\n      ret.data.push(logicPath)\n      labelSet.push(logicPath)\n    }\n\n    ret.data.push(label)\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.scaled2obj,\n      render.options\n    )\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT) // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null\n\n    const p0 = Scale.obj2scaled(bb.p0, render.options)\n    const p1 = Scale.obj2scaled(bb.p1, render.options)\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs)\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this)\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render'\n      )\n      return null\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */\n    ) // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render)\n    })\n\n    return ret\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options)\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true\n        )\n      }\n    })\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.obj2scaled(d || new Vec2(1, 0), render.options)\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n  const bracketHeight = bb.p1.y - bb.p0.y\n  const cy = 0.5 * (bb.p1.y + bb.p0.y)\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  return set.push(leftBracket, rightBracket)\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : ''\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=')\n\n  let range = null\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range\n  } else range = '>0'\n\n  const restH = rLogic.resth ? ' (RestH)' : ''\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : ''\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`\n}\n\nexport default ReRGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport Raphael from '../raphael-ext'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ntype Arrow = {\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n  height?: number\n}\n\ntype ArrowParams = {\n  length: number\n  angle: number\n}\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow')\n    this.item = arrow\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const pos = item.pos\n\n    let dist: number = calculateDistanceToLine(pos, point)\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints()\n      dist = Math.min(\n        dist,\n        calculateDistanceToLine([startPoint, middlePoint], point),\n        calculateDistanceToLine([middlePoint, endPoint], point)\n      )\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection')\n\n    return render.paper.path(path)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    const item = this.item\n    const [a, b] = item.pos\n    const height = item.height\n    refPoints.push(new Vec2(a.x, a.y))\n    refPoints.push(new Vec2(b.x, b.y))\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b)\n      refPoints.push(middlePoint)\n    }\n    return refPoints\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render\n    const options = restruct.render.options\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle)\n    )\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  generatePath(render: Render, options, type) {\n    let path\n    const item = this.item\n    const height = RxnArrow.isElliptical(item) && item.height! * options.scale\n    const pos = item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y\n    )\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n    }\n\n    return path\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1)\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180\n\n    return { length, angle }\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow')\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+util.tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x)\n    const minY = Math.min(a.y, b.y)\n    const x = minX + Math.abs(a.x - b.x) / 2\n    const y = minY + Math.abs(a.y - b.y) / 2\n    return new Vec2(x, y)\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y)\n  const lengthHyp = Math.hypot(length / 2, height)\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  }\n  return new Vec2(a.x, a.y)\n}\n\nexport default ReRxnArrow\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus')\n    this.item = plus\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const p = Scale.obj2scaled(this.item.pp, render.options)\n    const s = render.options.scale\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8)\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render\n    const centre = Scale.obj2scaled(this.item.pp, options)\n    const path = draw.plus(render.paper, centre, options)\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nexport default ReRxnPlus\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData')\n    this.sgroup = sgroup\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea\n    const p0 = Scale.obj2scaled(box.p0, render.options)\n    const sz = Scale.obj2scaled(box.p1, render.options).sub(p0)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n}\n\nexport default ReDataSGroupData\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, FunctionalGroup, Pile, SGroup, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReSGroup extends ReObject {\n  constructor(sgroup) {\n    super('sgroup')\n    this.item = sgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  draw(remol, sgroup) {\n    this.render = remol.render\n    let set = this.render.paper.set()\n    const atomSet = new Pile(sgroup.atoms)\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet)\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds)\n    const bracketBox = sgroup.bracketBox\n    const d = sgroup.bracketDir\n    sgroup.areas = [bracketBox]\n    const functionalGroups = remol.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      sgroup.firstSgroupAtom = remol.molecule.atoms.get(sgroup.atoms[0])\n      sgroup.functionalGroup = true\n    } else {\n      switch (sgroup.type) {\n        case 'MUL':\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.mul\n          )\n          break\n        case 'SRU': {\n          let connectivity = sgroup.data.connectivity || 'eu'\n          if (connectivity === 'ht') connectivity = ''\n          const subscript = sgroup.data.subscript || 'n'\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            subscript,\n            connectivity\n          )\n          break\n        }\n        case 'SUP': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.name,\n            null,\n            { 'font-style': 'italic' }\n          )\n          break\n        }\n        case 'GEN': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d\n          )\n          break\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup)\n          break\n        }\n        default:\n          break\n      }\n    }\n    return set\n  }\n\n  makeSelectionPlate(restruct, paper, options) {\n    const sgroup = this.item\n    const { startX, startY, size } = getHighlighPathInfo(sgroup, options)\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      return paper.rect(startX, startY, size, size).attr(options.selectionStyle)\n    }\n  }\n\n  drawHover(render) {\n    // eslint-disable-line max-statements\n    const options = render.options\n    const paper = render.paper\n    const sGroupItem = this.item\n    const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, options)\n\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    const set = paper.set()\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(\n        sGroupItem.id,\n        functionalGroups\n      )\n    ) {\n      const { startX, startY, size } = getHighlighPathInfo(sGroupItem, options)\n      sGroupItem.hovering = paper\n        .rect(startX, startY, size, size)\n        .attr(options.hoverStyle)\n    } else {\n      sGroupItem.hovering = paper\n        .path(\n          'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n          tfx(a0.x),\n          tfx(a0.y),\n          tfx(a1.x),\n          tfx(a1.y),\n          tfx(b1.x),\n          tfx(b1.y),\n          tfx(b0.x),\n          tfx(b0.y)\n        )\n        .attr(options.hoverStyle)\n    }\n    set.push(sGroupItem.hovering)\n\n    SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n      set.push(render.ctab.atoms.get(aid).makeHoverPlate(render))\n    }, this)\n    SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n      set.push(render.ctab.bonds.get(bid).makeHoverPlate(render))\n    }, this)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set)\n  }\n\n  show(restruct) {\n    const render = restruct.render\n    const sgroup = this.item\n    if (sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab\n      const path = this.draw(remol, sgroup)\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n      this.setHover(this.hover, render) // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets(\n  set,\n  render,\n  sg,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute\n) {\n  // eslint-disable-line max-params\n  const brackets = getBracketParameters(\n    render.ctab.molecule,\n    crossBonds,\n    atomSet,\n    bracketBox,\n    d,\n    render,\n    sg.id\n  )\n  let ir = -1\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const path = draw.bracket(\n      render.paper,\n      Scale.obj2scaled(bracket.d, render.options),\n      Scale.obj2scaled(bracket.n, render.options),\n      Scale.obj2scaled(bracket.c, render.options),\n      bracket.w,\n      bracket.h,\n      render.options\n    )\n    set.push(path)\n    if (\n      ir < 0 ||\n      brackets[ir].d.x < bracket.d.x ||\n      (brackets[ir].d.x === bracket.d.x && brackets[ir].d.y > bracket.d.y)\n    ) {\n      ir = i\n    }\n  }\n  const bracketR = brackets[ir]\n  function renderIndex(text, shift) {\n    const indexPos = Scale.obj2scaled(\n      bracketR.c.addScaled(bracketR.n, shift * bracketR.h),\n      render.options\n    )\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub\n    })\n    if (indexAttribute) indexPath.attr(indexAttribute)\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()))\n    const t =\n      Math.max(util.shiftRayBox(indexPos, bracketR.d.negated(), indexBox), 3) +\n      2\n    indexPath.translateAbs(t * bracketR.d.x, t * bracketR.d.y)\n    set.push(indexPath)\n  }\n  if (lowerIndexText) renderIndex(lowerIndexText, 0.5)\n  if (upperIndexText) renderIndex(upperIndexText, -0.5)\n}\n\nfunction showValue(paper, pos, sg, options) {\n  const text = paper.text(pos.x, pos.y, sg.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz\n  })\n  const box = text.getBBox()\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    3\n  )\n  rect = sg.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' })\n  const st = paper.set()\n  st.push(rect, text.toFront())\n  return st\n}\n\nfunction drawGroupDat(restruct, sgroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule)\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : []\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule)\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup)\n}\n\nfunction drawAbsoluteDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  const ps = sgroup.pp.scaled(options.scale)\n  const name = showValue(paper, ps, sgroup, options)\n  const box = util.relBox(name.getBBox())\n\n  name.translateAbs(0.5 * box.width, -0.5 * box.height)\n  set.push(name)\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()))\n  sgroup.dataArea = sbox.transform(Scale.scaled2obj, render.options)\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup))\n  }\n\n  return set\n}\n\nfunction drawAttachedDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid)\n    const p = Scale.obj2scaled(atom.a.pp, options)\n    const bb = atom.visel.boundingBox\n\n    if (bb !== null) p.x = Math.max(p.x, bb.p1.x)\n\n    p.x += options.lineWidth // shift a bit to the right\n\n    const nameI = showValue(paper, p, sgroup, options)\n    const boxI = util.relBox(nameI.getBBox())\n\n    nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height)\n    set.push(nameI)\n\n    let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()))\n    sboxI = sboxI.transform(Scale.scaled2obj, render.options)\n    sgroup.areas.push(sboxI)\n  })\n\n  return set\n}\n\nfunction getBracketParameters(\n  mol,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  render,\n  id\n) {\n  // eslint-disable-line max-params\n  function BracketParams(c, d, w, h) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n  const brackets = []\n  let n = d.rotateSC(1, 0)\n\n  const crossBondsPerAtom = Object.values(crossBonds)\n  const crossBondsValues = crossBondsPerAtom.flat()\n  if (crossBondsValues.length < 2) {\n    ;(function () {\n      d = d || new Vec2(1, 0)\n      n = n || d.rotateSC(1, 0)\n      const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3)\n      const cl = Vec2.lc2(\n        d,\n        bracketBox.p0.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const cr = Vec2.lc2(\n        d,\n        bracketBox.p1.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const bracketHeight = bracketBox.sz().y\n\n      brackets.push(\n        new BracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n        new BracketParams(cr, d, bracketWidth, bracketHeight)\n      )\n    })()\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    ;(function () {\n      // eslint-disable-line max-statements\n      const b1 = mol.bonds.get(crossBondsValues[0])\n      const b2 = mol.bonds.get(crossBondsValues[1])\n      const cl0 = b1.getCenter(mol)\n      const cr0 = b2.getCenter(mol)\n      let tl = -1\n      let tr = -1\n      let tt = -1\n      let tb = -1\n      const cc = Vec2.centre(cl0, cr0)\n      const dr = Vec2.diff(cr0, cl0).normalized()\n      const dl = dr.negated()\n      const dt = dr.rotateSC(1, 0)\n      const db = dt.negated()\n\n      mol.sGroupForest.children.get(id).forEach((sgid) => {\n        let bba = render.ctab.sgroups.get(sgid).visel.boundingBox\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n        tl = Math.max(tl, util.shiftRayBox(cl0, dl, bba))\n        tr = Math.max(tr, util.shiftRayBox(cr0, dr, bba))\n        tt = Math.max(tt, util.shiftRayBox(cc, dt, bba))\n        tb = Math.max(tb, util.shiftRayBox(cc, db, bba))\n      }, this)\n      tl = Math.max(tl + 0.2, 0)\n      tr = Math.max(tr + 0.2, 0)\n      tt = Math.max(Math.max(tt, tb) + 0.1, 0)\n      const bracketWidth = 0.25\n      const bracketHeight = 1.5 + tt\n      brackets.push(\n        new BracketParams(\n          cl0.addScaled(dl, tl),\n          dl,\n          bracketWidth,\n          bracketHeight\n        ),\n        new BracketParams(\n          cr0.addScaled(dr, tr),\n          dr,\n          bracketWidth,\n          bracketHeight\n        )\n      )\n    })()\n  } else {\n    ;(function () {\n      for (let i = 0; i < crossBondsValues.length; ++i) {\n        const b = mol.bonds.get(crossBondsValues[i])\n        const c = b.getCenter(mol)\n        const d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated()\n        brackets.push(new BracketParams(c, d, 0.2, 1.0))\n      }\n    })()\n  }\n  return brackets\n}\n\nfunction getHighlighPathInfo(sgroup, options) {\n  let bracketBox = sgroup.bracketBox.transform(Scale.obj2scaled, options)\n  const lineWidth = options.lineWidth\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6)\n  bracketBox = bracketBox.extend(vext, vext)\n  const d = sgroup.bracketDir\n  const n = d.rotateSC(1, 0)\n  const a0 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p0.y)\n  const a1 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p1.y)\n  const b0 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p0.y)\n  const b1 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p1.y)\n  const size = options.contractedFunctionalGroupSize\n  let startX = (b0.x + a0.x) / 2 - size / 2\n  let startY = (a1.y + a0.y) / 2 - size / 2\n  if (sgroup.firstSgroupAtom) {\n    const shift = new Vec2(size / 2, size / 2, 0)\n    const hoverPp = Vec2.diff(sgroup.firstSgroupAtom.pp.scaled(40), shift)\n    startX = hoverPp.x\n    startY = hoverPp.y\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size\n  }\n}\n\nexport default ReSGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\ninterface StyledPath {\n  path: any\n  stylesApplied: boolean\n}\nclass ReSimpleObject extends ReObject {\n  private item: any\n\n  constructor(simpleObject: any) {\n    super('simpleObject')\n    this.item = simpleObject\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const mode = item.mode\n    const pos = item.pos\n    let dist: number\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry))\n        const pointToCenter = Vec2.diff(point, center)\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry)\n          )\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = calculateDistanceToLine(pos, point)\n        }\n        break\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x)\n        const topY = Math.min(pos[0].y, pos[1].y)\n        const bottomX = Math.max(pos[0].x, pos[1].x)\n        const bottomY = Math.max(pos[0].y, pos[1].y)\n\n        const distances: Array<number> = []\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y)\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY)\n          } else {\n            distances.push(point.y - topY, bottomY - point.y)\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point))\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point))\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point))\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point))\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x)\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX)\n          } else {\n            distances.push(point.x - topX, bottomX - point.x)\n          }\n        }\n        dist = Math.min(...distances)\n        break\n      }\n      case SimpleObjectMode.line: {\n        dist = calculateDistanceToLine(pos, point)\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y)\n        )\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x)\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y)\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h)\n        )\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y)\n          )\n        }\n        break\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)))\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n    return refPoints\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = []\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.obj2scaled(p, render.options)\n    })\n    const scaleFactor = render.options.scale\n\n    const path: Array<any> = []\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        path.push(\n          render.paper.ellipse(\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) + scaleFactor / 8),\n            tfx(Math.abs(ry) + scaleFactor / 8)\n          )\n        )\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          path.push(\n            render.paper.ellipse(\n              tfx(point[0].x + rx),\n              tfx(point[0].y + ry),\n              tfx(Math.abs(rx) - scaleFactor / 8),\n              tfx(Math.abs(ry) - scaleFactor / 8)\n            )\n          )\n        }\n        break\n      }\n\n      case SimpleObjectMode.rectangle: {\n        path.push(\n          render.paper.rect(\n            tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) +\n                scaleFactor / 4\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) +\n                scaleFactor / 4\n            )\n          )\n        )\n\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          path.push(\n            render.paper.rect(\n              tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n              tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n              tfx(\n                Math.max(point[0].x, point[1].x) -\n                  Math.min(point[0].x, point[1].x) -\n                  scaleFactor / 4\n              ),\n              tfx(\n                Math.max(point[0].y, point[1].y) -\n                  Math.min(point[0].y, point[1].y) -\n                  scaleFactor / 4\n              )\n            )\n          )\n        }\n\n        break\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = []\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x)\n        )\n\n        const p0 = { x: 0, y: 0 }\n        const p1 = { x: 0, y: 0 }\n\n        const k = point[0].x > point[1].x ? -1 : 1\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle))\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle))\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle))\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle))\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n\n        path.push(render.paper.path(poly))\n        break\n      }\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const enhPaths: Array<StyledPath> = path.map((p) => {\n      return { path: p, stylesApplied: false }\n    })\n\n    return enhPaths\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle)\n      }\n      return enhPath.path\n    })\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths)\n    return paths\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, restruct.render.options) || new Vec2()\n    })\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = restruct.render.options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.hoverStyleSimpleObject\n      )\n    )\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n\n    const path = generatePath(this.item.mode, render.paper, pos, options)\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: Vec2, options?): any {\n  let path: any\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos, options)\n      break\n    }\n    default: {\n      throw new Error('Unsupported shape type')\n    }\n  }\n\n  return path\n}\n\nexport default ReSimpleObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop')\n    this.loop = loop\n    this.centre = new Vec2()\n    this.radius = new Vec2()\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const paper = render.paper\n    const molecule = restruct.molecule\n    const loop = this.loop\n    this.centre = new Vec2()\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const bond = restruct.bonds.get(hb.bid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false\n      this.centre.add_(apos) // eslint-disable-line no-underscore-dangle\n    })\n    loop.convex = true\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k])\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir)\n      )\n      if (angle > 0) loop.convex = false\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length)\n    this.radius = -1\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      const bpos = Scale.obj2scaled(restruct.atoms.get(hb.end).a.pp, options)\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized()\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n)\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist)\n    })\n    this.radius *= 0.7\n    if (!loop.aromatic) return\n    let path = null\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width']\n      })\n    } else {\n      let pathStr = ''\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k])\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir)\n        )\n        const halfAngle = (Math.PI - angle) / 2\n        const dir = hbb.dir.rotate(halfAngle)\n        const pi = Scale.obj2scaled(restruct.atoms.get(hbb.begin).a.pp, options)\n        let sin = Math.sin(halfAngle)\n        const minSin = 0.1\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin)\n        const offset = options.bondSpace / sin\n        const qi = pi.addScaled(dir, -offset)\n        pathStr += k === 0 ? 'M' : 'L'\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y)\n      }\n      pathStr += 'Z'\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- '\n      })\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid\n    )\n  }\n}\n\nexport default ReLoop\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange\n} from 'draft-js'\nimport { Text, TextCommand, Vec2 } from 'domain/entities'\nimport { flatten, isEqual } from 'lodash/fp'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Scale } from 'domain/helpers'\nimport { RaphaelBaseElement } from 'raphael'\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize\n}\n\nconst SCALE = 40 // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text\n  paths: Array<Array<RaphaelBaseElement>> = []\n\n  constructor(text: Text) {\n    super('text')\n    this.item = text\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return []\n\n    const { p0, p1 } = this.getRelBox(this.paths)\n\n    const p = this.item.position\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE\n\n    const refPoints: Array<Vec2> = []\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y)\n    )\n\n    return refPoints\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths)\n    const topLeft = p0.sub(render.options.offset)\n    const { x: width, y: height } = p1.sub(p0)\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5)\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0]\n    const leftEdge = firstElOfFirstRow.getBBox().x\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0]\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y)\n    )\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0]\n    )\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1]\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1]\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height)\n    )\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge)\n    }\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width\n      return rowWidth\n    }, 0)\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render\n    const paper = render.paper\n    const paperScale = Scale.obj2scaled(this.item.position!, options)\n\n    let shiftY = 0\n    this.paths = []\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null\n    if (!rawContentState) {\n      return\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options)\n      let shiftX = 0\n      const row: Array<RaphaelBaseElement> = []\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0')\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0'\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles\n          })\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0))\n        row.push(path)\n        shiftX += path.getBBox().width\n      })\n\n      this.paths.push(row)\n\n      const { p0, p1 } = this.getRelBox([row])\n      shiftY += Math.abs(Vec2.diff(p0, p1).y)\n    })\n\n    this.item.setPos(this.getReferencePoints())\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true\n    )\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = []\n\n    let start = 0\n    let styles: Record<string, any> = this.getStyles(block, start, options)\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options)\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles])\n        styles = nextStyles\n        start = i\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles])\n\n    return ranges\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length\n    )\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0]\n        }\n        return acc\n      },\n      null\n    )\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz\n        const fontszsub = (customFontSize || options.fontszsub) * 0.8\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold'\n            break\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic'\n            break\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = fontsz / 3\n\n            break\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = -fontsz / 3\n            break\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px'\n            break\n\n          default:\n        }\n\n        return styles\n      },\n      {}\n    )\n  }\n}\n\nexport default ReText\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReAtom from './reatom'\nimport ReBond from './rebond'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReEnhancedFlag from './reenhancedFlag'\nimport ReFrag from './refrag'\nimport ReLoop from './reloop'\nimport ReRGroup from './rergroup'\nimport ReRxnArrow from './rerxnarrow'\nimport ReRxnPlus from './rerxnplus'\nimport ReSGroup from './resgroup'\nimport ReSimpleObject from './resimpleObject'\nimport ReText from './retext'\nimport { Render } from '../raphaelRender'\nimport Visel from './visel'\nimport util from '../util'\n\nclass ReStruct {\n  public static maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText\n  }\n\n  public render: Render\n  public molecule: Struct\n  public atoms: Map<number, ReAtom> = new Map()\n  public bonds: Map<number, ReBond> = new Map()\n  public reloops: Map<number, ReLoop> = new Map()\n  public rxnPluses: Map<number, ReRxnPlus> = new Map()\n  public rxnArrows: Map<number, ReRxnArrow> = new Map()\n  public frags: Pool = new Pool()\n  public rgroups: Pool = new Pool()\n  public sgroups: Map<number, ReSGroup> = new Map()\n  public sgroupData: Map<number, ReDataSGroupData> = new Map()\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map()\n  private simpleObjects: Map<number, ReSimpleObject> = new Map()\n  public texts: Map<number, ReText> = new Map()\n  private initialized = false\n  private layers: Array<any> = []\n  public connectedComponents: Pool = new Pool()\n  private ccFragmentType: Pool = new Pool()\n  private structChanged = false\n\n  private atomsChanged: Map<number, ReAtom> = new Map()\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map()\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map()\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map()\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private textsChanged: Map<number, ReText> = new Map()\n  constructor(molecule, render: Render) {\n    // eslint-disable-line max-statements\n    this.render = render\n    this.molecule = molecule || new Struct()\n    this.initLayers()\n    this.clearMarks()\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom))\n    })\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond))\n    })\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop))\n    })\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item))\n    })\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item))\n    })\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item))\n    })\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item))\n    })\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item))\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag())\n    })\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item))\n    })\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item))\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item))\n      } // [MK] sort of a hack, we use the SGroup id for the data field id\n      if (FunctionalGroup.isFunctionalGroup(item)) {\n        this.molecule.functionalGroups.set(id, new FunctionalGroup(item))\n      }\n    })\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid)\n    if (!atom || atom.component < 0) return\n    const cc = this.connectedComponents.get(atom.component)\n\n    cc.delete(aid)\n    if (cc.size < 1) this.connectedComponents.delete(atom.component)\n\n    atom.component = -1\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear()\n    this.atoms.forEach((atom) => {\n      atom.component = -1\n    })\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid]\n    const ids = new Pile()\n\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)\n      if (!atom) continue\n      if (atom.component >= 0) adjacentComponents.add(atom.component)\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor)\n        if (!halfBond) return\n        const neiId = halfBond.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet)\n    const adjacentComponents = new Pile()\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents\n    )\n\n    adjacentComponents.delete(compId)\n\n    let type = -1\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (!atom) return\n      atom.component = compId\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType\n    })\n\n    this.ccFragmentType.set(compId, type)\n    return compId\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.component = -1\n    })\n\n    return this.connectedComponents.delete(ccid)\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return\n\n      const adjacentComponents = new Pile()\n      const idSet = this.getConnectedComponent(aid, adjacentComponents)\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid)\n      })\n\n      this.addConnectedComponent(idSet)\n    })\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0'\n        })\n        .toFront()\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return\n\n    const paths = Array.isArray(path) ? path : [path]\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null\n      const ext = pos && bb ? bb.translate(pos.negated()) : null\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y)\n        bb = bb ? bb.translate(offset) : null\n      }\n      visel.add(path, bb, ext)\n      path.insertBefore(this.layers[LayerMap[group]])\n    })\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map()\n    })\n\n    this.structChanged = false\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark)\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark)\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed']\n\n    const value = mapChanged.has(id) ? Math.max(mark, mapChanged.get(id)) : mark\n\n    mapChanged.set(id, value)\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel)\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove()\n    })\n    visel.clear()\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func)\n    })\n  }\n\n  getVBoxObj(selection): Box2Abs | null {\n    selection = selection || {}\n\n    if (isSelectionEmpty(selection)) {\n      Object.keys(ReStruct.maps).forEach((map) => {\n        selection[map] = Array.from(this[map].keys())\n      })\n    }\n\n    let vbox: Box2Abs | null = null\n    Object.keys(ReStruct.maps).forEach((map) => {\n      if (!selection[map]) return\n\n      selection[map].forEach((id) => {\n        const box = this[map].get(id).getVBoxObj(this.render)\n        if (box) vbox = vbox ? Box2Abs.union(vbox, box) : box.clone()\n      })\n    })\n\n    vbox = vbox || new Box2Abs(0, 0, 0, 0)\n    return vbox\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d))\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s))\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel))\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1))\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id)\n        })\n      }\n    })\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid)\n    )\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render)\n    )\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel)\n      this.frags.delete(fid)\n      this.molecule.frags.delete(fid)\n    })\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n\n      mapChanged.forEach((_value, id) => {\n        this.clearVisel(this[map].get(id).visel)\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0\n      })\n    })\n\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel)\n      sgroup.hovering = null\n      sgroup.selectionPlate = null\n    })\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel)\n    })\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel)\n    })\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents()\n      this.molecule.initHalfBonds()\n      this.molecule.initNeighbors()\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys())\n    this.molecule.updateHalfBonds(atomsChangedArray)\n    this.molecule.sortNeighbors(atomsChangedArray)\n\n    this.assignConnectedComponents()\n    this.initialized = true\n\n    this.verifyLoops()\n    const updLoops = force || this.structChanged\n    if (updLoops) this.updateLoops()\n    this.showLabels()\n    this.showBonds()\n    if (updLoops) this.showLoops()\n    this.showReactionSymbols()\n    this.showSGroups()\n\n    this.showFragments()\n    this.showRGroups()\n    this.showEnhancedFlags()\n    this.showSimpleObjects()\n    this.showTexts()\n    this.clearMarks()\n\n    return true\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel)\n    })\n    const ret = this.molecule.findLoops()\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1)\n    })\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)))\n    })\n  }\n\n  showLoops(): void {\n    const options = this.render.options\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options)\n    })\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id)\n      if (simpleObject) simpleObject.show(this, options)\n    })\n  }\n\n  showTexts() {\n    const options = this.render.options\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id)\n      if (text) text.show(this, id, options)\n    })\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id)\n      if (arrow) arrow.show(this, id, options)\n    })\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id)\n      if (plus) plus.show(this, id, options)\n    })\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id)\n        if (!resgroup) return\n        resgroup.show(this)\n      })\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id)\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true)\n      }\n      // TODO fragment selection & highlighting\n    })\n  }\n\n  showRGroups(): void {\n    const options = this.render.options\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options)\n    })\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId)\n    if (!reloop) {\n      return\n    }\n    this.clearVisel(reloop.visel)\n\n    const bondlist: Array<number> = []\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid)\n      if (!hb) return\n      hb.loop = -1\n      this.markBond(hb.bid, 1)\n      this.markAtom(hb.begin, 1)\n      bondlist.push(hb.bid)\n    })\n\n    this.reloops.delete(loopId)\n    this.molecule.loops.delete(loopId)\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid)\n    })\n  }\n\n  showLabels(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.show(this, aid, options)\n    })\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid)\n      if (flag) flag.show(this, chid, options)\n    })\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid)\n      if (bond) {\n        bond.show(this, bid, options)\n      }\n    })\n  }\n\n  setSelection(selection) {\n    const redraw = arguments.length === 0 // render.update only\n    const atoms: { selected: boolean; sgroup: number }[] = []\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values() // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup: sgroup\n            })\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item.item.id,\n              this.molecule.functionalGroups\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item.item.id\n            )\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected\n          }\n          const selected = redraw\n            ? item.selected\n            : selection && selection[map] && selection[map].indexOf(id) > -1\n\n          this.showItemSelection(item, selected)\n        })\n      }\n    })\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item)\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected\n    if (selected) {\n      if (!exists) {\n        const render = this.render\n        const options = render.options\n        const paper = render.paper\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options)\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate\n        )\n      }\n      if (item.selectionPlate) item.selectionPlate.show() // TODO [RB] review\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide() // TODO [RB] review\n    }\n  }\n}\n\nfunction isSelectionEmpty(selection) {\n  if (!selection) return true\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0\n  )\n\n  return !anySelection\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor)\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor)\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor)\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0)\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s)\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  )\n}\n\nexport default ReStruct\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport { inRange } from 'lodash'\n\nlet FRAC = Math.PI / 12 // '15º'\n\nfunction setFracAngle(angle) {\n  FRAC = (Math.PI / 180) * angle\n}\n\nfunction calcAngle(pos0, pos1) {\n  const v = Vec2.diff(pos1, pos0)\n  return Math.atan2(v.y, v.x)\n}\n\nfunction fracAngle(angle, angle2) {\n  if (angle2) angle = calcAngle(angle, angle2)\n  return Math.round(angle / FRAC) * FRAC\n}\n\nfunction calcNewAtomPos(pos0, pos1, ctrlKey) {\n  const v = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1)\n  )\n  v.add_(pos0) // eslint-disable-line no-underscore-dangle\n  return v\n}\n\nfunction degrees(angle) {\n  let degree = Math.round((angle / Math.PI) * 180)\n  if (degree > 180) degree -= 360\n  else if (degree <= -180) degree += 360\n  return degree\n}\n\nconst BONDS_MERGE_ANGLE = 10 // 'º'\nconst BONDS_MERGE_SCALE = 0.2\n\nfunction mergeBondsParams(struct1, bond1, struct2, bond2) {\n  const begin1 = struct1.atoms.get(bond1.begin)\n  const begin2 = struct2.atoms.get(bond2.begin)\n  const end1 = struct1.atoms.get(bond1.end)\n  const end2 = struct2.atoms.get(bond2.end)\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp)\n  const mergeAngle = Math.abs(degrees(angle) % 180)\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp)\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE)\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 }\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  calcNewAtomPos,\n  degrees,\n  setFracAngle,\n  mergeBondsParams\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport utils from '../editor/shared/utils'\n\nfunction defaultOptions(opt) {\n  const scaleFactor = opt.scale || 100\n\n  if (opt.rotationStep) utils.setFracAngle(opt.rotationStep)\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactor / 6))\n  const subFontSize = Math.ceil(0.7 * labelFontSize)\n\n  const defaultOptions = {\n    'dearomatize-on-load': false,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: 'on',\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    scale: scaleFactor,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactor / 20,\n    bondSpace: opt.doubleBondWidth || scaleFactor / 7,\n    stereoBond: opt.stereoBondWidth || scaleFactor / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': opt.bondThickness || scaleFactor / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round'\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#7f7',\n      stroke: 'none'\n    },\n    hoverStyle: {\n      stroke: '#0c0',\n      'stroke-width': (0.6 * scaleFactor) / 20\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactor) / 20\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px'\n    },\n    hoverStyleSimpleObject: {\n      stroke: '#0c0',\n      'stroke-width': scaleFactor / 4,\n      'stroke-linecap': 'round',\n      'stroke-opacity': 0.6\n    },\n    atomSelectionPlateRadius: labelFontSize * 1.2,\n    contractedFunctionalGroupSize: 50\n  }\n\n  return Object.assign({}, defaultOptions, opt)\n}\n\nexport default defaultOptions\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport { ReStruct } from './restruct'\nimport { Scale } from 'domain/helpers'\nimport defaultOptions from './options'\nimport draw from './draw'\n\nexport function Render(clientArea, opt) {\n  let renderWidth = clientArea.clientWidth - 10\n  let renderHeight = clientArea.clientHeight - 10\n  renderWidth = renderWidth > 0 ? renderWidth : 0\n  renderHeight = renderHeight > 0 ? renderHeight : 0\n\n  this.userOpts = opt\n  this.clientArea = clientArea\n  this.paper = new Raphael(clientArea, renderWidth, renderHeight)\n  this.sz = Vec2.ZERO\n  this.ctab = new ReStruct(new Struct(), this)\n  this.options = defaultOptions(this.userOpts)\n}\n\nRender.prototype.updateOptions = function (opts) {\n  try {\n    const passedOptions = JSON.parse(opts)\n    if (passedOptions && typeof passedOptions === 'object') {\n      this.options = { ...this.options, ...passedOptions }\n      return this.options\n    }\n  } catch (e) {\n    console.log('Not a valid settings object')\n  }\n  return false\n}\n\nRender.prototype.selectionPolygon = function (r) {\n  return draw.selectionPolygon(this.paper, r, this.options)\n}\n\nRender.prototype.selectionLine = function (p0, p1) {\n  return draw.selectionLine(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.selectionRectangle = function (p0, p1) {\n  return draw.selectionRectangle(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.view2obj = function (p, isRelative) {\n  let scroll = this.scrollPos()\n  if (!this.useOldZoom) {\n    p = p.scaled(1 / this.options.zoom)\n    scroll = scroll.scaled(1 / this.options.zoom)\n  }\n  p = isRelative ? p : p.add(scroll).sub(this.options.offset)\n  return Scale.scaled2obj(p, this.options)\n}\n\nRender.prototype.obj2view = function (v, isRelative) {\n  let p = Scale.obj2scaled(v, this.options)\n  p = isRelative\n    ? p\n    : p\n        .add(this.options.offset)\n        .sub(this.scrollPos().scaled(1 / this.options.zoom))\n  if (!this.useOldZoom) p = p.scaled(this.options.zoom)\n  return p\n}\n\nRender.prototype.scrollPos = function () {\n  return new Vec2(this.clientArea.scrollLeft, this.clientArea.scrollTop)\n}\n\nRender.prototype.page2obj = function (event) {\n  const clientArea = this.clientArea\n\n  const { top: offsetTop, left: offsetLeft } =\n    clientArea.getBoundingClientRect()\n\n  const pp = new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop)\n  return this.view2obj(pp)\n}\n\nRender.prototype.setPaperSize = function (sz) {\n  this.sz = sz\n  this.paper.setSize(sz.x * this.options.zoom, sz.y * this.options.zoom)\n  this.setViewBox(this.options.zoom)\n}\n\nRender.prototype.setOffset = function (newoffset) {\n  const delta = new Vec2(\n    newoffset.x - this.options.offset.x,\n    newoffset.y - this.options.offset.y\n  )\n  this.clientArea.scrollLeft += delta.x\n  this.clientArea.scrollTop += delta.y\n  this.options.offset = newoffset\n}\n\nRender.prototype.setZoom = function (zoom) {\n  // when scaling the canvas down it may happen that the scaled canvas is smaller than the view window\n  // don't forget to call setScrollOffset after zooming (or use extendCanvas directly)\n  this.options.zoom = zoom\n  this.paper.setSize(this.sz.x * zoom, this.sz.y * zoom)\n  this.setViewBox(zoom)\n}\n\nfunction calcExtend(sSz, x0, y0, x1, y1) {\n  // eslint-disable-line max-params\n  let ex = x0 < 0 ? -x0 : 0\n  let ey = y0 < 0 ? -y0 : 0\n\n  if (sSz.x < x1) ex += x1 - sSz.x\n  if (sSz.y < y1) ey += y1 - sSz.y\n  return new Vec2(ex, ey)\n}\n\nRender.prototype.setScrollOffset = function (x, y) {\n  const clientArea = this.clientArea\n  const cx = clientArea.clientWidth\n  const cy = clientArea.clientHeight\n  const e = calcExtend(\n    this.sz.scaled(this.options.zoom),\n    x,\n    y,\n    cx + x,\n    cy + y\n  ).scaled(1 / this.options.zoom)\n  if (e.x > 0 || e.y > 0) {\n    this.setPaperSize(this.sz.add(e))\n    const d = new Vec2(x < 0 ? -x : 0, y < 0 ? -y : 0).scaled(\n      1 / this.options.zoom\n    )\n    if (d.x > 0 || d.y > 0) {\n      this.ctab.translate(d)\n      this.setOffset(this.options.offset.add(d))\n    }\n  }\n  clientArea.scrollLeft = x\n  clientArea.scrollTop = y\n  // TODO: store drag position in scaled systems\n  // scrollLeft = clientArea.scrollLeft;\n  // scrollTop = clientArea.scrollTop;\n  this.update(false)\n}\n\nRender.prototype.setScale = function (z) {\n  if (this.options.offset) {\n    this.options.offset = this.options.offset.scaled(1 / z).scaled(z)\n  }\n  this.userOpts.scale *= z\n  this.options = null\n  this.update(true)\n}\n\nRender.prototype.setViewBox = function (z) {\n  if (!this.useOldZoom) {\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      '0 0 ' + this.sz.x + ' ' + this.sz.y\n    )\n  } else this.setScale(z)\n}\n\nRender.prototype.setMolecule = function (ctab) {\n  this.paper.clear()\n  this.ctab = new ReStruct(ctab, this)\n  this.options.offset = new Vec2()\n  this.update(false)\n}\n\nRender.prototype.update = function (force = false, viewSz = null) {\n  // eslint-disable-line max-statements\n  viewSz =\n    viewSz ||\n    new Vec2(\n      this.clientArea.clientWidth || 100,\n      this.clientArea.clientHeight || 100\n    )\n\n  const changes = this.ctab.update(force)\n  this.ctab.setSelection() // [MK] redraw the selection bits where necessary\n  if (changes) {\n    const sf = this.options.scale\n    const bb = this.ctab\n      .getVBoxObj()\n      .transform(Scale.obj2scaled, this.options)\n      .translate(this.options.offset || new Vec2())\n\n    if (!this.options.autoScale) {\n      const ext = Vec2.UNIT.scaled(sf)\n      const eb = bb.sz().length() > 0 ? bb.extend(ext, ext) : bb\n      const vb = new Box2Abs(\n        this.scrollPos(),\n        viewSz.scaled(1 / this.options.zoom).sub(Vec2.UNIT.scaled(20))\n      )\n      const cb = Box2Abs.union(vb, eb)\n      if (!this.oldCb) this.oldCb = new Box2Abs()\n\n      const sz = cb.sz().floor()\n      const delta = this.oldCb.p0.sub(cb.p0).ceil()\n      this.oldBb = bb\n      if (!this.sz || sz.x !== this.sz.x || sz.y !== this.sz.y) {\n        this.setPaperSize(sz)\n      }\n\n      this.options.offset = this.options.offset || new Vec2()\n      if (delta.x !== 0 || delta.y !== 0) {\n        this.setOffset(this.options.offset.add(delta))\n        this.ctab.translate(delta)\n      }\n    } else {\n      const sz1 = bb.sz()\n      const marg = this.options.autoScaleMargin\n      const mv = new Vec2(marg, marg)\n      const csz = viewSz\n      if (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1) {\n        throw new Error('View box too small for the given margin')\n      }\n      let rescale = Math.max(\n        sz1.x / (csz.x - 2 * marg),\n        sz1.y / (csz.y - 2 * marg)\n      )\n      if (this.options.maxBondLength / rescale > 1.0) rescale = 1.0\n      const sz2 = sz1.add(mv.scaled(2 * rescale))\n      /* eslint-disable no-mixed-operators */\n      this.paper.setViewBox(\n        bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n        bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n        csz.x * rescale,\n        csz.y * rescale\n      )\n      /* eslint-enable no-mixed-operators */\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render'\n\nimport { OperationType } from './OperationType'\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>\ntype OperationType = ValueOf<typeof OperationType>\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined\n  type: OperationType\n  priority: number\n  data: any\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type\n    this.priority = priority\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented')\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct)\n    if (!this._inverted) {\n      this._inverted = this.invert()\n      this._inverted._inverted = this\n    }\n    return this._inverted\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented')\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId)\n    if (!atom) {\n      return\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0)\n\n    const halfBonds = restruct.molecule.halfBonds\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return\n      }\n\n      const halfBond = halfBonds.get(halfBondId)\n      if (!halfBond) {\n        return\n      }\n\n      restruct.markBond(halfBond.bid, 1)\n      restruct.markAtom(halfBond.end, 0)\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid)\n      }\n    })\n\n    const fragment = atom.a.fragment\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0)\n      }\n    })\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId)\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop)\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop)\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId)\n\n    const bond = restruct.bonds.get(bondId)\n    if (!bond) {\n      return\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0)\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0)\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    map,\n    id: number,\n    level?: any\n  ) {\n    if (map === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level)\n      return\n    }\n\n    if (map === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id)\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id)\n      }\n      return\n    }\n\n    restruct.markItem(map, id, level)\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1)\n  }\n}\n\nexport { BaseOperation }\nexport default BaseOperation\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight'\n})\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  aid?: any\n  attribute?: any\n  value?: any\n}\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, 1)\n    this.data = { aid: atomId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data\n\n      const atom = restruct.molecule.atoms.get(aid)!\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute]\n        }\n      }\n\n      atom[attribute] = value\n      BaseOperation.invalidateAtom(restruct, aid)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, 2)\n    this.data = { aid: atomId, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { aid, d } = this.data\n    const atom = struct.atoms.get(aid)\n    if (!atom) return\n    atom!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid)\n    if (reatom) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reatom.visel.translate(scaled)\n    }\n\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove()\n    inverted.data = this.data\n    return inverted\n  }\n\n  isDummy() {\n    const { d } = this.data\n    return d.x === 0 && d.y === 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Pile, Vec2 } from 'domain/entities'\nimport { ReAtom, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any\n  atom: any\n  pos: any\n}\n\nclass AtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD)\n    this.data = { atom, pos, aid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data\n\n    const struct = restruct.molecule\n\n    const pp: { label: string } = { label: '' }\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p]\n      })\n    }\n\n    pp.label = pp.label || 'C'\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp))\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp))\n    }\n\n    const { aid } = this.data\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!)\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]))\n    restruct.atoms.set(aid, atomData)\n    restruct.markAtom(aid, 1)\n\n    struct.atomSetPos(aid, new Vec2(pos))\n\n    const arrow = struct.rxnArrows.get(0)\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x\n      )\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, 5)\n    this.data = { aid: atomId, atom: null, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid)\n      this.data.pos = this.data.atom.pp\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid)\n    if (!restructedAtom) {\n      return\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component)\n    set.delete(aid)\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component)\n    }\n\n    restruct.clearVisel(restructedAtom.visel)\n    restruct.atoms.delete(aid)\n    restruct.markItemRemoved()\n    struct.atoms.delete(aid)\n  }\n\n  invert() {\n    const inverted = new AtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { AtomAdd, AtomDelete }\nexport * from './AtomAttr'\nexport * from './AtomMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  bid: any\n  attribute: any\n  value: any\n}\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(bondId?: any, attribute?: any, value?: any) {\n    super(OperationType.BOND_ATTR, 2)\n    this.data = { bid: bondId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n\n      if (!this.data2) {\n        this.data2 = {\n          bid: bid,\n          attribute: attribute,\n          value: bond[attribute]\n        }\n      }\n\n      bond[attribute] = value\n\n      BaseOperation.invalidateBond(restruct, bid)\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid)\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n      return bond[attribute] === value\n    }\n    return false\n  }\n\n  invert() {\n    const inverted = new BondAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any\n    d: any\n  }\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, 2)\n    this.data = { bid: bondId, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data\n    const bond = restruct.bonds.get(bid)\n    if (!bond) return\n\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    bond.visel.translate(scaled)\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new BondMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReBond, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { Bond } from 'domain/entities'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any\n  begin: any\n  end: any\n  bid: any\n}\n\nclass BondAdd extends BaseOperation {\n  data: Data\n\n  constructor(begin?: any, end?: any, bond?: any) {\n    super(OperationType.BOND_ADD, 1)\n    this.data = { bond, begin, end, bid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected')\n    }\n\n    BaseOperation.invalidateAtom(restruct, begin, 1)\n    BaseOperation.invalidateAtom(restruct, end, 1)\n\n    const pp: {\n      type: number\n      begin: number\n      end: number\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0\n    }\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p]\n      })\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE\n    pp.begin = begin\n    pp.end = end\n\n    const newBond = new Bond(pp)\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond)\n    } else {\n      this.data.bid = struct.bonds.add(newBond)\n    }\n\n    const { bid } = this.data\n    const structBond = struct.bonds.get(bid)!\n\n    struct.bondInitHalfBonds(bid)\n    struct.atomAddNeighbor(structBond.hb1)\n    struct.atomAddNeighbor(structBond.hb2)\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond))\n    restruct.markBond(bid, 1)\n  }\n\n  invert() {\n    const inverted = new BondDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, 3)\n    this.data = { bid: bondId, bond: null, begin: null, end: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid)\n      this.data.begin = this.data.bond.begin\n      this.data.end = this.data.bond.end\n    }\n\n    BaseOperation.invalidateBond(restruct, bid)\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid)\n    if (!rebond) return\n    ;[rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return\n      const halfBond = restruct.molecule.halfBonds.get(hbid)\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop)\n      }\n    }, restruct)\n    restruct.clearVisel(rebond.visel)\n    restruct.bonds.delete(bid)\n    restruct.markItemRemoved()\n\n    const structBond = struct.bonds.get(bid)!\n    ;[structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!)\n      if (!halfBond) {\n        return\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!\n      const pos = atom.neighbors.indexOf(hbid!)\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length\n      const next = (pos + 1) % atom.neighbors.length\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next])\n      atom.neighbors.splice(pos, 1)\n    })\n    struct.halfBonds.delete(structBond.hb1!)\n    struct.halfBonds.delete(structBond.hb2!)\n\n    struct.bonds.delete(bid)\n  }\n\n  invert() {\n    const inverted = new BondAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { BondAdd, BondDelete }\nexport * from './BondAttr'\nexport * from './BondMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Struct } from 'domain/entities'\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct\n  }\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD)\n    this.data = { struct }\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule\n    restruct.clearVisels() // TODO: What is it?\n    restruct.render.setMolecule(this.data.struct)\n    this.data.struct = oldStruct\n  }\n\n  invert() {\n    const inverted = new CanvasLoad()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS)\n    this.history = {}\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse()\n\n    const structBox: any = struct.getCoordBoundingBoxObj()\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0)\n    )\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp)\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5))\n      sgroup.pp = alignPoint\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history)\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION)\n    this.history = history\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values())\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id]\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new AlignDescriptors()\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any\n    p: any\n  }\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE)\n    this.data = { frid: fragmentId, p }\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data\n    const { p } = this.data\n    const fragment = restruct.molecule.frags.get(frid)\n    if (!fragment) return\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!\n\n    const newPosition = Vec2.sum(currentPosition, p)\n    fragment.stereoFlagPosition = newPosition\n\n    this.data.p = p.negated()\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1)\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n  skipRgids: any[]\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = new Map()\n    this.skipRgids = skipRgids || []\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new\n        this.ifThenHistory.set(rgid, this.rgid_old)\n        struct.rgroups.set(rgid, rg)\n      }\n    })\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory)\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = history || new Map()\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!\n      rgValue.ifthen = rg\n      struct.rgroups.set(rgid, rgValue)\n    })\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new)\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { Fragment } from 'domain/entities'\nimport { OperationType } from './OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId?: any) {\n    super(OperationType.FRAGMENT_ADD)\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const frag = new Fragment()\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag)\n    } else {\n      struct.frags.set(this.frid, frag)\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)) // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag())\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid)\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    if (!struct.frags.get(this.frid)) {\n      return\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1)\n    restruct.frags.delete(this.frid)\n    struct.frags.delete(this.frid) // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid)\n    if (!enhancedFalg) return\n    restruct.clearVisel(enhancedFalg.visel)\n    restruct.enhancedFlags.delete(this.frid)\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid)\n  }\n}\n\nexport { FragmentAdd, FragmentDelete }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any\n  aid: any\n}\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_ADD_STEREO_ATOM, 100)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid)\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_DELETE_STEREO_ATOM, 90)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data\n    return new FragmentAddStereoAtom(frid, aid)\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number\n\n  constructor(fragmentId: number) {\n    super(OperationType.FRAGMENT_STEREO_FLAG, 6)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const fragment = struct.frags.get(this.frid)!\n    fragment.updateStereoFlag(struct)\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid)\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid)\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, 10)\n    this.atomIds = aids\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds\n\n    restruct.molecule.setImplicitHydrogen(aIds)\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data\n    const reloop = restruct.reloops.get(id)\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reloop.visel.translate(scaled)\n    }\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new LoopMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  rgid: any\n  attribute: any\n  value: any\n}\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR)\n    this.data = { rgid: rgroupId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!\n\n      if (!rgp) {\n        return\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute]\n        }\n      }\n\n      rgp[attribute] = value\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid)\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n      const rgroup = restruct.molecule.rgroups.get(rgid)!\n      return rgroup[attribute] === value\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { RGroup } from 'domain/entities'\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any\n  rg_new: any\n  rgid_old: any\n  rg_old: any\n  frid: any\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT)\n    this.rgid_new = rgroupId\n    this.rg_new = rg\n    this.rgid_old = null\n    this.rg_old = null\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid)\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null\n\n    this.removeOld(struct, restruct)\n    this.setNew(struct, restruct)\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return\n    }\n\n    this.rg_old.frags.delete(this.frid)\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel)\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old)\n      struct.rgroups.delete(this.rgid_old)\n      restruct.markItemRemoved()\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1)\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new)\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup()\n      struct.rgroups.set(this.rgid_new, rgNew)\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew))\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1)\n    }\n\n    rgNew.frags.add(this.frid)\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\n\ninterface RxnArrowMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.rxnArrows.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    move.data = this.data\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\nimport { RxnArrow, Vec2 } from 'domain/entities'\nimport { tfx } from 'utilities'\ninterface RxnArrowResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.rxnArrows.get(id)\n    const anchor = this.data.anchor\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n      let middlePoint\n      let reItem\n\n      if (RxnArrow.isElliptical(item)) {\n        reItem = restruct.rxnArrows.get(id)\n        ;[, , middlePoint] = reItem.getReferencePoints()\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y\n        )\n        const angleInRadians = (angle * Math.PI) / 180\n        const cosAngle = Math.cos(angleInRadians)\n        const sinAngle = Math.sin(angleInRadians)\n\n        const diffX = current.x - anchor.x\n        const diffY = current.y - anchor.y\n\n        const diff = diffY * cosAngle - diffX * sinAngle\n        item.height -= diff\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints()\n\n        anchor.y = newMiddlePoint.y\n        anchor.x = newMiddlePoint.x\n      }\n    } else {\n      item.pos[1].add_(d)\n    }\n\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\nimport { ReStruct } from '../../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data\n\n    const struct = restruct.molecule\n    struct.rxnPluses.get(id)!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    rxn.visel.translate(scaled)\n\n    this.data.d = d.negated()\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRxnPlus, ReStruct } from '../../../../render'\nimport { RxnPlus, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any\n  pos: any\n}\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD)\n    this.data = { plid: null, pos }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const newRxn = new RxnPlus()\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn)\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn)\n    }\n\n    const { pos, plid } = this.data\n\n    const structRxn = struct.rxnPluses.get(plid)\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn))\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos))\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1)\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE)\n    this.data = { plid, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved()\n    const rxn = restruct.rxnPluses.get(plid)\n    if (!rxn) return\n    restruct.clearVisel(rxn.visel)\n    restruct.rxnPluses.delete(plid)\n\n    struct.rxnPluses.delete(plid)\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete }\nexport * from './RxnPlusMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReRxnArrow } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n}\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number\n  ) {\n    super(OperationType.RXN_ARROW_ADD)\n    this.data = { pos, mode, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new RxnArrow({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item)\n      this.data.id = index\n    } else {\n      struct.rxnArrows.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item))\n\n    const positions = [...this.data.pos]\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1)\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!)\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: RxnArrowMode\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE)\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.rxnArrows.get(this.data.id) as any\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel)\n    restruct.rxnArrows.delete(this.data.id)\n\n    struct.rxnArrows.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id)\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete }\nexport * from './RxnArrowMove'\nexport * from './RxnArrowResize'\nexport * from './plus'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport Base from './base'\nimport { OperationType } from './OperationType'\nimport { ReSimpleObject } from '../../render'\nimport { Scale } from 'domain/helpers'\nimport { tfx } from 'utilities'\n\ninterface SimpleObjectAddData {\n  id?: number\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n  toCircle: boolean\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD)\n    this.data = { pos, mode, toCircle, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new SimpleObject({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item)\n      this.data.id = index\n    } else {\n      struct.simpleObjects.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item))\n\n    const positions = [...this.data.pos]\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1])\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1)\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!)\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: SimpleObjectMode\n  toCircle?: boolean\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE)\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.simpleObjects.get(this.data.id) as any\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.data.toCircle = item.toCircle\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel)\n    restruct.simpleObjects.delete(this.data.id)\n\n    struct.simpleObjects.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id\n    )\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.simpleObjects.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    // todo Need further investigation on why this is needed?\n    move.data = this.data\n    return move\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n  toCircle: boolean\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0()\n  const previousPos1 = item.pos[1].get_xy0()\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x\n    current.x = previousPos1.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y\n    current.y = previousPos1.y\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x\n    current.x = previousPos0.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y\n    current.y = previousPos0.y\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate, toCircle }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.simpleObjects.get(id)\n    const anchor = this.data.anchor\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current)\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0()\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current)\n        item.pos[1].x = circlePoint.x\n        item.pos[1].y = circlePoint.y\n        this.data.current = previousPos1\n      } else {\n        const previousPos1 = item.pos[1].get_xy0()\n        item.pos[1].x = current.x\n        item.pos[1].y = current.y\n        this.data.current = previousPos1\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current)\n    } else item.pos[1].add_(d)\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle\n    )\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0)\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { SGroup } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  aid: any\n}\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, 3)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      throw new Error(\n        'The same atom cannot be added to an S-group more than once'\n      )\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found')\n    }\n\n    struct.atomAddToSGroup(sgid, aid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    SGroup.removeAtom(sgroup, aid)\n    atom.sgs.delete(sgid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any\n    attr: any\n    value: any\n  }\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, 4)\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroupId = this.data.sgid\n    const sgroup = struct.sgroups.get(sgroupId)!\n\n    const sgroupData = restruct.sgroupData.get(sgroupId)\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgroupId)\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value)\n  }\n\n  invert() {\n    const inverted = new SGroupAttr()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data\n    const { sgroups } = restruct.molecule\n\n    sgroups.get(id)!.pp?.add_(d) // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated()\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1)\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  parent?: any\n  children?: any\n}\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(OperationType.S_GROUP_ADD_TO_HIERACHY, 100)\n    this.data = { sgid: sgroupId, parent, children }\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data\n\n    const struct = restruct.molecule\n    const sgroup = struct.sgroups.get(sgid)!\n    const relations = struct.sGroupForest.insert(sgroup, parent, children)\n\n    this.data.parent = relations.parent\n    this.data.children = relations.children\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data\n    const struct = restruct.molecule\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid)\n    this.data.children = struct.sGroupForest.children.get(sgid)\n    struct.sGroupForest.remove(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities'\nimport { ReSGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  type?: any\n  pp?: any\n  expanded?: boolean\n  name?: string\n}\n\nclass SGroupCreate extends BaseOperation {\n  data: Data\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string\n  ) {\n    super(OperationType.S_GROUP_CREATE)\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroup = new SGroup(this.data.type)\n    const { sgid, pp, expanded, name } = this.data\n\n    sgroup.id = sgid\n    struct.sgroups.set(sgid, sgroup)\n\n    if (pp) {\n      struct.sgroups.get(sgid)!.pp = new Vec2(pp)\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded\n    }\n\n    if (name) {\n      sgroup.data.name = name\n    }\n\n    restruct.sgroups.set(sgid, new ReSGroup(struct.sgroups.get(sgid)))\n    if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n      restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup))\n    }\n    this.data.sgid = sgid\n  }\n\n  invert() {\n    const inverted = new SGroupDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, 95)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { sgid } = this.data\n    const sgroup = restruct.sgroups.get(sgid)\n    const sgroupData = restruct.sgroupData.get(sgid)\n    if (!sgroup) return\n    this.data.type = sgroup.item.type\n    this.data.pp = sgroup.item.pp\n\n    if (sgroup.item.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgid)\n    }\n\n    restruct.clearVisel(sgroup.visel)\n    if (sgroup.item.atoms.length !== 0) {\n      throw new Error('S-Group not empty!')\n    }\n\n    if (FunctionalGroup.isFunctionalGroup(sgroup.item)) {\n      let relatedFGroupId\n      this.data.name = sgroup.item.data.name\n      this.data.expanded = sgroup.item.expanded\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid\n        }\n      })\n      restruct.molecule.functionalGroups.delete(relatedFGroupId)\n    }\n\n    restruct.sgroups.delete(sgid)\n    struct.sgroups.delete(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupCreate()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupCreate, SGroupDelete }\nexport * from './sgroupAtom'\nexport * from './SGroupAttr'\nexport * from './SGroupDataMove'\nexport * from './sgroupHierarchy'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct, ReText } from '../../../render'\nimport { Text, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\ninterface TextCreateData {\n  id?: number\n  content: string\n  pos: Array<Vec2>\n  position: Vec2\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE)\n    this.data = { content: content, position, pos, id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data)\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item)\n      this.data.id = index\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.texts.set(itemId, new ReText(item))\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position))\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1)\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!)\n  }\n}\n\ninterface TextDeleteData {\n  id: number\n  content?: string\n  position?: Vec2\n  pos?: Array<Vec2> | []\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE)\n    this.data = { id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const item = struct.texts.get(this.data.id)!\n    if (!item) return\n\n    this.data.content = item.content!\n    this.data.position = item.position\n\n    restruct.markItemRemoved()\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel)\n    restruct.texts.delete(this.data.id)\n\n    struct.texts.delete(this.data.id)\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ninterface TextUpdateData {\n  id: number\n  content: string\n  previousContent?: string\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE)\n    this.data = { id, content: content }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data\n    const text = restruct.molecule.texts.get(id)\n\n    if (text) {\n      this.data.previousContent = text.content!\n      text.content = content\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!)\n\n    inverted.data.previousContent = this.data.content\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\ninterface TextMoveData {\n  id: any\n  d: any\n  noinvalidate: boolean\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData\n\n  constructor(id: any, d: any, noinvalidate: boolean) {\n    super(OperationType.TEXT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const difference = this.data.d\n    const item = struct.texts.get(id)\n\n    item?.position?.add_(difference)\n    restruct.texts\n      .get(id)\n      ?.visel.translate(Scale.obj2scaled(difference, restruct.render.options))\n\n    this.data.d = difference.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(this.data.id, this.data.d, this.data.noinvalidate)\n\n    move.data = this.data\n\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base'\nimport { ReStruct } from '../../render'\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[]\n\n  constructor(operations = []) {\n    this.operations = operations\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation)\n    }\n\n    return operation\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations)\n    return this\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct) {\n    const action = new Action()\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority\n    )\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct)\n      action.addOp(invertedOperation)\n    })\n\n    return action\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true)\n      ) === undefined\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { Bond } from 'domain/entities'\nimport { BondAttr } from '../operations'\nimport { MolSerializer } from 'domain/serializers'\n\n/**\n * @param restruct { ReStruct }\n * @param events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  events,\n  simpleFusing\n) {\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const frid = struct.getBondFragment(bid)\n  const beforeMerge = getFragmentWithBondMap(struct, frid)\n  let afterMerge: any = null\n  let pasteItems: any = null\n\n  let action = new Action()\n\n  if (true) {\n    action = simpleFusing(restruct, template, bid)\n    return Promise.resolve(action)\n  }\n\n  const molSerialzer = new MolSerializer()\n\n  return Promise.all([\n    events.aromatizeStruct\n      .dispatch(beforeMerge.frag)\n      .then((res) => molSerialzer.deserialize(res.struct)),\n    events.aromatizeStruct\n      .dispatch(tmpl)\n      .then((res) => molSerialzer.deserialize(res.struct))\n  ])\n    .then(([astruct, atmpl]) => {\n      // aromatize restruct fragment\n      const aromatizeAction = fromAromatize(\n        restruct,\n        astruct,\n        beforeMerge.bondMap\n      )\n      // merge template with fragment\n      const aromTemplate = { bid: template.bid, molecule: atmpl }\n      const templateFusingAction = simpleFusing(restruct, aromTemplate, bid)\n      pasteItems = templateFusingAction[1]\n\n      action = templateFusingAction[0].mergeWith(aromatizeAction)\n\n      afterMerge = getFragmentWithBondMap(restruct.molecule, frid)\n\n      return events.dearomatizeStruct\n        .dispatch(afterMerge.frag)\n        .then((res) => molSerialzer.deserialize(res.struct))\n    })\n    .then((destruct) => {\n      destruct.bonds.forEach((bond) => {\n        if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n          throw Error('Bad dearomatize')\n        }\n      })\n\n      // dearomatize restruct fragment\n      const dearomatizeAction = fromDearomatize(\n        restruct,\n        destruct,\n        afterMerge.bondMap\n      )\n      action = dearomatizeAction.mergeWith(action)\n\n      return [action, pasteItems]\n    })\n    .catch((err) => {\n      console.info(err.message)\n      action.perform(restruct) // revert actions if error\n\n      return simpleFusing(restruct, template, bid)\n    })\n}\n\nfunction fromAromatize(restruct, astruct, bondMap) {\n  const action = new Action()\n\n  astruct.bonds.forEach((bond, bid) => {\n    if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) return\n    action.addOp(\n      new BondAttr(\n        bondMap.get(bid),\n        'type',\n        Bond.PATTERN.TYPE.AROMATIC\n      ).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param dastruct { ReStruct }\n * @param bondMap { Map<number, number> }\n * @returns { Action }\n */\nfunction fromDearomatize(restruct, dastruct, bondMap) {\n  const action = new Action()\n\n  dastruct.bonds.forEach((bond, bid) => {\n    action.addOp(\n      new BondAttr(bondMap.get(bid), 'type', bond.type).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/* UTILS */\n\n// function canBeAromatized(struct) {\n//   // TODO correct this checking && move to chem.Struct ??\n//   if (struct.loops.size === 0) struct.prepareLoopStructure()\n//\n//   const hasAromLoop = struct.loops.find((_id, loop) => loop.aromatic)\n//   if (struct.loops.size === 0 || hasAromLoop) return false\n//\n//   const correctDblBonds = struct.loops.find(\n//     (_id, loop) => loop.dblBonds === loop.hbs.length / 2\n//   )\n//\n//   return correctDblBonds !== undefined\n// }\n\n/**\n * @param struct { Struct }\n * @param frid { number }\n * @returns {{\n * \t\tfrag: Struct,\n * \t\tbondMap: Map<number, number>\n *  }}\n */\nfunction getFragmentWithBondMap(struct, frid) {\n  const atomSet = struct.getFragmentIds(frid)\n  const atomsInStruct = Array.from(atomSet)\n\n  const frag = struct.clone(atomSet)\n  const bondMap = new Map()\n  frag.bonds.forEach((bond, bid) => {\n    bondMap.set(\n      bid,\n      struct.findBondId(atomsInStruct[bond.begin], atomsInStruct[bond.end])\n    )\n  })\n\n  return { frag, bondMap }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4\nconst SELECTION_WITHIN_TEXT = 0\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText\n}\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null\n  let ret = null\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct)\n    const topX = referencePoints[0].x\n    const topY = referencePoints[0].y\n    const bottomX = referencePoints[2].x\n    const bottomY = referencePoints[2].y\n\n    const distances = []\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y)\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY)\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y)\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x)\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX)\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT)\n      }\n    }\n\n    const dist = Math.min(...distances)\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return\n\n    const dist = Vec2.dist(pos, atom.a.pp)\n\n    if (dist < minDist) {\n      closestAtom = aid\n      minDist = dist\n    }\n  })\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null\n  let closestBondCenter = null\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  let minCDist = minDist\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5)\n    const cdist = Vec2.dist(pos, mid)\n\n    if (cdist < minCDist) {\n      minCDist = cdist\n      closestBondCenter = bid\n    }\n  })\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const dir = hb.dir\n    const norm = hb.norm\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const inStripe = Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm))\n\n      if (dist < minDist) {\n        closestBond = bid\n        minDist = dist\n      }\n    }\n  })\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist\n    }\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist\n  let ret = null\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id)\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id)\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return\n\n    const dist = Math.abs(pos.y - p.y)\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected')\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist }\n        minDist = xDist\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  const struct = restruct.molecule\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist)\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist\n    }\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale)\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  let ret = null\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos)\n\n      if (!ret || dist < minDist) {\n        minDist = dist\n        ret = { id: rgid, dist: minDist }\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y))\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null\n  let minDist = SELECTION_DISTANCE_COEFFICIENT\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.functionalGroup && !sg.expanded) {\n      const firstAtomPp = sg.firstSgroupAtom.pp\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n      const shift = new Vec2(0.625, 0.625)\n      const box = {\n        p0: Vec2.diff(firstAtomPp, shift),\n        p1: Vec2.sum(firstAtomPp, shift)\n      }\n\n      const inBox =\n        box.p0.y < pg.y && box.p1.y > pg.y && box.p0.x < pg.x && box.p1.x > pg.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid\n        minDist = xDist\n      }\n    } else {\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x)\n        )\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid\n          minDist = xDist\n        }\n      })\n    }\n  })\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps)\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale)\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item\n      return {\n        map: mp,\n        id: id,\n        dist: dist,\n        ...other\n      }\n    }\n\n    return res\n  }, null)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map() // bid -> position\n  }\n\n  const struct = restruct.molecule\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp)\n  })\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid)\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5\n      )\n    )\n  })\n\n  const result = {}\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId }\n      const item = findMaps[mp](restruct, pos[mp].get(srcId), skip, null, scale)\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id)\n\n      return res\n    }, new Map())\n  })\n\n  return result\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport closest from '../shared/closest'\nimport { difference } from 'lodash'\n\nexport function atomGetAttr(restruct, aid, name) {\n  return restruct.molecule.atoms.get(aid)[name]\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length\n}\n\nexport function atomGetSGroups(restruct, aid) {\n  return Array.from(restruct.atoms.get(aid).a.sgs)\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp\n}\n\nexport function findStereoAtoms(struct, aids) {\n  return aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null)\n}\n\nexport function structSelection(struct) {\n  return [\n    'atoms',\n    'bonds',\n    'frags',\n    'sgroups',\n    'rgroups',\n    'rxnArrows',\n    'rxnPluses',\n    'simpleObjects',\n    'texts'\n  ].reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys())\n    return res\n  }, {})\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = []\n  const pos = atomGetPos(restruct, id)\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id)\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined\n  )\n  const prevBond = restruct.molecule.bonds.get(prevBondId)\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid)\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) })\n  })\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x)\n  )\n\n  let i\n  let maxI = 0\n  let angle\n  let maxAngle = 0\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v\n    )\n\n    if (angle < 0) angle += 2 * Math.PI\n\n    if (angle > maxAngle) {\n      maxI = i\n      maxAngle = angle\n    }\n  }\n\n  let v = new Vec2(1, 0)\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3)\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0]\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = []\n        const neiPos = atomGetPos(restruct, nei.aid)\n        const neiV = Vec2.diff(pos, neiPos)\n        const neiAngle = Math.atan2(neiV.y, neiV.x)\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid)\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos)\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle\n\n          if (ang < 0) ang += 2 * Math.PI\n\n          neiNeighbours.push(ang)\n        })\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2)\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE)\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x)\n    }\n\n    v = v.rotate(angle)\n  }\n\n  v.add_(pos) // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1)\n  a = a === null ? { label: 'C' } : a.id\n\n  return { atom: a, pos: v }\n}\n\nexport function getRelSgroupsBySelection(restruct, selectedAtoms) {\n  return restruct.molecule.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action()\n  action.addOp(new RGroupFragment(rgidNew, frid))\n\n  return action.perform(restruct)\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = []\n) {\n  const action = new Action()\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids))\n  }\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy\n} from '../operations'\nimport { Pile, SGroup } from 'domain/entities'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\n\nimport { Action } from './action'\nimport { SgContexts } from '..'\nimport { uniq } from 'lodash/fp'\nimport { fromAtomsAttrs } from './atom'\n\nexport function fromSeveralSgroupAddition(restruct, type, atoms, attrs) {\n  const descriptors = attrs.fieldValue\n\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId()\n    )\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs)\n    localAttrs.fieldValue = fValue\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId()\n      )\n    )\n  }, new Action())\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function setExpandSGroup(restruct, sgid, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]))\n  })\n\n  const sgroup = restruct.molecule.sgroups.get(sgid)\n  if (sgroup.firstSgroupAtom) delete sgroup.firstSgroupAtom\n  const atoms = SGroup.getAtoms(restruct, sgroup)\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid).a, false)\n    )\n  })\n\n  return action.perform(restruct)\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action\n}\n\nexport function fromSgroupDeletion(restruct, id) {\n  let action = new Action()\n  const struct = restruct.molecule\n\n  const sG = restruct.sgroups.get(id).item\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds()\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'))\n      }\n    })\n  }\n\n  const sg = struct.sgroups.get(id)\n  const atoms = SGroup.getAtoms(struct, sg)\n  const attrs = sg.getAttrs()\n\n  action.addOp(new SGroupRemoveFromHierarchy(id))\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom))\n  })\n\n  action.addOp(new SGroupDelete(id))\n\n  action = action.perform(restruct)\n\n  action.mergeWith(sGroupAttributeAction(id, attrs))\n\n  return action\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  pp?,\n  expanded?,\n  name?\n) {\n  // eslint-disable-line\n  let action = new Action()\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId()\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name))\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp))\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom))\n  })\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, [])\n  )\n\n  action = action.perform(restruct)\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds()\n    let asteriskAction = new Action()\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon()\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'))\n      }\n    })\n\n    asteriskAction = asteriskAction.perform(restruct)\n    asteriskAction.mergeWith(action)\n    action = asteriskAction\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action)\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection)\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds)\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds))\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys())\n    )\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms)\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      sourceAtoms,\n      newSg.attrs\n    )\n  }\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs)\n      )\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment)\n  )\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a\n        if (fragId === atom.fragment) res.push(aid)\n\n        return res\n      }, [])\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs)\n      )\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms)\n      acc.selection.bonds = acc.selection.bonds.concat(bonds)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule\n  let bonds = getAtomsBondIds(struct, sourceAtoms)\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds))\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs\n        )\n      )\n\n      acc.selection.bonds.push(bondid)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms)\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds\n    }\n  }\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id)\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id))\n    })\n\n    return true\n  }\n\n  return false\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct, atoms) {\n  const struct = restruct.molecule\n  const sgCounts = new Map()\n\n  atoms.forEach((id) => {\n    const sgroups = atomGetSGroups(restruct, id)\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1)\n    })\n  })\n\n  sgCounts.forEach((count, sid) => {\n    const sG = restruct.sgroups.get(sid).item\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sG)\n\n    if (sgAtoms.length === count) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid)\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()))\n      action.addOp(new SGroupRemoveFromHierarchy(sid))\n      action.addOp(new SGroupDelete(sid))\n    }\n  })\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms)\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid)\n    return atomSet.has(bond.begin) && atomSet.has(bond.end)\n  })\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || []\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid)\n    acc = acc.concat([bond.begin, bond.end])\n    return acc\n  }, [])\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag\n} from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups\n} from './atom'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { StereoValidator } from 'domain/helpers'\nimport utils from '../shared/utils'\n\nexport function fromBondAddition(\n  restruct: ReStruct,\n  bond: any,\n  begin: any,\n  end: any,\n  pos?: Vec2,\n  pos2?: Vec2\n): [Action, number, number, number] {\n  // eslint-disable-line\n  if (end === undefined) {\n    const atom = atomForNewBond(restruct, begin, bond)\n    end = atom.atom\n    pos = atom.pos\n  }\n  const action = new Action()\n  const struct = restruct.molecule\n  let mergeFragments = false\n\n  let frid = null\n\n  if (!(typeof begin === 'number')) {\n    if (typeof end === 'number') frid = atomGetAttr(restruct, end, 'fragment')\n  } else {\n    frid = atomGetAttr(restruct, begin, 'fragment')\n    if (typeof end === 'number') mergeFragments = true\n  }\n\n  if (frid == null) {\n    frid = (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd)\n      .frid\n  }\n\n  if (!(typeof begin === 'number')) {\n    begin.fragment = frid\n    begin = (action.addOp(new AtomAdd(begin, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof end === 'number') mergeSgroups(action, restruct, [begin], end)\n    pos = pos2\n  } else if (atomGetAttr(restruct, begin, 'label') === '*') {\n    action.addOp(new AtomAttr(begin, 'label', 'C').perform(restruct))\n  }\n\n  if (!(typeof end === 'number')) {\n    end.fragment = frid\n    // TODO: <op>.data.aid here is a hack, need a better way to access the id of a created atom\n    end = (action.addOp(new AtomAdd(end, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof begin === 'number') mergeSgroups(action, restruct, [end], begin)\n  } else if (atomGetAttr(restruct, end, 'label') === '*') {\n    action.addOp(new AtomAttr(end, 'label', 'C').perform(restruct))\n  }\n\n  const bid = (\n    action.addOp(new BondAdd(begin, end, bond).perform(restruct)) as BondAdd\n  ).data.bid\n\n  const bnd = struct.bonds.get(bid)\n\n  if (bnd) {\n    action.addOp(new CalcImplicitH([bnd.begin, bnd.end]).perform(restruct))\n    action.mergeWith(fromBondStereoUpdate(restruct, bnd))\n  }\n\n  action.operations.reverse()\n\n  if (mergeFragments) mergeFragmentsIfNeeded(action, restruct, begin, end)\n\n  if (struct.frags.get(frid || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(new FragmentStereoFlag(frid || 0).perform(restruct))\n  }\n\n  return [action, begin, end, bid]\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean\n): Action {\n  const struct = restruct.molecule\n  const action = new Action()\n  const bids = Array.isArray(ids) ? ids : [ids]\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key)\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct))\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid)\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct)\n          )\n          action.mergeWith(fromBondStereoUpdate(restruct, bond))\n        }\n      }\n    })\n  })\n\n  return action\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>\n): Action {\n  const struct = restruct.molecule\n\n  const atomPairs = new Map()\n  let action = new Action()\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n    if (!bond || !bondCI) return\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI)\n    if (!params.merged) return\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end)\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin)\n  })\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n  })\n\n  return action\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id)\n\n  const action = new Action()\n  action.addOp(new BondDelete(id).perform(restruct))\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct))\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean\n): Action {\n  const action = new Action()\n  const struct = restruct.molecule\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment\n  const endFrId = struct.atoms.get(bond?.end)?.fragment\n\n  const fragmentStereoBonds: Array<Bond> = []\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond)\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond)\n    }\n  })\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond)\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse)\n      )\n    }\n  })\n\n  return action\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond\n) {\n  const stereoAtomsMap = new Map()\n  const correctAtomIds: Array<number> = []\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin\n      )\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end\n      )\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`\n          })\n        }\n        correctAtomIds.push(bond.begin)\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n      }\n    }\n  })\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n  }\n\n  return stereoAtomsMap\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD\n      break\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER\n      break\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN\n      break\n  }\n  return newAtomParity\n}\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any\n): Action {\n  const action = new Action()\n  let newItemId = itemID\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID))\n    newItemId = (action.operations[1] as BondAdd).data.bid\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length]\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action)\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE\n]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, RGroup } from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd\n} from '../operations'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport { fromBondStereoUpdate } from './bond'\nimport { without } from 'lodash/fp'\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom)\n  const action = new Action()\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid\n  action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param ids { Array<number>|number }\n * @param attrs { object }\n * @param reset { boolean? }\n */\nexport function fromAtomsAttrs(restruct, ids, attrs, reset) {\n  const action = new Action()\n  const aids = Array.isArray(ids) ? ids : [ids]\n\n  aids.forEach((aid) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attpnt' && !(key in attrs)) return\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key)\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        default:\n          action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          break\n      }\n    })\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(aid, 'atomList', null).perform(restruct))\n    }\n\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(aid)\n    const bond = restruct.molecule.bonds.get(atomNeighbors[0]?.bid)\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond))\n    }\n  })\n\n  return action\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action()\n  const atom = restruct.molecule.atoms.get(aid)\n  if (atom) {\n    const frid = atom.fragment\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct)\n      )\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct)\n      )\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct))\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct))\n      }\n    }\n    if (withReverse) action.operations.reverse()\n  }\n\n  return action\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action()\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const oldfrid = atom.fragment\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid))\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid))\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid))\n    }\n  })\n\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action()\n\n  const fragAction = new Action()\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId)\n\n  const action = new Action()\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId)\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid)\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid))\n      return\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId\n    const end = bond.begin === nei.aid ? dstId : nei.aid\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end)\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond))\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond)\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]))\n      })\n    }\n\n    action.addOp(new BondDelete(nei.bid))\n  })\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId))\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C'\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]))\n    }\n  })\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId)\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId])\n\n  action.addOp(new AtomDelete(srcId))\n  action.addOp(new CalcImplicitH([dstId]))\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId)\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid\n  )\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond))\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment')\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment')\n  if (frid2 === frid || typeof frid2 !== 'number') return\n\n  const struct = restruct.molecule\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2)\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid))\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid)\n\n  const atomsToNewFrag: Array<any> = []\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid)\n  })\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid)\n\n  mergeSgroups(action, restruct, fridAtoms, dstId)\n  action.addOp(new FragmentDelete(frid2).perform(restruct))\n  action.mergeWith(moveAtomsAction)\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom)\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid)\n    const notExpandedContexts = ['Atom', 'Bond', 'Group']\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms)\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct))\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action()\n\n  action.addOp(new CanvasLoad(struct))\n  return action.perform(restruct)\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action()\n  action.addOp(new AlignDescriptors())\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { atomGetAttr } from './utils'\nimport { fromBondAddition } from './bond'\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6)\n  const dy = Math.sin(Math.PI / 6)\n\n  let action = new Action()\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: []\n  }\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct)\n          ) as AtomAdd\n        ).data.aid\n\n  chainItems.atoms.push(id0)\n  action.operations.reverse()\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0)\n\n    const ret = fromBondAddition(restruct, {}, id0, {}, pos)\n    action = ret[0].mergeWith(action)\n    id0 = ret[2]\n    chainItems.bonds.push(ret[3])\n    chainItems.atoms.push(id0)\n  }\n\n  return [action, chainItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { fromAtomMerge } from './atom'\nimport { fromBondsMerge } from './bond'\nimport utils from '../shared/utils'\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action()\n\n  if (!items) return action\n\n  const usedAtoms = new Set()\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n    usedAtoms.add(dst).add(src)\n  })\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action)\n\n  return action\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys())\n  }\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds'])\n  )\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values())\n  }\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems }\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds)\n  }\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin)\n      mergeMap.atoms.delete(bond.end)\n    } else {\n      mergeMap.bonds.delete(srcId)\n    }\n  })\n\n  if (mergeMap.atoms.size === 0 && mergeMap.bonds.size === 0) return null\n\n  return mergeMap\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove\n} from '../operations'\nimport { Pile, RGroup, Vec2 } from 'domain/entities'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { fromAtomsFragmentAttr } from './atom'\nimport { getRelSgroupsBySelection } from './utils'\n\nexport function fromMultipleMove(restruct, lists, d) {\n  d = new Vec2(d)\n\n  const action = new Action()\n  const struct = restruct.molecule\n  const loops = new Pile()\n  const atomsToInvalidate = new Pile()\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms)\n    const bondlist: Array<number> = []\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid)\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ;['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop\n          if (loop >= 0) loops.add(loop)\n        })\n        return\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin)\n        return\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end)\n    })\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d))\n    })\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d))\n      }\n    })\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)))\n    })\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSgroupsBySelection(restruct, lists.atoms)\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d))\n      })\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true))\n    })\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true))\n    })\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true))\n    })\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d))\n    })\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d))\n    })\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true))\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action()\n\n  if (!flag) {\n    const struct = restruct.molecule\n    const frag = restruct.molecule.frags.get(frid)\n    frag.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid))\n      }\n    })\n  }\n\n  action.addOp(new FragmentStereoFlag(frid))\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid]\n  const usedIds = new Pile(queue)\n\n  while (queue.length > 0) {\n    const id = queue.shift()\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid)\n        queue.push(nei.aid)\n      }\n    })\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = []\n) {\n  const action = new Action()\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid))\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid))\n    }\n  })\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid))\n    action.addOp(new FragmentDelete(frid).perform(restruct))\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove))\n  }\n\n  action.operations.reverse()\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SimpleObjectDelete,\n  TextDelete\n} from '../operations'\nimport { Pile, RGroup } from 'domain/entities'\nimport {\n  fromSgroupDeletion,\n  removeAtomFromSgroupIfNeeded,\n  removeSgroupIfNeeded\n} from './sgroup'\n\nimport { Action } from './action'\nimport assert from 'assert'\nimport { atomGetDegree } from './utils'\nimport { fromBondStereoUpdate } from '../actions/bond'\nimport { fromFragmentSplit } from './fragment'\n\nexport function fromOneAtomDeletion(restruct, id) {\n  return fromFragmentDeletion(restruct, { atoms: [id] })\n}\n\nfunction fromBondDeletion(restruct, bid: number, skipAtoms: Array<any> = []) {\n  let action = new Action()\n  const bond: any = restruct.molecule.bonds.get(bid)\n  const atomsToRemove: Array<any> = []\n\n  action.addOp(new BondDelete(bid))\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 1\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin)\n    }\n\n    action.addOp(new AtomDelete(bond.begin))\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 1\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end)\n    }\n\n    action.addOp(new AtomDelete(bond.end))\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n  action = action.perform(restruct)\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct))\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false))\n\n  action.operations.reverse()\n\n  return action\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id)\n  let action = fromBondDeletion(restruct, id)\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action)\n\n  return action\n}\n\nexport function fromFragmentDeletion(restruct, selection) {\n  assert(!!selection != null)\n\n  let action = new Action()\n  const atomsToRemove: Array<number> = []\n  const frids: Array<number> = []\n\n  selection = {\n    // TODO: refactor me\n    atoms: selection.atoms || [],\n    bonds: selection.bonds || [],\n    rxnPluses: selection.rxnPluses || [],\n    rxnArrows: selection.rxnArrows || [],\n    sgroupData: selection.sgroupData || [],\n    simpleObjects: selection.simpleObjects || [],\n    texts: selection.texts || []\n  }\n\n  const actionRemoveDataSGroups = new Action()\n  restruct.molecule.sgroups.forEach((sg, id) => {\n    if (\n      selection.sgroupData.includes(id) ||\n      new Pile(selection.atoms).isSuperset(new Pile(sg.atoms))\n    ) {\n      actionRemoveDataSGroups.mergeWith(fromSgroupDeletion(restruct, id))\n    }\n  })\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid])\n      }\n    })\n  })\n\n  const actionRemoveBonds = new Action()\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid)\n    if (frids.indexOf(frid) < 0) frids.push(frid)\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms)\n    )\n  })\n\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment\n    if (frids.indexOf(frid3) < 0) frids.push(frid3)\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid)\n    }\n\n    action.addOp(new AtomDelete(aid))\n  })\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id))\n  })\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id))\n  })\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id))\n  })\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id))\n  })\n\n  action = action.perform(restruct)\n  action.mergeWith(actionRemoveBonds)\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!\n  )\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action\n    )\n  }\n\n  action.mergeWith(actionRemoveDataSGroups)\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH\n} from '../operations'\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromPaste(restruct, pstruct, point, angle = 0) {\n  const xy0 = getStructCenter(pstruct)\n  const offset = Vec2.diff(point, xy0)\n\n  const action = new Action()\n\n  const aidMap = new Map()\n  const fridMap = new Map()\n\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment)) {\n      fridMap.set(\n        atom.fragment,\n        (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n      )\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment)\n    })\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point)\n    ).perform(restruct) as AtomAdd\n    action.addOp(operation)\n    aidMap.set(aid, operation.data.aid)\n\n    pasteItems.atoms.push(operation.data.aid)\n  })\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct\n        )\n      )\n    )\n  })\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n  })\n\n  pstruct.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.data.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct))\n  })\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset))\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct)\n      )\n    })\n    const ifThen = pstruct.rgroups.get(rgid).ifthen\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen))\n  })\n\n  action.operations.reverse()\n  return [action, pasteItems]\n}\n\nfunction getStructCenter(struct) {\n  // TODO: Review, function may not work sometimes\n  const onlyOneStructsSgroupId = struct.sgroups.keys().next().value\n  if (\n    struct.sgroups.size === 1 &&\n    !struct.sgroups.get(onlyOneStructsSgroupId).data.expanded\n  ) {\n    return struct.atoms.get(0).pp\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50\n    let ymin = xmin\n    let xmax = -xmin\n    let ymax = -ymin\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x)\n      ymin = Math.min(ymin, atom.pp.y)\n      xmax = Math.max(xmax, atom.pp.x)\n      ymax = Math.max(ymax, atom.pp.y)\n    })\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2) // TODO: check\n  }\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0).center()\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0).pp\n  if (struct.simpleObjects.size > 0) return struct.simpleObjects.get(0).center()\n  if (struct.texts.size > 0) return struct.texts.get(0).position\n\n  return null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action()\n  action.addOp(new RxnArrowAdd(pos, mode))\n  return action.perform(restruct)\n}\n\nexport function fromArrowResizing(restruct, id, d, current, anchor) {\n  const action = new Action()\n  action.addOp(new RxnArrowResize(id, d, current, anchor, false))\n  return action.perform(restruct)\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnArrowDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action()\n  action.addOp(new RxnPlusAdd(pos).perform(restruct))\n  return action\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnPlusDelete(id))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove\n} from '../operations'\nimport { Bond, Fragment, Pile, Vec2 } from 'domain/entities'\nimport { getRelSgroupsBySelection, structSelection } from './utils'\n\nimport { Action } from './action'\nimport utils from '../shared/utils'\n\nexport function fromFlip(restruct, selection, dir, center) {\n  // eslint-disable-line max-statements\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (!selection.atoms) {\n    return action.perform(restruct)\n  }\n\n  const fids = selection.atoms.reduce((acc, aid) => {\n    const atom = struct.atoms.get(aid)\n\n    if (!acc[atom.fragment]) {\n      acc[atom.fragment] = []\n    }\n\n    acc[atom.fragment].push(aid)\n    return acc\n  }, {})\n\n  const fidsNumberKeys = Object.keys(fids).map((frag) => parseInt(frag, 10))\n\n  const isFragFound = fidsNumberKeys.find((frag) => {\n    const allFragmentsOfStructure = struct.getFragmentIds(frag)\n    const selectedFragmentsOfStructure = new Pile(fids[frag])\n    const res = allFragmentsOfStructure.equals(selectedFragmentsOfStructure)\n    return !res\n  })\n\n  if (typeof isFragFound === 'number') {\n    return action // empty action\n  }\n\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    const bbox = struct.getCoordBoundingBox(fragment)\n    const calcCenter =\n      center ||\n      new Vec2((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2)\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, calcCenter, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, calcCenter, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  if (selection.bonds) {\n    selection.bonds.forEach((bid) => {\n      const bond = struct.bonds.get(bid)\n\n      if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.DOWN))\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.UP))\n      }\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nfunction flipItemByCenter(item, center, dir) {\n  const d = new Vec2()\n  /* eslint-disable no-mixed-operators */\n  if (dir === 'horizontal') {\n    d.x =\n      center.x > item.pp.x\n        ? 2 * (center.x - item.pp.x)\n        : -2 * (item.pp.x - center.x)\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > item.pp.y\n        ? 2 * (center.y - item.pp.y)\n        : -2 * (item.pp.y - center.y)\n  }\n  /* eslint-enable no-mixed-operators */\n  return d\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)))\n    })\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSgroupsBySelection(restruct, selection.atoms)\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle))\n        )\n      })\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((aid) => {\n      const arrow = struct.rxnArrows.get(aid)\n      action.addOp(\n        new RxnArrowMove(aid, rotateDelta(arrow.center(), center, angle))\n      )\n    })\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid)\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)))\n    })\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did)\n      action.addOp(new SGroupDataMove(did, rotateDelta(data.pp, center, angle)))\n    })\n  }\n\n  const stereoFlags =\n    selection.enhancedFlags || Array.from(restruct.enhancedFlags.keys())\n  if (stereoFlags) {\n    stereoFlags.forEach((flagId) => {\n      const frId = flagId\n      const frag = restruct.molecule.frags.get(frId)\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle\n          )\n        )\n      )\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromBondAlign(restruct, bid, dir) {\n  const struct = restruct.molecule\n  const bond = struct.bonds.get(bid)\n  const begin = struct.atoms.get(bond.begin)\n  const end = struct.atoms.get(bond.end)\n\n  const center = begin.pp.add(end.pp).scaled(0.5)\n  let angle = utils.calcAngle(begin.pp, end.pp)\n  const atoms = Array.from(struct.getFragmentIds(begin.fragment))\n\n  // TODO: choose minimal angle\n  angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle\n\n  if (angle === 0 || Math.abs(angle) === Math.PI) {\n    return fromFlip(restruct, { atoms }, dir, center)\n  }\n\n  return fromRotate(restruct, { atoms }, center, angle)\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center)\n  v1 = v1.rotate(angle)\n  v1.add_(center) // eslint-disable-line no-underscore-dangle\n  return v1.sub(v)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new SimpleObjectDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action()\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle\n) {\n  const action = new Action()\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Vec2 } from 'domain/entities'\nimport { AtomAdd, BondAdd, CalcImplicitH } from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport { fromAtomsAttrs, mergeSgroups } from './atom'\nimport { fromBondAddition, fromBondStereoUpdate, fromBondsAttrs } from './bond'\n\nimport { Action } from './action'\nimport closest from '../shared/closest'\nimport { fromAromaticTemplateOnBond } from './aromaticFusing'\nimport { fromPaste } from './paste'\nimport utils from '../shared/utils'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromTemplateOnCanvas(restruct, template, pos, angle) {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle\n  )\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n\n  return [action, pasteItems]\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action()\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n  let additionalAtom: any = null\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid)\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      middleAtom.pos.get_xy0()\n    )\n    action = actionRes[0]\n    action.operations.reverse()\n    additionalAtom = actionRes[2]\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0()\n    ).perform(restruct) as AtomAdd\n\n    action.addOp(operation)\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct)\n    )\n\n    additionalAtom = operation.data.aid\n  }\n\n  return { action, aid1: additionalAtom }\n}\n\nexport function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {\n  let action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  let atom = struct.atoms.get(aid) // aid - the atom that was clicked on\n  let aid1 = aid // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle)\n    action = extraRes.action\n    aid1 = extraRes.aid1\n\n    atom = struct.atoms.get(aid1)\n    delta = utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos)\n    }\n    delta = angle - template.angle0\n  }\n\n  const map = new Map()\n  const xy0 = tmpl.atoms.get(template.aid).pp\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a)\n    attrs.fragment = frid\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true))\n      map.set(id, aid1)\n      pasteItems.atoms.push(aid1)\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp)\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct\n      ) as AtomAdd\n      action.addOp(operation)\n      map.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, aid)\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  tmpl.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      atom.pp,\n      sg.type === 'SUP' ? sg.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  action.operations.reverse()\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0])\n    )\n  )\n\n  return [action, pasteItems]\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip)\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip) // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing\n  )\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip) {\n  // TODO: refactor function !!\n  const action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const bond = struct.bonds.get(bid)\n  const tmplBond = tmpl.bonds.get(template.bid)\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin)\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end]\n  ])\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end\n  }\n  const { angle, scale } = utils.mergeBondsParams(struct, bond, tmpl, bondAtoms)\n\n  const frid = struct.getBondFragment(bid)\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom)\n    attrs.fragment = frid\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      return\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp)\n    const mergeA = closest.atom(restruct, v, null, 0.1)\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd\n      action.addOp(operation)\n      atomsMap.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    } else {\n      atomsMap.set(id, mergeA.id)\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      // TODO [RB] need to merge fragments?\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin)\n\n  tmpl.bonds.forEach((tBond) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end)\n    )\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond\n      ).perform(restruct) as BondAdd\n      action.addOp(operation)\n\n      pasteItems.bonds.push(operation.data.bid)\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true))\n    }\n  })\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct\n      )\n    )\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0])\n      )\n    )\n  }\n\n  action.operations.reverse()\n\n  return [action, pasteItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>\n) {\n  const action = new Action()\n  action.addOp(new TextCreate(content, position, pos))\n  return action.perform(restruct)\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string\n) {\n  const action = new Action()\n  action.addOp(new TextUpdate(id, content))\n  return action.perform(restruct)\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action()\n\n  action.addOp(new TextDelete(id))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Highlight } from 'domain/entities'\nimport { ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\n\ntype Data = {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n  highlightId?: number\n}\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number\n  ) {\n    super(OperationType.ADD_HIGHLIGHT)\n    this.data = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data\n\n    if (!color) {\n      return\n    }\n\n    const struct = restruct.molecule\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color\n    })\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight)\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight)\n    }\n\n    notifyChanged(restruct, atoms, bonds)\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color)\n    return inverted\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5)\n    this.data = {\n      highlightId: highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white'\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId)\n      if (typeof highlightToRemove === 'undefined') {\n        return\n      }\n\n      const { atoms, bonds, color } = highlightToRemove\n\n      this.data.atoms = atoms\n      this.data.bonds = bonds\n      this.data.color = color\n\n      struct.highlights.delete(this.data.highlightId)\n      notifyChanged(restruct, atoms, bonds)\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId)\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number }\n  oldData: Data & { highlightId: number }\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT)\n    this.newData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData\n    if (!color) {\n      return\n    }\n\n    const highlightId = this.newData.highlightId\n    const struct = restruct.molecule\n\n    const highlightToUpdate = struct.highlights.get(highlightId)\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor\n      } = highlightToUpdate\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId\n      }\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color\n      })\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight)\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds])\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color\n    )\n    return inverted\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms\n  const reBonds = restruct.bonds\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1)\n      }\n    })\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1)\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render'\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight'\n\nimport { Action } from './action'\n\ntype HighlightType = {\n  atoms: number[]\n  bonds: number[]\n  color: string\n}\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[]\n): Action {\n  const action = new Action()\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight\n\n    action.addOp(new HighlightAdd(atoms, bonds, color))\n  })\n  return action.perform(restruct)\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key))\n  })\n\n  return action.perform(restruct)\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils'\n\n// TODO: delete it\nexport const fracAngle = utils.fracAngle\nexport * from './operations'\nexport * from './actions'\nexport * from './shared/constants'\nexport * from './editor.types'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService\n} from 'domain/services'\nimport { StructOrString } from 'application/indigo.types'\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d'\n]\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition'\n]\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType\n}\ntype AutomapOptions = {\n  mode?: AutomapMode\n}\ntype CheckOptions = {\n  types?: Array<CheckTypes>\n}\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>\n}\ntype RecognizeOptions = {\n  version?: string\n}\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType\n  backgroundColor?: string\n}\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map()\n    const result = struct.clone(null, null, false, aidMap)\n\n    return serializer.serialize(result)\n  }\n\n  return struct\n}\n\nexport class Indigo {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n\n  constructor(structService) {\n    this.#structService = structService\n    this.#ketSerializer = new KetSerializer()\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info()\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat\n    })\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard'\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types\n    })\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties\n    })\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || ''\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png'\n    const backgroundColor = options?.backgroundColor || ''\n\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor\n      }\n    )\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat\n} from './formatters'\nimport { GenerateImageOptions, StructService } from 'domain/services'\n\nimport { Editor } from './editor'\nimport { Indigo } from 'application/indigo'\nimport { MolfileFormat } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport assert from 'assert'\nimport { EventEmitter } from 'events'\nimport { runAsyncAction } from 'utilities'\n\nasync function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.setImplicitHydrogen()\n  struct.markFragments()\n\n  return struct\n}\n\nfunction parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n) {\n  const format = identifyStructFormat(structStr)\n  const factory = new FormatterFactory(structService)\n  const options = ketcherInstance.editor.options()\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load']\n  })\n  return service.getStructureFromStringAsync(structStr)\n}\n\nfunction getStructure(\n  structureFormat: SupportedFormat = 'rxn',\n  formatterFactory: FormatterFactory,\n  struct: Struct\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat)\n  return formatter.getStructureFromStructAsync(struct)\n}\n\nexport class Ketcher {\n  #structService: StructService\n  #formatterFactory: FormatterFactory\n  #editor: Editor\n  #indigo: Indigo\n  #eventBus: EventEmitter\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory\n  ) {\n    assert(editor != null)\n    assert(structService != null)\n    assert(formatterFactory != null)\n\n    this.#editor = editor\n    this.#structService = structService\n    this.#formatterFactory = formatterFactory\n    this.#indigo = new Indigo(this.#structService)\n    this.#eventBus = new EventEmitter()\n  }\n\n  get indigo() {\n    return this.#indigo\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options()\n\n    if ('dearomatize-on-load' in options) {\n      return {\n        'general.dearomatize-on-load': options['dearomatize-on-load']\n      }\n    }\n    throw new Error('dearomatize-on-load option is not provided!')\n  }\n\n  // TODO: create optoions type\n  setSettings(settings: Record<string, string>) {\n    if (!settings) {\n      throw new Error('Please provide settings')\n    }\n\n    // eslint-disable-next-line prefer-const\n    let options = {}\n    if ('general.dearomatize-on-load' in settings) {\n      options['dearomatize-on-load'] = settings['general.dearomatize-on-load']\n    }\n    return this.#editor.setOptions(JSON.stringify(options))\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    const format: SupportedFormat = isExtended ? 'smilesExt' : 'smiles'\n    return getStructure(format, this.#formatterFactory, this.editor.struct())\n  }\n\n  async getMolfile(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrrows.'\n      )\n    }\n\n    const format: SupportedFormat =\n      molfileFormat === 'v3000' ? 'molV3000' : 'mol'\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return molfile\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.'\n      )\n    }\n    const format: SupportedFormat =\n      molfileFormat === 'v3000' ? 'rxnV3000' : 'rxn'\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return rxnfile\n  }\n\n  getKet(): Promise<string> {\n    return getStructure('ket', this.#formatterFactory, this.#editor.struct())\n  }\n\n  getSmarts(): Promise<string> {\n    return getStructure('smarts', this.#formatterFactory, this.#editor.struct())\n  }\n\n  getCml(): Promise<string> {\n    return getStructure('cml', this.#formatterFactory, this.#editor.struct())\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? 'inChIAuxInfo' : 'inChI',\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  async generateInchIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      'ket',\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return this.#structService.generateInchIKey(struct)\n  }\n\n  containsReaction(): boolean {\n    return this.editor.struct().hasRxnArrow()\n  }\n\n  async setMolecule(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.struct(struct)\n    }, this.eventBus)\n  }\n\n  async addFragment(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.structToAddFragment(struct)\n    }, this.eventBus)\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    return this.#indigo.recognize(image, { version: version })\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = { outputFormat: 'png' }\n  ): Promise<Blob> {\n    let meta = ''\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml'\n        break\n\n      case 'png':\n      default:\n        meta = 'image/png'\n        options.outputFormat = 'png'\n    }\n\n    const base64 = await this.#structService.generateImageAsBase64(\n      data,\n      options\n    )\n    const byteCharacters = atob(base64)\n    const byteNumbers = new Array(byteCharacters.length)\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i)\n    }\n    const byteArray = new Uint8Array(byteNumbers)\n    const blob = new Blob([byteArray], { type: meta })\n    return blob\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { Editor } from 'application/editor'\nimport { FormatterFactory } from 'application/formatters'\nimport { Ketcher } from './ketcher'\nimport assert from 'assert'\n\nconst DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false\n}\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider\n    return this\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null)\n    assert(this.#structServiceProvider != null)\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions\n    }\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions)\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService)\n    )\n    ketcher[this.#structServiceProvider.mode] = true\n\n    return ketcher\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","Generics","itemSets","displayName","items","description","subGroups","AtomList","params","_classCallCheck","notList","ids","_createClass","labels","_createForOfIteratorHelper","id","currenElement","push","labelList","join","atomList","sort","toString","Vec2","args","length","x","y","z","arguments","parseFloat","Error","Math","sqrt","v","s","y1","f","scaled","l","toFixed","assert","max","min","ceil","floor","angle","sin","cos","rotateSC","atan2","a","b","diff","v1","v2","cross","dot","i","addScaled","f1","f2","lc2","Pile","_inherits","_createSuper","item","setB","isSuperset","subset","has","expression","Array","from","union","add","_wrapNativeSuper","Set","getValueOrDefault","value","defaultValue","getPseudo","radicalElectrons","radical","Atom","PATTERN","RADICAL","DOUPLET","SINGLET","TRIPLET","StereoLabel","attributes","fragment","alias","attrlist","isotope","charge","rglabel","attpnt","explicitValence","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","Object","defineProperty","enumerable","fidMap","ret","conn","isQuery","groupno","rad","hyd","absCharge","abs","atom","attrs","attr","NONE","STEREO_PARITY","ODD","EVEN","EITHER","Bond","begin","end","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","center","struct","p1","atoms","p2","sub","normalized","aidMap","cp","bond","TYPE","SINGLE","DOUBLE","TRIPLE","AROMATIC","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","ANY","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","undefined","filteredStereoAtoms","map","aid","hasAnotherLabel","some","stereoFlag","Mixed","match","Abs","And","Or","Fragment","stereoAtoms","stereoFlagPosition","_classPrivateFieldInitSpec","_classPrivateFieldSet","_toConsumableArray","_classPrivateFieldGet","fr","frId","isAdd","includes","bonds","values","atomId","fragmentId","getFragment","bb","getCoordBoundingBox","scaled2obj","options","scale","obj2scaled","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","beginAtom","EndAtomNeigh","NaN","Number","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","list","instance","Box2Abs","p0","lp","rb","p","ext","d","centre","relBox","width","height","b1","b2","c","dc","dd","da","db","SGroupBracketParams","w","h","n","SGroup","bracketBox","bracketDir","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","data","mul","connectivity","name","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","keys","forEach","oldValue","offset","sum","topLeftPoint","context","contentBoxes","contentBB","direction","pos","bba","extend","bbb","include","sgroups","size","descriptorIntersects","sAtom","sAtomPP","getMassCentre","sgroup","newAtoms","j","_mol","sg","atomMap","removeNegative","filterAtoms","field","elem","allAtoms","splice","mol","parentAtomSet","crossBonds","bid","sGroup","crossBondsPerAtom","flat","getCenter","braketBox","vext","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","sz","cl","cr","bracketHeight","negated","cl0","cr0","dr","dl","getDir","a0","_atom","getAtoms","indexOf","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","SUP","MUL","SRU","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","DAT","GEN","sgBottomRightPoint","bottomRightPoint","segmentIntersection","FunctionalGroup","provider","getInstance","types","getFunctionalGroupsList","functionalGroups","fg","relatedSGroup","molecule","getBonds","relatedSGroupId","functionalGroup","isFunctionalGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","contractedFunctionalGroupsAtoms","sgroupId","isExpanded","HalfBond","dir","norm","ang","loop","contra","next","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","hbs","isConvex","dblBonds","aromatic","convex","hb","halfBonds","RGroup","atrributes","frags","resth","range","ifthen","index","fid","rgroups","frid","find","_rgid","rgroup","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","order","queue","shift","newId","isStrictSuperset","isSubset","equals","parents","childs","findIndex","childId","path","guess","getAtomSetRelations","resetParentLink","parentId","childIndex","checkOverlapping","res","sid","sgAtoms","SimpleObjectMode","SimpleObject","line","rectangle","Pool","_defineProperty","_assertThisInitialized","nextId","entries","_slicedToArray","arrayAddIfMissing","array","Struct","loops","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","_aid","hasRxnProps","_bid","hasRxnArrow","hasRxnPluses","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","mergeInto","rg","_fnum","clone","getFragmentIds","keepAllRGroups","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","bidMap","insert","soid","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","addAtom","a1","a2","hb1","hb2","halfBondId","halfBond","startCoords","endCoords","coordsDifference","dist","turnLeft","oxAngle","clear","bondInitHalfBonds","hbid","left","hbl","ir","il","setHbNext","halfBondSetAngle","nei","nei2","nextNei","atomSortNeighbors","halfBondUpdate","atomUpdateHalfBonds","remove","position","vec","global","totalLength","cnt","bld","getBondLengthData","totalDist","minDist","k","firstaid","pop","neiId","discardExistingFragments","addedAtoms","components","component","findConnectedComponent","idSet","frag","updateStereoAtom","findConnectedComponents","comp","markFragment","isReactionStruct","avg","getAvgBondLength","getAvgClosestAtomDistance","hbi","ai","bi","hbj","aj","bj","subloops","continueFlag","atomToHalfBond","aid1","subloop","slice","hbid1","hbid2","hba","hbb","every","loopArr","halfBondAngle","totalAngle","PI","hbida","hbidb","newLoops","bondsToMark","hbIdNext","hbId","partitionLoop","loopId","loopIsInner","loopHasSelfIntersections","loopIsConvex","calcConn","isAromatic","correctConn","hasImplicitH","calcValenceMinusHyd","calcValence","calcImplicitHydrogen","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","TextCommand","preparePositions","positions","Text","content","coords","Highlight","color","customizer","_typeof","clonedValue","cloneDeep","getNodeWithInvertedYCoord","node","cloneDeepWith","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","prop","ifDef","target","isArray","tfx","parsedValue","KetcherAsyncEvents","runAsyncAction","_asyncToGenerator","_regeneratorRuntime","action","eventEmitter","emit","LOADING","SUCCESS","FAILURE","headerToKet","header","fromRlabel","rgi","val","moleculeToKet","body","rglabelToKet","atomListToKet","atomToKet","bondToKet","sgroupToKet","_objectSpread","source","result","stereoCare","weight","parseInt","refsToRGroups","rgnumber","toUpperCase","toRlabel","moleculeToStruct","ketItem","rglabelToStruct","atomListToStruct","atomToStruct","bondToStruct","sgroupToStruct","markFragments","bindSGroupsToFunctionalGroups","attachmentPoints","Boolean","mapping","$refs","el","elements","toLowerCase","placement","display","fieldData","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","fragAtoms","ketNode","filteredSGroups","filteredSGroupsMap","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","_value","rxnToStruct","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","radius","pos0","ellipse","textToKet","textNode","textToStruct","validate","ket","ajv","Ajv","compile","schema","parseNode","currentStruct","KetSerializer","resultingStruct","JSON","parse","nodes","root","$ref","moleculeName","moleculeId","stringify","paddedNum","precision","numStr","replace","padStart","parseDecimalInt","str","isNaN","partitionLine","parts","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","getCoordBoundingBoxObj","fragmentType","shiftMol","xorig","over","add_","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowCenter","arrowStart","arrowEnd","rgMerge","scaffold","ctab","readKeyValuePairs","valueString","partition","utils","count","trim","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","sGroups","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","concat","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","split","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","startsWith","endsWith","applyDataSGroupDataLine","strArray","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","rLogic","props","charAt","propValue","isPseudo","test","propertyData","rglabels","a2rs","a2ri","a2r","iii","hhh","ooo","logic","pool","parsePropertyLineAtomList","expandedSGroups","eg","sGroupId","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","call","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","search","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","substring","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","current","rGroups","molLines","bracketEquality","currentIndex","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareMulForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","message","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","getCrossBonds","bracketPos","getBracketParameters","bracket","yComplement","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","molfileLines","common","skipErrors","preserveIndigoDesc","toRemove","errors","getSGroupsBFS","errorIgnore","ex","sGroupDelete","prepareSGroups","writeCTab2000","skipSGroupErrors","getComponents","all","saver","submol","saveMolecule","getScaffold","getCTab","writePaddedNumber","writeHeader","date","Date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","isAbsFlag","enhancedStereoFlag","writeCTab2000Header","atomsIds","atomsProps","pseudo","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","writePadded","sgmap","sgmapback","sgorder","q","expandedGroups","expandedGroupsLine","atomLabel","writePaddedFloat","MolSerializer","DefaultOptions","parseCTFile","reactionRelayout","badHeaderRecover","ex1","ex2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","prototype","each","func","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normalize","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","pureHydrogen","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","sign","arr","i1","i2","tmp","Dfs","atomData","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neighbours","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","degree","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","smiles","writtenAtoms","writtenComponents","_Atom","lowercase","chirality","branch_cnt","paren_written","h_count","isBondInRing","inLoop","setImplicitHydrogen","allowedLowercase","prepareLoopStructure","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","findBondId","n1","n2","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","molSerializer","exec","chunk","propChunks","deserialize","pc","isFinite","sdfItems","serialize","ChemicalMimeType","pollDeferred","process","complete","timeGap","startTimeGap","Promise","resolve","reject","iterate","then","setTimeout","e","err","parametrizeUrl","url","_","request","method","headers","responseHandler","requestUrl","response","fetch","assign","Accept","credentials","json","ok","error","indigoCall","baseUrl","defaultOptions","customHeaders","RemoteStructService","apiPath","output_format","isAvailable","indigoVersion","indigo_version","imagoVersions","imago_versions","blob","parVersion","req","status","bind","upload_id","metadata","mol_str","outputFormat","resp","text","RemoteStructServiceProvider","currentApiPath","URLSearchParams","document","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","Mol","molV3000","rxn","Rxn","rxnV3000","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","cml","CML","KET","cdxml","CDXML","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","KetFormatter","serializer","_ketSerializer","RxnFormatter","_molSerializer","stringifiedMolfile","stringifiedStruct","ServerFormatter","structService","ketSerializer","_structService","convert","convertResult","withCoords","promise","layout","parsedStruct","rescale","formatError","MolfileV2000Formatter","FormatterFactory","structServiceOptions","_excluded","molfileParseOptions","separateOptions","molSerializerOptions","formatter","identifyStructFormat","sanitizedString","er","Raphael","translateAbs","delta","transform","st","LayerMap","StereoColoringType","StereLabelStyleType","Visel","paths","boxes","boundingBox","exts","vector","translate","ReObject","viselType","visel","render","vbox","noredraw","removed","show","paper","setStart","drawHover","setFinish","hide","_render","_restruct","_paper","_styles","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","obj","pos1","pos2","oPos2","D","util","rect","rectangleArrowHighlightAndSelection","b0x","wOffset","hOffset","transformedPath","svgPath","rotate","rx","ry","polyline","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","lineattr","triangleLength","triangleWidth","fill","dashInterval","failSignWidth","arrowLen","lineOffset","arrowOffset","unbalanceVal","plus","bondSingle","makeStroke","stroke","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathdesc","topologyMark","mark","font","fontszsub","rbb","getBBox","recenterText","radicalCap","lineWidth","dw","dh","radicalBullet","circle","b0","sgroupBracketStyle","selectionRectangle","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","t0","t1","black","t2","coordStr","aromaticBondPaths","mask","vml","gap","StereoLabelMinOpacity","ShowHydrogenLabels","ReAtom","showLabel","hydrogenOnTheLeft","getVBoxObj","makeHoverPlate","addReObjectPath","ps","isAtomInContractedFunctionalGroup","atomSelectionPlateRadius","hoverStyle","restruct","styles","selectionStyle","isFirstAtomInFunctionalGroup","sgroupName","setHydrogenPos","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","buildLabel","zoom","showAtomIds","idPos","lc","draw","indices","setHover","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","warnings","pathAndRBoxTranslate","lsb","bisectLargestSector","showAttpnt","aamText","getAamText","queryAttrsText","getQueryAttrsText","shouldDisplayStereoLabel","stereoLabelStyle","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","t","fromRelBox","isHighlighted","highlightColor","highlight","hasCurrentHighlight","style","colorStereogenicCenters","Off","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","sameNotStereo","hydrogenLabels","Terminal","TerminalAndHetero","yl","yr","nl","nr","getLabelText","fontsz","hshift","vshift","mapValence","hydrogenLeft","asterisk","attpntText","attpntPath1","attpntRbb","lsbn","shiftBondEnd","arrowLeft","arrowRight","attpntPath","angles","daMax","margin","ReBond","doubleBondShift","bondRecalc","isBondInContractedFunctionalGroup","checkStereoBold","setDoubleBondShift","getBondPath","getReactingCenterPath","getTopologyMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","highlightPath","getHighlightPath","beginning","pathString","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","halfbonds","neihbid1","neihbid2","shiftA","shiftB","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","selectDoubleBondShift","atom1","atom2","nLeft","nRight","ReEnhancedFlag","hoverPath","getDefaultStereoFlagPosition","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","firstFrag","secondFrag","_ui_editor","calcBBox","keyOf","BORDER_EXT","ReRGroup","labelBox","fragGetAtoms","fragGetBonds","bbf","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","rLogicToString","logicPath","logicBox","_draw","fnum","drawing","cy","leftBracket","rightBracket","ifThen","rangeExists","restH","nextRg","ReRxnArrow","point","distRef","getReferencePointDistance","calculateDistanceToLine","getReferencePoints","startPoint","endPoint","middlePoint","refPoint","refPoints","rp","generatePath","findMiddlePoint","scaleFactor","selectionSet","scaledRP","getArrowParams","x1","x2","y2","hypot","_id","per","minX","minY","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","ReSGroup","remol","firstSgroupAtom","SGroupdrawBrackets","drawGroupDat","getHighlighPathInfo","startX","startY","sGroupItem","lowerIndexText","upperIndexText","indexAttribute","bracketR","renderIndex","indexPos","indexPath","indexBox","showValue","toFront","calculatePP","drawAttachedDat","drawAbsoluteDat","sbox","sgroupData","nameI","boxI","sboxI","BracketParams","crossBondsValues","tl","tr","tt","tb","cc","dt","contractedFunctionalGroupSize","hoverPp","ReSimpleObject","simpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","poly","atan","enhPaths","stylesApplied","enhPath","hoverStyleSimpleObject","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","SCALE","ReText","getRelBox","topLeft","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","start","setPos","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","textRange","Bold","Italic","Subscript","Superscript","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","reAtom","adjacentComponents","neighbor","compId","aidSet","getConnectedComponent","ccFragmentType","ccid","removeConnectedComponent","addConnectedComponent","layers","visible","parentNode","insertBefore","maps","structChanged","markItem","mapChanged","clearVisel","selection","isSelectionEmpty","eachItem","scaleVisel","force","initialized","_item","atomsChanged","connectedComponentRemoveAtom","emptyFrags","clearConnectedComponents","atomsChangedArray","assignConnectedComponents","verifyLoops","updLoops","updateLoops","showLabels","showBonds","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","reloop","markBond","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","bondlist","markAtom","isValid","loopRemove","enhancedFlagsChanged","chid","bondsChanged","redraw","mapValues","isSelectable","sgId","sGroupAtoms","showItemSelection","exists","isSelectionSvgObjectExists","makeSelectionPlate","anySelection","scaleRPath","FRAC","setFracAngle","calcAngle","fracAngle","angle2","round","calcNewAtomPos","ctrlKey","degrees","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","opt","rotationStep","labelFontSize","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","doubleBondWidth","stereoBondWidth","bondThickness","Render","clientArea","renderWidth","clientWidth","renderHeight","clientHeight","userOpts","ZERO","updateOptions","opts","passedOptions","view2obj","isRelative","scroll","scrollPos","useOldZoom","obj2view","scrollLeft","scrollTop","page2obj","event","getBoundingClientRect","offsetTop","top","offsetLeft","clientX","clientY","setPaperSize","setSize","setViewBox","setOffset","newoffset","setZoom","calcExtend","sSz","x0","y0","ey","setScrollOffset","cx","update","setScale","canvas","setMolecule","viewSz","changes","setSelection","sf","UNIT","eb","vb","cb","oldCb","oldBb","sz1","marg","mv","csz","sz2","BaseOperation","priority","execute","_inverted","invert","level","invalidateLoop","bondId","halfBond1","halfBond2","invalidateAtom","invalidateBond","invalidateItem","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","AtomAttr","attribute","data2","inverted","AtomMove","noinvalidate","reatom","AtomAdd","atomSetPos","AtomDelete","restructedAtom","markItemRemoved","BondAttr","BondMove","BondAdd","structBond","atomAddNeighbor","BondDelete","rebond","prev","CanvasLoad","oldStruct","clearVisels","AlignDescriptors","history","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","newPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","enhancedFalg","FragmentAddStereoAtom","invalidateEnhancedFlag","FragmentDeleteStereoAtom","FragmentStereoFlag","updateStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","findRGroupByFragment","removeOld","setNew","RxnArrowMove","Base","move","RxnArrowResize","anchor","previousPos0","get_xy0","previousPos1","reItem","angleInRadians","cosAngle","sinAngle","diffX","diffY","newMiddlePoint","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","rxnPlusSetPos","RxnPlusDelete","RxnArrowAdd","itemId","rxnArrowSetPos","RxnArrowDelete","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","simpleObjectSetPos","SimpleObjectDelete","SimpleObjectMove","handleRectangleChangeWithAnchor","SimpleObjectResize","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","removeAtom","SGroupAttr","setAttr","SGroupDataMove","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupCreate","SGroupDelete","relatedFGroupId","fgid","TextCreate","textSetPosition","TextDelete","TextUpdate","previousContent","TextMove","difference","Action","operations","operation","isDummy","sortedOperations","invertedOperation","perform","addOp","fromAromaticTemplateOnBond","template","events","simpleFusing","getBondFragment","getFragmentWithBondMap","atomsInStruct","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","calcDistance","ref","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","contains","rxnArrow","firstAtomPp","pg","findClosestItem","mp","other","findCloseMerge","srcId","merge","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","structSelection","atomForNewBond","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSgroupsBySelection","selectedAtoms","_sgid","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","mergeWith","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","sGroupAttributeAction","fromSgroupDeletion","sG","sGroupsRecalcCrossBonds","getAttrs","asteriskAction","plainCarbon","isPlainCarbon","fromSgroupAction","newSg","sourceAtoms","SgContexts","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","uniq","fromGroupAction","Multifragment","fromMultiFragmentAction","Group","fromAtomAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","fromBondAddition","mergeFragments","mergeSgroups","bnd","fromBondStereoUpdate","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","attrGetDefault","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","isInteger","withReverse","beginFrId","endFrId","fragmentStereoBonds","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","fromStereoAtomAttrs","correctAtomIds","getStereoParity","newAtomParity","bondChangingAction","itemID","bondProps","newItemId","plainBondTypes","fromAtomAddition","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","fragAction","mergeBondId","getAttrHash","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","fromNewCanvas","fromDescriptorsAlign","fromChain","dx","dy","chainItems","fromItemsFuse","usedAtoms","getItemsToFuse","editor","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","now","closestMap","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","atomsToRemove","fromOneBondDeletion","frids","actionRemoveDataSGroups","actionRemoveBonds","frid3","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","__frag","newRgId","onlyOneStructsSgroupId","xmin","ymin","xmax","ymax","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","fids","fidsNumberKeys","isFragFound","allFragmentsOfStructure","selectedFragmentsOfStructure","bbox","calcCenter","flipItemByCenter","fromRotate","rotateDelta","did","stereoFlags","flagId","fromBondAlign","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","fromTemplateOnCanvas","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","extraRes","angle0","fromTemplateOnBondAction","flip","fromTemplateOnBond","tmplBond","tmplBegin","atomsMap","bondAtoms","mergeA","tBond","existId","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","notifyChanged","HighlightDelete","highlightToRemove","newData","oldData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","HighlightUpdate","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","defaultTypes","defaultCalcProps","convertStructToString","Indigo","info","clean","aromatize","dearomatize","calculateCip","automap","check","properties","calculate","image","recognize","backgroundColor","generateImageAsBase64","prepareStructToRender","structStr","ketcherInstance","parseStruct","factory","service","create","getStructureFromStringAsync","getStructure","structureFormat","formatterFactory","getStructureFromStructAsync","Ketcher","EventEmitter","settings","setOptions","isExtended","molfileFormat","containsReaction","rxnfile","withAuxInfo","generateInchIKey","eventBus","structToAddFragment","meta","base64","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","DefaultStructServiceOptions","KetcherBuilder","structServiceProvider","serviceOptions","mergedServiceOptions","createStructService","ketcher"],"mappings":"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"}