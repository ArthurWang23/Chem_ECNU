{"version":3,"file":"index.modern.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/entities/atomList.ts","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/entities/box2Abs.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/entities/highlight.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/runAsyncAction.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../src/domain/serializers/ket/validate.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/domain/services/struct/structService.types.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/rxnFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/render/raphael-ext.js","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/util.ts","../src/application/render/draw.js","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/restruct/resgroup.js","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.js","../src/application/render/options.js","../src/application/render/raphaelRender.js","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/shared/constants.js","../src/application/editor/index.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types'\n\ntype ElementColorType = {\n  [key in ElementLabel]: string\n}\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000'\n} as const\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types'\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294\n  }\n]\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element)\n  acc.set(element.number, element)\n  return acc\n}, new Map<string | number, Element>())\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string\n  description?: string\n}\n\nexport type GenItemSet = {\n  items: GenItem[]\n  displayName?: string\n}\n\nexport type GenGroup = {\n  itemSets: GenItemSet[]\n  title: string\n}\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType }\n}\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' }\n        ]\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)'\n          },\n          { label: 'QH', description: 'Any atom except C' }\n        ]\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' }\n        ]\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' }\n        ]\n      }\n    ]\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' }\n        ]\n      }\n    ]\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group'\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen'\n          }\n        ]\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure'\n          },\n          {\n            label: 'GH*',\n            description: 'Any group of hydrogen with a ring closure'\n          }\n        ]\n      }\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' }\n            ]\n          }\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' }\n                ]\n              }\n            ]\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' }\n                ]\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' }\n            ]\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms'\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen'\n              }\n            ]\n          }\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'atyl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen'\n                  }\n                ]\n              }\n            ]\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants'\n\nexport interface AtomListParams {\n  readonly notList: boolean\n  readonly ids: Array<number>\n}\n\nexport class AtomList {\n  notList: boolean\n  ids: Array<number>\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList\n    this.ids = params.ids\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = []\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id)\n      currenElement && labels.push(currenElement!.label)\n    }\n\n    return labels\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']'\n    if (this.notList) {\n      label = '!' + label\n    }\n    return label\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert'\n\nexport interface Point {\n  x?: number\n  y?: number\n  z?: number\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0)\n  static UNIT = new Vec2(1, 1)\n\n  x: number\n  y: number\n  z: number\n\n  constructor(point: Point)\n  constructor(x?: number, y?: number, z?: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0\n      this.y = 0\n      this.z = 0\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0)\n      this.y = parseFloat(args[0].y || 0)\n      this.z = parseFloat(args[0].z || 0)\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0)\n      this.y = parseFloat(args[1] || 0)\n      this.z = 0\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0])\n      this.y = parseFloat(args[1])\n      this.z = parseFloat(args[2])\n    } else {\n      throw new Error('Vec2(): invalid arguments')\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length()\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z)\n    )\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z)\n    )\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z)\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2))\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z)\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2()\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number)\n    }\n    return v\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2\n    )\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5)\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z)\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x\n    this.y += v.y\n    this.z += v.z\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y)\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z)\n  }\n\n  scaled(s: number): Vec2 {\n    return new Vec2(this.x * s, this.y * s, this.z * s)\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z)\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0\n    return new Vec2(this.x, y1 - this.y, this.z)\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f)\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length())\n  }\n\n  normalize(): boolean {\n    const l = this.length()\n\n    if (l < 0.000001) return false\n\n    this.x /= l\n    this.y /= l\n\n    return true\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z)\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString()\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')'\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null)\n\n    return Vec2.max(this, v)\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v)\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z))\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z))\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle)\n    const cos = Math.cos(angle)\n\n    return this.rotateSC(sin, cos)\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin)\n    assert(cos === 0 || !!cos)\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z\n    )\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item\n    }\n\n    return null\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this)\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false\n    }\n\n    return true\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression))\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this)\n\n    for (const item of setB) union.add(item)\n\n    return union\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList'\nimport { Point, Vec2 } from './vec2'\n\nimport { Elements } from 'domain/constants'\nimport { Pile } from './pile'\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue\n}\n\nfunction getPseudo(label: string) {\n  return !Elements.get(label) &&\n    label !== 'L' &&\n    label !== 'L#' &&\n    label !== 'R#'\n    ? label\n    : ''\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2\n  } else {\n    return 0\n  }\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or'\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number\n  stereoLabel?: string | null\n  exactChangeFlag?: number\n  rxnFragmentType?: number\n  invRet?: number\n  aam?: number\n  hCount?: number\n  unsaturatedAtom?: number\n  substitutionCount?: number\n  ringBondCount?: number\n  explicitValence?: number\n  attpnt?: any\n  rglabel?: string | null\n  charge?: number\n  radical?: number\n  isotope?: number\n  alias?: string | null\n  pseudo?: string\n  atomList?: AtomListParams | null\n  label: string\n  fragment?: number\n  pp?: Point\n  implicitH?: number\n}\n\nexport class Atom {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3\n    }\n  }\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: 0,\n    radical: 0,\n    charge: 0,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attpnt: null,\n    aam: 0,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0\n  }\n\n  label: string\n  fragment: number\n  atomList: AtomList | null\n  attpnt: any\n  isotope: number\n  hCount: number\n  radical: number\n  charge: number\n  explicitValence: number\n  ringBondCount: number\n  unsaturatedAtom: number\n  substitutionCount: number\n  valence: number\n  implicitH: number\n  pp: Vec2\n  neighbors: Array<number>\n  sgs: Pile<any>\n  badConn: boolean\n  alias: string | null\n  rglabel: string | null\n  aam: number\n  invRet: number\n  exactChangeFlag: number\n  rxnFragmentType: number\n  stereoLabel?: string | null\n  stereoParity: number\n  hasImplicitH?: boolean\n  pseudo!: string\n\n  constructor(attributes: AtomAttributes) {\n    this.label = attributes.label\n    this.fragment = getValueOrDefault(attributes.fragment, -1)\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias)\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope)\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical)\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge)\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel)\n    this.attpnt = getValueOrDefault(attributes.attpnt, Atom.attrlist.attpnt)\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence\n    )\n\n    this.valence = 0\n    this.implicitH = attributes.implicitH || 0 // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2()\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile()\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount\n    )\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount\n    )\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom\n    )\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount)\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam)\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet)\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag\n    )\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1)\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel\n    )\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity\n    )\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null\n    this.neighbors = [] // set of half-bonds having this atom as their origin\n    this.badConn = false\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label)\n      }\n    })\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {}\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr]\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr]\n    }\n  }\n\n  clone(fidMap: Map<number, number>): Atom {\n    const ret = new Atom(this)\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!\n    }\n    return ret\n  }\n\n  isQuery(): boolean {\n    return (\n      this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount\n    )\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === 0 &&\n      this.radical === 0 &&\n      this.charge === 0 &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    )\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label)\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attpnt !== null ||\n      this.aam\n    )\n  }\n\n  calcValence(conn: number): boolean {\n    const label = this.label\n    const charge = this.charge\n    if (this.isQuery()) {\n      this.implicitH = 0\n      return true\n    }\n    const element = Elements.get(label)\n    if (!element) {\n      this.implicitH = 0\n      return true\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n    let valence = conn\n    let hyd = 0\n    const absCharge = Math.abs(charge)\n    if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      }\n    } else if (groupno === 2) {\n      if (conn + rad + absCharge === 2 || conn + rad + absCharge === 0) {\n        valence = 2\n      } else hyd = -1\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (rad + conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === -2) {\n          if (rad + conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (rad + conn + absCharge <= 1) {\n          valence = 1\n          hyd = 1 - rad - conn - absCharge\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4\n        hyd = 4 - rad - conn - absCharge\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else {\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (label === 'N' || rad + conn + absCharge <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (rad + conn <= 2 && label !== 'As') {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (rad + conn <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else if (conn + rad + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6\n          hyd = 6 - rad - conn - absCharge\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          } else if (conn <= 4) {\n            valence = 4\n            hyd = 4 - rad - conn - absCharge\n          } else if (charge === 0 && conn <= 6) {\n            valence = 6\n            hyd = 6 - rad - conn - absCharge\n          } else {\n            hyd = -1\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else if (conn === 3 || conn === 5 || conn >= 7) {\n            hyd = -1\n          }\n        } else if (charge === 0) {\n          if (conn <= 1) {\n            valence = 1\n            hyd = 1 - rad - conn\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (conn === 2 || conn === 4 || conn === 6) {\n            if (rad === 1) {\n              valence = conn\n              hyd = 0\n            } else {\n              hyd = -1 // will throw an error in the end\n            }\n          } else if (conn > 7) {\n            hyd = -1 // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (conn + rad + absCharge === 0) valence = 1\n      else hyd = -1\n    }\n\n    this.valence = valence\n    this.implicitH = hyd\n    if (this.implicitH < 0) {\n      this.valence = conn\n      this.implicitH = 0\n      this.badConn = true\n      return false\n    }\n    return true\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge\n    const label = this.label\n    const element = Elements.get(this.label)\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0\n      return 0\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn\n        if (charge === 2) return rad + conn\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn\n        else if (charge === 2) return rad + conn\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn\n      }\n    }\n\n    return rad + conn + Math.abs(charge)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number\n  topology?: number\n  stereo?: number\n  xxx?: string\n  type: number\n  end: number\n  begin: number\n}\n\nexport class Bond {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12\n    }\n  }\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED\n  }\n\n  begin: number\n  end: number\n  readonly type: number\n  readonly xxx: string\n  readonly stereo: number\n  readonly topology: number\n  readonly reactingCenterStatus: number\n  len: number\n  sb: number\n  sa: number\n  hb1?: number\n  hb2?: number\n  angle: number\n  center: Vec2\n\n  constructor(attributes: BondAttributes) {\n    this.begin = attributes.begin\n    this.end = attributes.end\n    this.type = attributes.type\n    this.xxx = attributes.xxx || ''\n    this.stereo = Bond.PATTERN.STEREO.NONE\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER\n    this.reactingCenterStatus = 0\n    this.len = 0\n    this.sb = 0\n    this.sa = 0\n    this.angle = 0\n\n    if (attributes.stereo) this.stereo = attributes.stereo\n    if (attributes.topology) this.topology = attributes.topology\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus\n    }\n\n    this.center = new Vec2()\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {}\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr]\n      }\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr]\n    }\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp\n    const p2 = struct.atoms.get(this.end).pp\n    return Vec2.lc2(p1, 0.5, p2, 0.5)\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp\n    const p2 = struct.atoms.get(this.end)!.pp\n    return p2.sub(p1).normalized()\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this)\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!\n      cp.end = aidMap.get(cp.end)!\n    }\n    return cp\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nimport { Bond } from './bond'\nimport { StereoLabel } from './atom'\nimport { Struct } from './struct'\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR'\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel)\n  if (!filteredStereoAtoms.length) return undefined\n\n  const atom = filteredStereoAtoms[0]!\n  const stereoLabel = atom.stereoLabel! // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel\n  )\n\n  let stereoFlag: StereoFlag\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0]\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs\n        break\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And\n        break\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or\n        break\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`)\n      }\n    }\n  }\n  return stereoFlag\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag\n  stereoFlagPosition?: Vec2\n  #stereoAtoms: Array<number>\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms]\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag\n  }\n\n  constructor(stereoAtoms: Array<number> = [], stereoFlagPosition?: Point) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition)\n    }\n\n    this.#stereoAtoms = stereoAtoms\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId)\n    if (!fragment) return undefined\n    const bb = fragment.getCoordBoundingBox()\n    return new Vec2(bb.max.x, bb.min.y - 1)\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!)\n    const fr = new Fragment(stereoAtoms, this.stereoFlagPosition)\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag\n    return fr\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n    return this.#enhancedStereoFlag\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid)\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid)\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId)\n      return true\n    }\n    return false\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId)\n      return true\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\n\nexport interface ScaleOptions {\n  scale: number\n}\n\nfunction scaled2obj(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(1 / options.scale)\n}\n\nfunction obj2scaled(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(options.scale)\n}\n\nexport const Scale = {\n  scaled2obj,\n  obj2scaled\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities'\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct\n) {\n  const beginAtom = struct.atoms.get(bond.begin)\n\n  let EndAtomNeigh: number | undefined = NaN\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider\n  functionalGroupsList: Struct[]\n  constructor() {\n    this.functionalGroupsList = []\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider()\n    }\n    return FunctionalGroupsProvider.instance\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\nexport class Box2Abs {\n  readonly p0: Vec2\n  readonly p1: Vec2\n\n  constructor()\n  constructor(p: Vec2)\n  constructor(p0: Vec2, p1: Vec2)\n  constructor(x0: number, y0: number, x1: number, y1: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min\n      this.p1 = args[0].max\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0]\n      this.p1 = args[1]\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1])\n      this.p1 = new Vec2(args[2], args[3])\n    } else if (args.length === 0) {\n      this.p0 = new Vec2()\n      this.p1 = new Vec2()\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!'\n      )\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString()\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1)\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb))\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null)\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p))\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null)\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    )\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d))\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function')\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options))\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0)\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1)\n  }\n\n  pos() {\n    return this.p0\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height\n    )\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1))\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x)\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x)\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x)\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x)\n\n    return dc * dd <= 0 && da * db <= 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom'\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { Vec2 } from './vec2'\n\nexport class SGroupBracketParams {\n  readonly c: Vec2\n  readonly d: Vec2\n  readonly n: Vec2\n  readonly w: number\n  readonly h: number\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN'\n  }\n\n  type: string\n  id: number\n  label: number\n  bracketBox: any\n  bracketDir: Vec2\n  areas: any\n  hover: boolean\n  hovering: any\n  selected: boolean\n  selectionPlate: any\n  atoms: any\n  atomSet: any\n  parentAtomSet: any\n  patoms?: any\n  allAtoms: any\n  bonds: any\n  xBonds: any\n  neiAtoms: any\n  pp: Vec2 | null\n  data: any\n\n  constructor(type: string) {\n    this.type = type\n    this.id = -1\n    this.label = -1\n    this.bracketBox = null\n    this.bracketDir = new Vec2(1, 0)\n    this.areas = []\n\n    this.hover = false\n    this.hovering = null\n    this.selected = false\n    this.selectionPlate = null\n\n    this.atoms = []\n    this.patoms = []\n    this.bonds = []\n    this.xBonds = []\n    this.neiAtoms = []\n    this.pp = null\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: 'n',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: ''\n    }\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr]\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {}\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr]\n    })\n    return attrs\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr]\n    this.data[attr] = value\n    return oldValue\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset)\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint\n\n    if (this.data.context === 'Atom' || this.data.context === 'Bond') {\n      const contentBoxes: Array<any> = []\n      let contentBB: Box2Abs | null = null\n      const direction = new Vec2(1, 0)\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid)\n        const pos = new Vec2(atom!.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        const bba = new Box2Abs(pos, pos).extend(ext, ext)\n        contentBoxes.push(bba)\n      })\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null\n        ;[bba.p0.x, bba.p1.x].forEach((x) => {\n          ;[bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y)\n            const p = new Vec2(\n              Vec2.dot(v, direction),\n              Vec2.dot(v, direction.rotateSC(1, 0))\n            )\n            bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n          })\n        })\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!)\n      })\n\n      topLeftPoint = contentBB!.p0\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5))\n    }\n\n    const sgroups = Array.from(struct.sgroups.values())\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5))\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0]\n        const sAtomPP = struct.atoms.get(sAtom)?.pp\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms)\n      }\n    }\n\n    this.pp = topLeftPoint\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp) return null\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1)\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = []\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      if (typeof map[aid] !== 'number') newAtoms.push(aid)\n      else if (map[aid] >= 0) newAtoms.push(map[aid])\n      else newAtoms.push(-1)\n    }\n    return newAtoms\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j])\n    }\n    return newAtoms\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap))\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type)\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field]\n    })\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem))\n    cp.pp = sgroup.pp\n    cp.bracketBox = sgroup.bracketBox\n    cp.patoms = null\n    cp.bonds = null\n    cp.allAtoms = sgroup.allAtoms\n    cp.data.expanded = sgroup.data.expanded\n    return cp\n  }\n\n  static addAtom(sgroup: SGroup, aid: number): void {\n    sgroup.atoms.push(aid)\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1)\n        return\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>\n  ): { [key: number]: Array<Bond> } {\n    const crossBonds: { [key: number]: Array<Bond> } = {}\n    mol.bonds.forEach((bond, bid) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = []\n        }\n        crossBonds[bond.begin].push(bid)\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = []\n        }\n        crossBonds[bond.end].push(bid)\n      }\n    })\n    return crossBonds\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> }\n  ): void {\n    const atoms = sGroup.atoms\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDir = new Vec2(1, 0)\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol)\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol)\n      sGroup.bracketDir = Vec2.diff(p2, p1).normalized()\n    }\n    const d = sGroup.bracketDir\n\n    let braketBox: Box2Abs | null = null\n    const contentBoxes: Array<any> = []\n    atoms.forEach((aid) => {\n      const atom = mol.atoms.get(aid)\n      const pos = new Vec2(atom.pp)\n      const ext = new Vec2(0.05 * 3, 0.05 * 3)\n      const bba = new Box2Abs(pos, pos).extend(ext, ext)\n      contentBoxes.push(bba)\n    })\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null\n      ;[bba.p0.x, bba.p1.x].forEach((x) => {\n        ;[bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y)\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)))\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n        })\n      })\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!)\n    })\n    const vext = new Vec2(0.2, 0.4)\n    if (braketBox) braketBox = (braketBox as Box2Abs).extend(vext, vext)\n    sGroup.bracketBox = braketBox\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n\n  ): Array<any> {\n    const brackets: Array<any> = []\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom)\n    const crossBonds = crossBondsPerAtomValues.flat()\n    if (crossBonds.length < 2) {\n      ;(function () {\n        d = d || new Vec2(1, 0)\n        n = n || d.rotateSC(1, 0)\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const bracketHeight = bb.sz().y\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight)\n        )\n      })()\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      ;(function () {\n        const b1 = mol.bonds.get(crossBonds[0])\n        const b2 = mol.bonds.get(crossBonds[1])\n        const cl0 = b1.getCenter(mol)\n        const cr0 = b2.getCenter(mol)\n        const dr = Vec2.diff(cr0, cl0).normalized()\n        const dl = dr.negated()\n\n        const bracketWidth = 0.25\n        const bracketHeight = 1.5\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight\n          )\n        )\n      })()\n    } else {\n      ;(function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i])\n          const c = b.getCenter(mol)\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated()\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0))\n        }\n      })()\n    }\n    return brackets\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp\n    let bb = new Box2Abs(a0, a0)\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      const atom = mol.atoms.get(aid)\n      const p = atom.pp\n      bb = bb.include(p)\n    }\n    return bb\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms\n    const atoms: Array<any> = []\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid)\n    })\n    return atoms\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg)\n    const bonds: Array<any> = []\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid)\n      }\n    })\n    return bonds\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b)\n    sgroup.atomSet = new Pile(sgroup.atoms)\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet)\n    const inBonds: Array<any> = []\n    const xBonds: Array<any> = []\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid)\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid)\n      }\n    })\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number')\n    }\n\n    let xAtom1 = -1\n    let xAtom2 = -1\n    let crossBond = null\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0])\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end\n\n      const bond2 = mol.bonds.get(xBonds[1])\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end\n      crossBond = bond2\n    }\n\n    let tailAtom = xAtom2\n\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {}\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid)\n        const aid2 = mol.atoms.add(new Atom(atom))\n        newAtoms.push(aid2)\n        sgroup.atomSet.add(aid2)\n        amap[aid] = aid2\n      })\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid)\n        const newBond = new Bond(bond)\n        newBond.begin = amap[newBond.begin]\n        newBond.end = amap[newBond.end]\n        mol.bonds.add(newBond)\n      })\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond)\n        newCrossBond.begin = tailAtom\n        newCrossBond.end = amap[xAtom1]\n        mol.bonds.add(newCrossBond)\n        tailAtom = amap[xAtom2]\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1])\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom\n      else xBond2.end = tailAtom\n    }\n    sgroup.bonds = xBonds\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid)\n        })\n    })\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2() // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length)\n    }\n    return c\n  }\n}\n\nfunction descriptorIntersects(sgroups: [], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5))\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5))\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { FunctionalGroupsProvider } from '../helpers'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class FunctionalGroup {\n  #sgroup: SGroup\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null)\n\n    this.#sgroup = sgroup\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const types = provider.getFunctionalGroupsList()\n    return (\n      types.some((type) => type.name === sgroup.data.name) &&\n      sgroup.type === 'SUP'\n    )\n  }\n\n  static atomsInFunctionalGroup(functionalGroups, atom): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return atom\n    }\n    return null\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return bond\n    }\n    return null\n  }\n\n  static findFunctionalGroupByAtom(functionalGroups, atom): number | null {\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static findFunctionalGroupByBond(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup)\n  }\n\n  static isFirstAtomInFunctionalGroup(sgroups, aid): boolean {\n    for (const sg of sgroups.values()) {\n      if (FunctionalGroup.isFunctionalGroup(sg) && aid === sg.atoms[0]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroups: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroups.push(sg.item.id)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.id)\n        }\n      })\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg))\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroupsAtoms: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroupsAtoms.push(...sg.item.atoms)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroupsAtoms.push(...sg.atoms)\n        }\n      })\n    }\n    return (\n      contractedFunctionalGroupsAtoms.includes(bond.begin) &&\n      contractedFunctionalGroupsAtoms.includes(bond.end)\n    )\n  }\n\n  static isContractedFunctionalGroup(sgroupId, functionalGroups): boolean {\n    let isFunctionalGroup = false\n    let expanded = false\n    functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroupId === sgroupId) {\n        isFunctionalGroup = true\n        expanded = fg.isExpanded\n      }\n    })\n    return !expanded && isFunctionalGroup\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\n/** @internal */\nexport class HalfBond {\n  begin: number\n  end: number\n  bid: number\n  dir: Vec2\n  norm: Vec2\n  ang: number\n  p: Vec2\n  loop: number\n  contra: number\n  next: number\n  leftSin: number\n  leftCos: number\n  leftNeighbor: number\n  rightSin: number\n  rightCos: number\n  rightNeighbor: number\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.')\n\n    this.begin = begin\n    this.end = end\n    this.bid = bid\n\n    // rendering properties\n    this.dir = new Vec2() // direction\n    this.norm = new Vec2() // left normal\n    this.ang = 0 // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2() // corrected origin position\n    this.loop = -1 // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1 // the half bond contrary to this one\n    this.next = -1 // the half-bond next ot this one in CCW order\n    this.leftSin = 0\n    this.leftCos = 0\n    this.leftNeighbor = 0\n    this.rightSin = 0\n    this.rightCos = 0\n    this.rightNeighbor = 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond'\nimport { Struct } from './struct'\n\nexport class Loop {\n  hbs: number[]\n  dblBonds: number\n  aromatic: boolean\n  convex: boolean\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs // set of half-bonds involved\n    this.dblBonds = 0 // number of double bonds in the loop\n    this.aromatic = true\n    this.convex = isConvex || false\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { Pool } from './pool'\n\nexport interface RGroupAttributes {\n  index?: number\n  ifthen?: number\n  resth?: boolean\n  range?: string\n}\nexport class RGroup {\n  frags: Pile<number>\n  resth: boolean\n  range: string\n  ifthen: number\n  index: number\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>()\n    this.resth = atrributes?.resth || false\n    this.range = atrributes?.range || ''\n    this.ifthen = atrributes?.ifthen || 0\n    this.index = atrributes?.index || -1\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid))\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index\n    }\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this)\n    this.frags.forEach((fid) => {\n      ret.frags.add(fidMap ? fidMap.get(fid)! : fid)\n    })\n    return ret\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle'\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode\n  pos?: Array<Point>\n  height?: number\n}\n\nexport class RxnArrow {\n  mode: RxnArrowMode\n  pos: Array<Vec2>\n  height?: number\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle\n    ].includes(arrow.mode)\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    this.pos = []\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n    this.mode = attributes.mode\n    const defaultHeight = 2\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this)\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1])\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport interface RxnPlusAttributes {\n  pp?: Point\n}\n\nexport class RxnPlus {\n  pp: Vec2\n\n  constructor(attributes?: RxnPlusAttributes) {\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2()\n  }\n\n  clone() {\n    return new RxnPlus(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>\n  /** node id -> list of child ids */\n  children: Map<number, number[]>\n  atomSets: Map<number, any>\n\n  constructor() {\n    this.parent = new Map()\n    this.children = new Map()\n\n    this.children.set(-1, []) // extra root node\n    this.atomSets = new Map()\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = []\n    const queue = Array.from(this.children.get(-1) as Array<number>)\n    while (queue.length > 0) {\n      const id = queue.shift()\n      if (typeof id !== 'number') {\n        break\n      }\n      const children = this.children.get(id)\n      if (typeof children === 'undefined') {\n        break\n      }\n\n      children.forEach((id) => {\n        queue.push(id)\n      })\n\n      order.push(id)\n    }\n\n    return order\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map()\n    const isSubset = new Map()\n\n    this.atomSets.delete(newId)\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms))\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms)\n      )\n    })\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false\n      }\n      const childs = this.children.get(sgid)\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0\n    })\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id))\n    )\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0]\n    }\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = []\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id)\n    }\n    return path\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest')\n    assert(!this.children.has(id), 'sgid already present in the forest')\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms))\n      parent = guess.parent\n      children = guess.children\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id)\n    })\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id))\n    )\n    this.parent.set(id, parent)\n    this.children.get(parent)?.push(id)\n    this.atomSets.set(id, new Pile(atoms))\n\n    return { parent, children }\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId)\n    if (typeof parentId === 'undefined') {\n      return\n    }\n\n    const childs = this.children.get(parentId)\n    if (!childs) {\n      return\n    }\n\n    const childIndex = childs.indexOf(childId)\n    childs.splice(childIndex, 1)\n    this.parent.set(childId, id)\n  }\n\n  remove(id) {\n    assert(this.parent.has(id), 'sgid is not in the forest')\n    assert(this.children.has(id), 'sgid is not in the forest')\n\n    const parentId = this.parent.get(id) as any\n    const childs = this.children.get(parentId) as any\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId)\n      this.children.get(parentId)?.push(childId)\n    })\n\n    const i = childs.indexOf(id)\n    childs.splice(i, 1)\n\n    this.children.delete(id)\n    this.parent.delete(id)\n    this.atomSets.delete(id)\n  }\n}\n\nexport function checkOverlapping(struct, atoms) {\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid)\n    return res.union(atom.sgs)\n  }, new Pile())\n\n  return Array.from(sgroups).some((sid) => {\n    const sg = struct.sgroups.get(sid)\n    if (sg.type === 'DAT') return false\n    const sgAtoms = SGroup.getAtoms(struct, sg)\n\n    return sgAtoms.length < atoms.length\n      ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n      : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line'\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode\n  pos?: Array<Point>\n}\n\nexport class SimpleObject {\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    this.pos = []\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this)\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1])\n      }\n      default:\n        return this.pos[0]\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0\n\n  add(item: TValue): number {\n    const id = this.nextId++\n    super.set(id, item)\n    return id\n  }\n\n  newId(): number {\n    return this.nextId++\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key\n    }\n\n    return null\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key\n    }\n\n    return null\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value))\n    )\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, radicalElectrons } from './atom'\n\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Elements } from 'domain/constants'\nimport { Fragment } from './fragment'\nimport { FunctionalGroup } from './functionalGroup'\nimport { HalfBond } from './halfBond'\nimport { Loop } from './loop'\nimport { Pile } from './pile'\nimport { Pool } from './pool'\nimport { RGroup } from './rgroup'\nimport { RxnArrow } from './rxnArrow'\nimport { RxnPlus } from './rxnPlus'\nimport { SGroup } from './sgroup'\nimport { SGroupForest } from './sgroupForest'\nimport { SimpleObject } from './simpleObject'\nimport { Text } from './text'\nimport { Vec2 } from './vec2'\nimport { Highlight } from './highlight'\n\nexport type Neighbor = {\n  aid: number\n  bid: number\n}\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false\n  }\n  array.push(item)\n  return true\n}\n\nexport class Struct {\n  atoms: Pool<Atom>\n  bonds: Pool<Bond>\n  sgroups: Pool<SGroup>\n  halfBonds: Pool<HalfBond>\n  loops: Pool<Loop>\n  isReaction: boolean\n  rxnArrows: Pool<RxnArrow>\n  rxnPluses: Pool<RxnPlus>\n  frags: Pool<Fragment | null>\n  rgroups: Pool<RGroup>\n  name: string\n  sGroupForest: SGroupForest\n  simpleObjects: Pool<SimpleObject>\n  texts: Pool<Text>\n  functionalGroups: Pool<FunctionalGroup>\n  highlights: Pool<Highlight>\n\n  constructor() {\n    this.atoms = new Pool<Atom>()\n    this.bonds = new Pool<Bond>()\n    this.sgroups = new Pool<SGroup>()\n    this.halfBonds = new Pool<HalfBond>()\n    this.loops = new Pool<Loop>()\n    this.isReaction = false\n    this.rxnArrows = new Pool<RxnArrow>()\n    this.rxnPluses = new Pool<RxnPlus>()\n    this.frags = new Pool<Fragment>()\n    this.rgroups = new Pool<RGroup>()\n    this.name = ''\n    this.sGroupForest = new SGroupForest()\n    this.simpleObjects = new Pool<SimpleObject>()\n    this.texts = new Pool<Text>()\n    this.functionalGroups = new Pool<FunctionalGroup>()\n    this.highlights = new Pool<Highlight>()\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    )\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses()\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0\n    )\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet\n    )\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>()\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid)\n    })\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid)\n        })\n      })\n    })\n\n    return this.clone(atomSet)\n  }\n\n  getFragmentIds(fid: number): Pile<number> {\n    const atomSet = new Pile<number>()\n\n    this.atoms.forEach((atom, aid) => {\n      if (atom.fragment === fid) atomSet.add(aid)\n    })\n\n    return atomSet\n  }\n\n  getFragment(fid: number): Struct {\n    return this.clone(this.getFragmentIds(fid), null, true)\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys())\n    bondSet = bondSet || new Pile<number>(this.bonds.keys())\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys())\n    textsSet = textsSet || new Pile<number>(this.texts.keys())\n    aidMap = aidMap || new Map()\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end)\n    })\n\n    const fidMask = new Pile()\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment)\n    })\n\n    const fidMap = new Map()\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null))\n    })\n\n    const rgroupsIds: Array<number> = []\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) keepGroup = true\n        })\n\n        if (!keepGroup) return\n      }\n\n      const rg = cp.rgroups.get(rgid)\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid))\n        })\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap))\n      }\n    })\n\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid)\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)) // clone Fragments\n      }\n    })\n\n    const bidMap = new Map()\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)))\n    })\n\n    this.sgroups.forEach((sg) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return\n\n      sg = SGroup.clone(sg, aidMap!)\n      const id = cp.sgroups.add(sg)\n      sg.id = id\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid)\n        if (atom) {\n          atom.sgs.add(id)\n        }\n      })\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, [])\n      else cp.sGroupForest.insert(sg)\n    })\n\n    this.functionalGroups.forEach((fg) => {\n      fg = FunctionalGroup.clone(fg)\n      cp.functionalGroups.add(fg)\n    })\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone())\n    })\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone())\n    })\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone())\n      })\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone())\n      })\n    }\n\n    cp.name = this.name\n\n    return cp\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds()\n    this.initNeighbors()\n    this.updateHalfBonds(Array.from(this.atoms.keys()))\n    this.sortNeighbors(Array.from(this.atoms.keys()))\n    this.findLoops()\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid)\n    this.atoms.get(aid)!.sgs.add(sgid)\n  }\n\n  calcConn(atom) {\n    let conn = 0\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!\n      const bond = this.bonds.get(hb.bid)!\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1\n          break\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2\n          break\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3\n          break\n        case Bond.PATTERN.TYPE.DATIVE:\n          break\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true]\n          return [atom.neighbors.length, true]\n        default:\n          return [-1, false]\n      }\n    }\n    return [conn, false]\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin)\n    )\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = []\n    })\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n      a1.neighbors.push(bond.hb1!)\n      a2.neighbors.push(bond.hb2!)\n    })\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!\n    bond.hb1 = 2 * bid\n    bond.hb2 = 2 * bid + 1 // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid))\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid))\n    const hb1 = this.halfBonds.get(bond.hb1)!\n    const hb2 = this.halfBonds.get(bond.hb2)!\n    hb1.contra = bond.hb2\n    hb2.contra = bond.hb1\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!\n    const startCoords = this.atoms.get(halfBond.begin)!.pp\n    const endCoords = this.atoms.get(halfBond.end)!.pp\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized()\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0)\n    halfBond.norm = halfBond.dir.turnLeft()\n    halfBond.ang = halfBond.dir.oxAngle()\n    if (halfBond.loop < 0) halfBond.loop = -1\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear()\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond)\n    })\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!\n    const hbl = this.halfBonds.get(left)!\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir)\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir)\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir)\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir)\n\n    hb.leftNeighbor = left\n    hbl.rightNeighbor = hbid\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!\n    const atom = this.atoms.get(hb.begin)!\n\n    let i\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break\n    }\n    atom.neighbors.splice(i, 0, hbid)\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length]\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length]\n    this.setHbNext(il, hbid)\n    this.setHbNext(hbid, ir)\n    this.halfBondSetAngle(hbid, il)\n    this.halfBondSetAngle(ir, hbid)\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!\n    const halfBonds = this.halfBonds\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length]\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei\n        this.halfBondSetAngle(nextNei, nei)\n      })\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid)\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra)\n    })\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = []\n      sg.neiAtoms = []\n    })\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.end)\n        }\n      })\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.begin)\n        }\n      })\n    })\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid)\n    })\n\n    this.sGroupForest.remove(sgid)\n    this.sgroups.delete(sgid)\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!\n    item.pp = pp\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!\n    item.pp = pp\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id)\n    if (item) {\n      item.pos = pos\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!\n    item.pos = pos\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id)\n\n    if (item) {\n      item.position = position\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp\n        }\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec)\n            bb.max = Vec2.max(bb.max, vec)\n          })\n        } else {\n          bb.min = Vec2.min(bb.min, pp)\n          bb.max = Vec2.max(bb.max, pp)\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp)\n    })\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp)\n      })\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos)\n      })\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos)\n      })\n      this.texts.forEach((item) => {\n        extend(item.position)\n      })\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1)\n      }\n    }\n    return bb\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp)\n        }\n      } else {\n        bb.min = Vec2.min(bb.min, pp)\n        bb.max = Vec2.max(bb.max, pp)\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp)\n    })\n    return bb\n  }\n\n  getBondLengthData() {\n    let totalLength = 0\n    let cnt = 0\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp\n      )\n      cnt++\n    })\n    return { cnt, totalLength }\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData()\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0\n    let minDist\n    let dist = 0\n    const keys = Array.from(this.atoms.keys())\n    let k\n    let j\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp\n        )\n        if (minDist < 0 || minDist > dist) minDist = dist\n      }\n      totalDist += minDist\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end)\n    )\n\n    return key !== undefined\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid]\n    const ids = new Pile<number>()\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)!\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds()\n      this.initNeighbors()\n      this.updateHalfBonds(Array.from(this.atoms.keys()))\n      this.sortNeighbors(Array.from(this.atoms.keys()))\n    }\n\n    let addedAtoms = new Pile<number>()\n\n    const components: Array<any> = []\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid)\n        components.push(component)\n        addedAtoms = addedAtoms.union(component)\n      }\n    })\n\n    return components\n  }\n\n  markFragment(idSet: Pile<number>) {\n    const frag = new Fragment()\n    const fid = this.frags.add(frag)\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true)\n      atom.fragment = fid\n    })\n  }\n\n  markFragments() {\n    const components = this.findConnectedComponents()\n    components.forEach((comp) => {\n      this.markFragment(comp)\n    })\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale)\n    })\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale)\n    })\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale))\n    })\n\n    this.sgroups.forEach((item) => {\n      item.pp = item.pp ? item.pp.scaled(scale) : null\n    })\n\n    this.texts.forEach((item) => {\n      // Scale text only for reactions - i.e file contains reaction arrows\n      const isReactionStruct = this.rxnArrows.size\n      if (isReactionStruct) {\n        item.pos = item.pos.map((p) => p.scaled(scale))\n        item.position = item.position.scaled(scale)\n      }\n    })\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength()\n    if (avg < 0 && !this.isReaction) {\n      // TODO [MK] this doesn't work well for reactions as the distances between\n      // the atoms in different components are generally larger than those between atoms of a single component\n      // (KETCHER-341)\n      avg = this.getAvgClosestAtomDistance()\n    }\n    if (avg < 1e-3) avg = 1\n\n    const scale = 1 / avg\n    this.scale(scale)\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!\n      const ai = this.atoms.get(hbi.begin)!.pp\n      const bi = this.atoms.get(hbi.end)!.pp\n      const set = new Pile([hbi.begin, hbi.end])\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp\n        const bj = this.atoms.get(hbj.end)!.pp\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true\n      }\n    }\n\n    return false\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = []\n    let continueFlag = true\n    while (continueFlag) {\n      const atomToHalfBond = {} // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l]\n        const aid1 = this.halfBonds.get(hbid)!.begin\n        const aid2 = this.halfBonds.get(hbid)!.end\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2] // where the subloop begins\n          const subloop = loop.slice(s, l + 1)\n          subloops.push(subloop)\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1)\n          }\n          continueFlag = true\n          break\n        }\n        atomToHalfBond[aid1] = l\n      }\n      if (!continueFlag) subloops.push(loop) // we're done, no more subloops found\n    }\n    return subloops\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!\n    const hbb = this.halfBonds.get(hbid2)!\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir))\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length])\n      return angle <= 0\n    })\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length]\n      const hbb = this.halfBonds.get(hbidb)!\n      const angle = this.halfBondAngle(hbida, hbidb)\n      totalAngle += hbb.contra === hbida ? Math.PI : angle // back and forth along the same edge\n    })\n    return Math.abs(totalAngle) < Math.PI\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = []\n    const bondsToMark = new Pile<number>()\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext)\n          continue // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop)\n        subloops.forEach((loop) => {\n          let loopId\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop)\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop))\n            )\n          } else {\n            loopId = -2\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid)\n          })\n\n          if (loopId >= 0) newLoops.push(loopId)\n        })\n        break\n      }\n    })\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark)\n    }\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    const atom = this.atoms.get(aid)!\n    const [conn, isAromatic] = this.calcConn(atom)\n    let correctConn = conn\n    atom.badConn = false\n\n    if (isAromatic) {\n      if (atom.label === 'C' && atom.charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical)\n          return\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical)\n          return\n        }\n      } else if (\n        (atom.label === 'O' && atom.charge === 0) ||\n        (atom.label === 'N' && atom.charge === 0 && conn === 3) ||\n        (atom.label === 'N' && atom.charge === 1 && conn === 3) ||\n        (atom.label === 'S' && atom.charge === 0 && conn === 3)\n      ) {\n        atom.implicitH = 0\n        return\n      } else if (!atom.hasImplicitH) {\n        correctConn++\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery()) {\n      atom.implicitH = 0\n      return\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label)\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0\n        atom.badConn = true\n      }\n    } else {\n      atom.calcValence(correctConn)\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true\n      }\n    })\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid)\n        }\n      })\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!\n      return {\n        aid: hb.end,\n        bid: hb.bid\n      }\n    })\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true)\n    const barriers: Array<any> = []\n    let arrowPos: number | null = null\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x\n    })\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x)\n    })\n\n    if (arrowPos !== null) barriers.push(arrowPos)\n\n    barriers.sort((a, b) => a - b)\n\n    const components: Array<any> = []\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component)\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n      let j = 0\n\n      while (c.x > barriers[j]) ++j\n\n      components[j] = components[j] || new Pile()\n      components[j] = components[j].union(component)\n    })\n\n    const submolTexts: Array<string> = []\n    const reactants: Array<any> = []\n    const products: Array<any> = []\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('')\n        return\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0\n      )\n\n      if (rxnFragmentType === 1) reactants.push(component)\n      else products.push(component)\n    })\n\n    return {\n      reactants,\n      products\n    }\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset)\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n    return c.x < arrowpos ? 1 : 2\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin\n    return aid && this.atoms.get(aid)?.fragment\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup))\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2'\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE'\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string\n  position: Point\n  pos: Array<Point>\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()]\n  }\n\n  return positions.map((position) => new Vec2(position))\n}\n\nexport class Text {\n  content: string\n  position: Vec2\n  pos: Array<Vec2>\n\n  constructor(attributes?: TextAttributes) {\n    this.pos = preparePositions(attributes?.pos)\n    this.content = attributes?.content || ''\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2()\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || []\n  }\n\n  clone(): Text {\n    return new Text(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n}\n\nexport class Highlight {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes\n    this.color = color\n    this.atoms = atoms\n    this.bonds = bonds\n  }\n}\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { cloneDeepWith, cloneDeep } from 'lodash'\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value)\n    clonedValue.y = -clonedValue.y\n    return clonedValue\n  }\n}\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer)\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data)\n  }\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value\n  }\n}\n","export function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number\n  if (typeof value === 'number') {\n    parsedValue = value\n  } else {\n    parsedValue = parseFloat(value)\n  }\n  return parsedValue.toFixed(8)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events'\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE'\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING)\n  try {\n    const res = await action()\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS)\n    return res\n  } catch {\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE)\n    return undefined\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\n\nexport function headerToKet(struct: Struct): any {\n  const header = {}\n\n  ifDef(header, 'moleculeName', struct.name, '')\n  ifDef(header, 'creatorProgram', null, '')\n  ifDef(header, 'comment', null, '')\n\n  return Object.keys(header).length !== 0 ? header : null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = []\n  let rgi\n  let val\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1\n      res.push(val) // push the string\n    }\n  }\n  return res\n}\n\nexport function moleculeToKet(struct: Struct): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      if (atom.label === 'R#') return rglabelToKet(atom)\n      if (atom.label === 'L#') return atomListToKet(atom)\n      return atomToKet(atom)\n    })\n  }\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet)\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup)\n    )\n  }\n\n  const fragment = struct.frags.get(0)\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null)\n  }\n  return {\n    type: 'molecule',\n    ...body\n  }\n}\n\nfunction atomToKet(source) {\n  const result = {}\n  ifDef(result, 'label', source.label)\n  ifDef(result, 'alias', source.alias)\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'charge', source.charge, 0)\n  ifDef(result, 'explicitValence', source.explicitValence, -1)\n  ifDef(result, 'isotope', source.isotope, 0)\n  ifDef(result, 'radical', source.radical, 0)\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null)\n  ifDef(result, 'stereoParity', source.stereoCare, 0)\n  ifDef(result, 'weight', source.weight, 0)\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0)\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0)\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false)\n  ifDef(result, 'hCount', source.hCount, 0)\n  // reaction\n  ifDef(result, 'mapping', parseInt(source.aam), 0)\n  ifDef(result, 'invRet', source.invRet, 0)\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false)\n  return result\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`\n  )\n  ifDef(result, '$refs', refsToRGroups)\n\n  return result\n}\n\nfunction atomListToKet(source) {\n  const result = {\n    type: 'atom-list'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  ifDef(result, 'elements', source.atomList.labelList())\n  ifDef(result, 'notList', source.atomList.notList, false)\n  return result\n}\n\nfunction bondToKet(source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', [source.begin, source.end])\n  ifDef(result, 'stereo', source.stereo, 0)\n  ifDef(result, 'topology', source.topology, 0)\n  ifDef(result, 'center', source.reactingCenterStatus, 0)\n\n  return result\n}\n\nfunction sgroupToKet(struct, source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', source.atoms)\n\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1)\n      break\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n')\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht'\n      )\n      break\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '')\n      ifDef(result, 'expanded', source.data.expanded)\n      ifDef(result, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      const data = source.data\n      ifDef(result, 'placement', data.absolute, true)\n      ifDef(result, 'display', data.attached, false)\n      ifDef(result, 'context', data.context)\n      ifDef(result, 'fieldName', data.fieldName)\n      ifDef(result, 'fieldData', data.fieldValue)\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source))\n      break\n    }\n    default:\n      break\n  }\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport { ifDef } from 'utilities'\n\nexport function toRlabel(values) {\n  let res = 0\n  values.forEach((val) => {\n    const rgi = val - 1\n    res |= 1 << rgi\n  })\n  return res\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = new Struct()\n  ketItem.atoms.forEach((atom) => {\n    if (atom.type === 'rg-label') struct.atoms.add(rglabelToStruct(atom))\n    if (atom.type === 'atom-list') struct.atoms.add(atomListToStruct(atom))\n    if (!atom.type) struct.atoms.add(atomToStruct(atom))\n  })\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)))\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroup) =>\n      struct.sgroups.add(sgroupToStruct(sgroup))\n    )\n  }\n\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.markFragments()\n  struct.bindSGroupsToFunctionalGroups()\n\n  return struct\n}\n\nexport function atomToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'label', source.label)\n  ifDef(params, 'alias', source.alias)\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'charge', source.charge)\n  ifDef(params, 'explicitValence', source.explicitValence)\n  ifDef(params, 'isotope', source.isotope)\n  ifDef(params, 'radical', source.radical)\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel)\n  ifDef(params, 'stereoParity', source.stereoParity)\n  ifDef(params, 'weight', source.weight)\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount)\n  ifDef(params, 'substitutionCount', source.substitutionCount)\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)))\n  ifDef(params, 'hCount', source.hCount)\n  // reaction\n  ifDef(params, 'aam', source.mapping)\n  ifDef(params, 'invRet', source.invRet)\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)))\n  return new Atom(params)\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {}\n  params.label = 'R#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const rglabel = toRlabel(source.$refs.map((el) => parseInt(el.slice(3))))\n  ifDef(params, 'rglabel', rglabel)\n  return new Atom(params)\n}\n\nexport function atomListToStruct(source) {\n  const params: any = {}\n  params.label = 'L#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const ids = source.elements\n    .map((el) => Elements.get(el)?.number)\n    .filter((id) => id)\n  ifDef(params, 'atomList', {\n    ids,\n    notList: source.notList\n  })\n  return new Atom(params)\n}\n\nexport function bondToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'type', source.type)\n  ifDef(params, 'topology', source.topology)\n  ifDef(params, 'reactingCenterStatus', source.center)\n  ifDef(params, 'stereo', source.stereo)\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0])\n  ifDef(params, 'end', source.atoms[1])\n\n  return new Bond(params)\n}\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type)\n  ifDef(sgroup, 'atoms', source.atoms)\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul)\n      break\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript)\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase())\n      break\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name)\n      ifDef(sgroup.data, 'expanded', source.expanded)\n      ifDef(sgroup, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement)\n      ifDef(sgroup.data, 'attached', source.display)\n      ifDef(sgroup.data, 'context', source.context)\n      ifDef(sgroup.data, 'fieldName', source.fieldName)\n      ifDef(sgroup.data, 'fieldValue', source.fieldData)\n      break\n    }\n    default:\n      break\n  }\n  return sgroup\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, SGroup, Struct, Vec2 } from 'domain/entities'\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: any = []\n\n  const rgFrags = new Set() // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid))\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile()\n    )\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup }\n    })\n  }\n\n  Array.from(struct.frags.keys())\n    .filter((fid) => !rgFrags.has(fid))\n    .forEach((fid) => {\n      const fragAtoms = struct.getFragmentIds(fid)\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(fragAtoms),\n        center: getFragmentCenter(struct, fragAtoms)\n      })\n    })\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height\n      }\n    })\n  })\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {}\n    })\n  })\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos\n      }\n    })\n  })\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos\n      }\n    })\n  })\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values())\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined)\n      )\n      const filteredSGroupsMap = new Map()\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg)\n      })\n      ketNode.fragment.sgroups = filteredSGroupsMap\n    }\n  })\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet)\n  return Vec2.centre(bb.min, bb.max)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\nimport { moleculeToKet } from './moleculeToKet'\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct)\n  }\n\n  return {\n    ...body,\n    type: 'rgroup'\n  }\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {}\n\n  ifDef(result, 'number', rgnumber)\n  ifDef(result, 'range', rglogic.range, '')\n  ifDef(result, 'resth', rglogic.resth, false)\n  ifDef(result, 'ifthen', rglogic.ifthen, 0)\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\nimport { moleculeToStruct } from './moleculeToStruct'\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem)\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic)\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key)\n  })\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup)\n  return struct\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {}\n  ifDef(params, 'range', rglogic.range)\n  ifDef(params, 'resth', rglogic.resth)\n  ifDef(params, 'ifthen', rglogic.ifthen)\n\n  return new RGroup(params)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    struct.rxnArrows.add(new RxnArrow(getNodeWithInvertedYCoord(ketItem.data)))\n  } else {\n    struct.rxnPluses.add(\n      new RxnPlus({\n        pp: {\n          x: ketItem.location[0],\n          y: -ketItem.location[1],\n          z: ketItem.location[2]\n        }\n      })\n    )\n  }\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data\n  struct.simpleObjects.add(new SimpleObject(getNodeWithInvertedYCoord(object)))\n  return struct\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0])\n  const pos0 = ketItem.data.pos[0]\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius)\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius)\n      }\n    ]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const object = getNodeWithInvertedYCoord(ketItem.data)\n  struct.texts.add(new Text(object))\n\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Ajv from 'ajv'\nimport schema from './schema.json'\n\nexport function validate(ket: any): boolean {\n  const ajv = new Ajv()\n  const validate = ajv.compile(schema)\n  return validate(ket)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities'\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet'\n\nimport { Serializer } from '../serializers.types'\nimport { headerToKet } from './toKet/headerToKet'\nimport { moleculeToKet } from './toKet/moleculeToKet'\nimport { moleculeToStruct } from './fromKet/moleculeToStruct'\nimport { prepareStructForKet } from './toKet/prepare'\nimport { rgroupToKet } from './toKet/rgroupToKet'\nimport { rgroupToStruct } from './fromKet/rgroupToStruct'\nimport { rxnToStruct } from './fromKet/rxnToStruct'\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet'\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct'\nimport { textToKet } from './toKet/textToKet'\nimport { textToStruct } from './fromKet/textToStruct'\nimport { validate } from './validate'\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'plus': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct)\n      break\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node)\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition)\n      }\n\n      currentStruct.mergeInto(struct)\n      break\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct)\n      break\n    }\n    case 'text': {\n      textToStruct(node, struct)\n      break\n    }\n    default:\n      break\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserialize(content: string): Struct {\n    const resultingStruct = new Struct()\n    const ket = JSON.parse(content)\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.')\n    }\n    const nodes = ket.root.nodes\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct)\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct)\n    })\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null\n\n    return resultingStruct\n  }\n\n  serialize(struct: Struct): string {\n    const result: any = {\n      root: {\n        nodes: []\n      }\n    }\n\n    const header = headerToKet(struct)\n    if (header) result.header = header\n\n    const ketNodes = prepareStructForKet(struct)\n\n    let moleculeId = 0\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` })\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment)\n          break\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` })\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment,\n            item.data\n          )\n          break\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item))\n          break\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item))\n          break\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item))\n          break\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item))\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return JSON.stringify(result, null, 4)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment\n} from 'domain/entities'\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number)\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.') // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit')\n\n  return numStr.padStart(width)\n}\n\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10)\n\n  return isNaN(val) ? 0 : val // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength))\n    if (withspace) shift++\n  }\n  return res\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [0, +3, +2, +1, 0, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount'\n  },\n  rxnItemsPartition: [3, 3, 3]\n}\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3\n}\n\nconst SHOULD_RESCALE_MOLECULES = true\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct()\n  const bbReact = []\n  const bbAgent = []\n  const bbProd = []\n  const molReact = []\n  const molAgent = []\n  const molProd = []\n  let j\n  const bondLengthData = { cnt: 0, totalLength: 0 }\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j]\n    const bondLengthDataMol = mol.getBondLengthData()\n    bondLengthData.cnt += bondLengthDataMol.cnt\n    bondLengthData.totalLength += bondLengthDataMol.totalLength\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt)\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j]\n      mol.scale(avgBondLength)\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j]\n    const bb = mol.getCoordBoundingBoxObj()\n    if (!bb) continue // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb)\n      molReact.push(mol)\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb)\n      molAgent.push(mol)\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb)\n      molProd.push(mol)\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType\n    })\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2\n    )\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n    bb.min.add_(d) // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d) // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret)\n    return bb.max.x - bb.min.x\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0\n    }\n    xorig += 2.0\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0\n    }\n    xorig += 2.0\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret)\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret)\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret)\n  }\n\n  let bb1\n  let bb2\n  let x\n  let y\n  let bbReactAll = null\n  let bbProdAll = null\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j]\n    bb2 = bbReact[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {}\n      bbReactAll.max = new Vec2(bbReact[j].max)\n      bbReactAll.min = new Vec2(bbReact[j].min)\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max)\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min)\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j]\n    bb2 = bbProd[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {}\n      bbProdAll.max = new Vec2(bbProd[j].max)\n      bbProdAll.min = new Vec2(bbProd[j].min)\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max)\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min)\n    }\n  }\n  bb1 = bbReactAll\n  bb2 = bbProdAll\n  const defaultArrowLength = 2\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)]\n      })\n    )\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null\n    const defaultOffset = 3\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y)\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y)\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5)\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd]\n      })\n    )\n  }\n  ret.isReaction = true\n  return ret\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct()\n\n  scaffold.mergeInto(ret, null, null, false, true)\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10)\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j]\n      ctab.rgroups.set(rgid, new RGroup())\n      const frag = new Fragment()\n      const frid = ctab.frags.add(frag)\n      ctab.rgroups.get(rgid).frags.add(frid)\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      ctab.mergeInto(ret)\n    }\n  })\n\n  return ret\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2 } from 'domain/entities'\n\nimport utils from './utils'\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool()\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2])\n\n    ret.set(key, value)\n  }\n\n  return ret\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = []\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2])\n      /* eslint-enable no-mixed-operators */\n    ])\n  }\n  return ret\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0\n  const atomReductionMap = {}\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap)\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap)\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m] // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing')\n      atomReductionMap[raid] = sgroup.patoms[m] // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms)\n\n  const patomsMap = identityMap(sgroup.patoms)\n\n  const bondsToRemove = []\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap\n    const endIn = bond.end in atomReductionMap\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid)\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin]\n    else if (endIn) bond.end = atomReductionMap[bond.end]\n  }, sgroup)\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b])\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a)\n    atomMap[a] = -1\n  }\n  sgroup.atoms = sgroup.patoms\n  sgroup.patoms = null\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase()\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim()\n  sgroup.data.subscript = ''\n}\n\nfunction postLoadGen(sgroup, mol, atomMap) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms))\n  }\n}\n\nfunction postLoadMon(sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen\n  }\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg)\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap)\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id)\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, [])\n  else mol.sGroupForest.insert(sg)\n\n  return sg.id\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true)\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type)\n    sg.number = key\n    sGroups[key] = sg\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric)\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    ;(core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key)\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1\n  const num = utils.parseDecimalInt(propData.slice(4, 8))\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true))\n\n  if (part.length !== num) throw new Error('File format invalid')\n  if (shift) part = part.map((v) => v + shift)\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part)\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false)\n  const id = utils.parseDecimalInt(split[0]) - 1\n  const fieldName = split[1].trim()\n  const fieldType = split[2].trim()\n  const units = split[3].trim()\n  const query = split[4].trim()\n  const queryOp = split[5].trim()\n  const sGroup = sGroups[id]\n  sGroup.data.fieldType = fieldType\n  sGroup.data.fieldName = fieldName\n  sGroup.data.units = units\n  sGroup.data.query = query\n  sGroup.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */\n    ],\n    false\n  )\n\n  const x = parseFloat(split[0])\n  const y = parseFloat(split[1])\n  const attached = split[3].trim() === 'A'\n  const absolute = split[4].trim() === 'A'\n  const showUnits = split[5].trim() === 'U'\n  let nCharsToDisplay = split[7].trim()\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay)\n  const tagChar = split[10].trim()\n  const daspPos = utils.parseDecimalInt(split[11].trim())\n\n  sg.pp = new Vec2(x, -y)\n  sg.data.attached = attached\n  sg.data.absolute = absolute\n  sg.data.showUnits = showUnits\n  sg.data.nCharsToDisplay = nCharsToDisplay\n  sg.data.tagChar = tagChar\n  sg.data.daspPos = daspPos\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1\n  const sg = sGroups[id]\n  applyDataSGroupInfo(sg, propData.substr(5))\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue)\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2\n      )\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1\n  const data = propData.substr(5)\n  const sg = sGroups[id]\n  applyDataSGroupData(sg, data, finalize)\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = []\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j])\n  }\n  return ret\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '')\n}\n\nfunction identityMap(array) {\n  const map = {}\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i]\n  return map\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition\n  )\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2])\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16])\n  }\n  return new Atom(params)\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition\n  )\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6])\n  }\n\n  return new Bond(params)\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition\n  )\n\n  const number = utils.parseDecimalInt(split[0]) - 1\n  const notList = split[2].trim() === 'T'\n  const count = utils.parseDecimalInt(split[4].trim())\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength)\n  const list = []\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1)\n    )\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list\n    })\n  }\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool()\n\n  while (shift < end) {\n    const line = ctabLines[shift]\n    if (line.charAt(0) === 'A') {\n      let propValue = ctabLines[++shift]\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue)\n      if (isPseudo && !props.get('pseudo')) props.set('pseudo', new Pool())\n      if (!isPseudo && !props.get('alias')) props.set('alias', new Pool())\n      if (isPseudo) propValue = propValue.replace(/'/g, '')\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3, 6)) - 1, propValue)\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6)\n      let propertyData = line.slice(6)\n      if (type === 'END') {\n        break\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount')) {\n          props.set('substitutionCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData))\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool())\n        const rglabels = props.get('rglabel')\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData)\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri]\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1))\n          )\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4)\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim())\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim())\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim())\n        const ooo = propertyData.slice(12).trim()\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[rgid] = logic\n      } else if (type === 'APO') {\n        if (!props.get('attpnt')) {\n          props.set('attpnt', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false)\n        )\n\n        if (!props.get('atomList')) props.set('atomList', new Pool())\n        if (!props.get('label')) props.set('label', new Pool())\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#')\n          props.get('atomList').set(aid, atomList)\n        })\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData)\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData)\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true)\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true)\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData)\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1)\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1)\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1)\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1\n        sGroups[sid].data.subscript = propertyData.slice(4).trim()\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData)\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData)\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false)\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true)\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ')\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1\n          sGroups[sGroupId].data.expanded = true\n        })\n      }\n    }\n    ++shift\n  }\n  return props\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal\n  })\n}\n\nfunction parseCTabV2000(ctabLines, countsSplit) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n  let i\n  const atomCount = utils.parseDecimalInt(countsSplit[0])\n  const bondCount = utils.parseDecimalInt(countsSplit[1])\n  const atomListCount = utils.parseDecimalInt(countsSplit[2])\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1\n  const isAnd = utils.parseDecimalInt(countsSplit[4]) === 0\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5])\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10])\n  let shift = 0\n  const atomLines = ctabLines.slice(shift, shift + atomCount)\n  shift += atomCount\n  const bondLines = ctabLines.slice(shift, shift + bondCount)\n  shift += bondCount\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount)\n  shift += atomListCount + stextLinesCount\n\n  const atoms = atomLines.map(parseAtomLine)\n  atoms.forEach((atom) => ctab.atoms.add(atom))\n\n  const bonds = bondLines.map(parseBondLine)\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`\n    }\n    ctab.bonds.add(bond)\n  })\n\n  const atomLists = atomListLines.map(parseAtomListLine)\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList\n    ctab.atoms.get(pair.aid).label = 'L#'\n  })\n\n  const sGroups = {}\n  const rLogic = {}\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic\n  )\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId)\n  })\n\n  const atomMap = {}\n  let sid\n  for (sid in sGroups) {\n    const sg = sGroups[sid]\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1]\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms)\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap)\n  const emptyGroups = []\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap)\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid)\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i])\n    ctab.sgroups.delete(emptyGroups[i])\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10)\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n  }\n  return ctab\n}\n\nfunction parseRg2000(/* string[] */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7)\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid')\n  let i = 1\n  while (ctabLines[i].charAt(0) !== '$') i++\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid')\n  }\n  const coreLines = ctabLines.slice(1, i)\n  ctabLines = ctabLines.slice(i + 1)\n  const fragmentLines = {}\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n    let line = ctabLines[0].trim()\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1)\n      break\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid')\n\n    const rgid = parseInt(ctabLines[1].trim(), 10)\n    fragmentLines[rgid] = []\n    ctabLines = ctabLines.slice(2)\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n      line = ctabLines[0].trim()\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1)\n        break\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid')\n      i = 1\n      while (ctabLines[i].charAt(0) !== '$') i++\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid')\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i))\n      ctabLines = ctabLines.slice(i + 1)\n    }\n  }\n\n  const core = parseCTab(coreLines)\n  const frag = {}\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10)\n      frag[id] = []\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j]))\n      }\n    }\n  }\n  return utils.rgMerge(core, frag)\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition\n  )\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit[2] - 0\n  ctabLines = ctabLines.slice(1) // consume counts line\n  const mols = []\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1)\n    let n = 0\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++\n\n    const lines = ctabLines.slice(0, n)\n    var struct\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines)\n    } else {\n      struct = parseCTab(lines.slice(3))\n      struct.name = lines[0].trim()\n    }\n    mols.push(struct)\n    ctabLines = ctabLines.slice(n)\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n}\n\nfunction parseCTab(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  ctabLines = ctabLines.slice(1)\n  return parseCTabV2000(ctabLines, countsSplit)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1\n  const count = utils.parseDecimalInt(hdr[2])\n  const notList = hdr[4].trim() === 'T'\n  const ids = labelsListToIds(lst.slice(0, count))\n  const ret = new Pool()\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids\n    })\n  )\n  return ret\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4])\n    ),\n    aam: split[5].trim()\n  }\n  let label = split[1].trim()\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2)\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1) // remove ']'\n    const atomListParams = {}\n    atomListParams.notList = false\n    const matchNotListInfo = label.match(/NOT ?\\[/)\n    if (matchNotListInfo) {\n      atomListParams.notList = true\n      const [matchedSubstr] = matchNotListInfo\n      label = label.substr(matchedSubstr.length) // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\")\n    } else {\n      label = label.substr(1) // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','))\n    params.atomList = new AtomList(atomListParams)\n    params.label = 'L#'\n  } else {\n    params.label = label\n  }\n  split.splice(0, 6)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value)\n      if (key === 'VAL') {\n        if (ival === 0) continue // eslint-disable-line no-continue\n        if (ival === -1) ival = 0\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2)\n      const rgrsplit = value.split(' ').slice(1)\n      params.rglabel = 0\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1)\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0\n    }\n  }\n\n  return new Atom(params)\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])]\n  }\n  split.splice(0, 4)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)]\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)]\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value)\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value)\n    }\n  }\n  return new Bond(params)\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++\n  shift++\n  return shift\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = ''\n  shift++\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim()\n    if (line.trim() === 'END SGROUP') return shift\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim()\n    }\n    const split = splitSGroupDef(line)\n    const type = split[1]\n    const sg = new SGroup(type)\n    sg.number = split[0] - 0\n    sg.type = type\n    sg.label = split[2] - 0\n    sgroups[sg.number] = sg\n    const props = {}\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=')\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\"\n        )\n      }\n      const name = subsplit[0]\n      if (!(name in props)) props[name] = []\n      props[name].push(subsplit[1])\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1)\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1)\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : []\n    const brkxyzStrs = props.BRKXYZ\n    sg.brkxyz = []\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]))\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim()\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase()\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]))\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true)\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0])\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0])\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0])\n    sGroup.loadSGroup(ctab, sg, atomMap)\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0])\n  }\n  throw new Error('S-group declaration incomplete.')\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n\n  let shift = 0\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid')\n  }\n  const vals = ctabLines[shift].slice(14).split(' ')\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1\n  shift++\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++\n    let line\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim()\n      if (line === 'END ATOM') break\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim()\n      }\n      ctab.atoms.add(parseAtomLineV3000(line))\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim()\n        if (line === 'END BOND') break\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim()\n        }\n        const bond = parseBondLineV3000(line)\n        if (bond.stereo && isAbs) ctab.atoms.get(bond.begin).stereoLabel = 'abs'\n        ctab.bonds.add(bond)\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {}\n    const atomMap = {}\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift)\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift)\n      } else throw Error('CTAB V3000 invalid')\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift))\n\n  return ctab\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {}\n  const rLogic = {}\n  let shift = 0\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop()\n    rfrags[id] = []\n    rLogic[id] = {}\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim()\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13)\n        const rlsplit = line.trim().split(/\\s+/g)\n        const iii = utils.parseDecimalInt(rlsplit[0])\n        const hhh = utils.parseDecimalInt(rlsplit[1])\n        const ooo = rlsplit.slice(2).join(' ')\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[id] = logic\n        shift++\n        continue // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid')\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1)\n      const rfrag = parseCTabV3000(lines, true)\n      rfrags[id].push(rfrag)\n      shift = shift + i + 1\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++\n        break\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n      const frid = rg.frags.add({})\n      rg.rgroups.get(rgid).frags.add(frid)\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      rg.mergeInto(ctab)\n    })\n  })\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3)\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j\n    }\n\n    return console.error('CTab format invalid')\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j\n    }\n    return console.error('CTab format invalid')\n  }\n\n  const molLinesReactants = []\n  const molLinesProducts = []\n  let current = null\n  const rGroups = []\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim()\n    var j\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i)\n      rGroups.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i)\n      current.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else {\n      throw new Error('line unrecognized: ' + line)\n    }\n  }\n  const mols = []\n  const molLines = molLinesReactants.concat(molLinesProducts)\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit)\n    mols.push(mol)\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = []\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k])\n      return res\n    })(rGroups)\n  )\n\n  return ctab\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let bracketEquality = 0\n  let currentIndex = 0\n  let firstSliceIndex = -1\n  let quoted = false\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex]\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']')\n      split.push(line.slice(currentIndex, closingBracketIndex + 1))\n      currentIndex = closingBracketIndex + 1\n      firstSliceIndex = currentIndex\n    } else if (currentSymbol === '(') bracketEquality += 1\n    else if (currentSymbol === ')') bracketEquality -= 1\n    else if (currentSymbol === '\"') quoted = !quoted\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex))\n      }\n      firstSliceIndex = currentIndex\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex))\n  }\n  return split\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2)\n  }\n  return str\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim)\n  return [line.slice(0, p), line.slice(p + 1)]\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let braceBalance = 0\n  let quoted = false\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i)\n    if (c === '\"') {\n      quoted = !quoted\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++\n      } else if (c === ')') {\n        braceBalance--\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i))\n        line = line.slice(i + 1).trim()\n        i = 0\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!')\n  }\n  if (line.length > 0) split.push(line.trim())\n  return split\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null\n  const list = []\n  line = line.trim()\n  line = line.substr(1, line.length - 2)\n  const split = line.split(' ')\n  shift = shift || 0\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i])\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift)\n    }\n  }\n\n  return list\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid')\n  return line.slice(7)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile, SGroup } from 'domain/entities'\n\nimport utils from './utils'\nimport v2000 from './v2000'\nimport v3000 from './v3000'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines)\n    struct.name = ctabLines[3].trim()\n    return struct\n  }\n  const struct = parseCTab(ctabLines.slice(3))\n  struct.name = ctabLines[0].trim()\n  return struct\n}\n\nfunction parseCTab(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  const version = countsSplit[11].trim()\n  ctabLines = ctabLines.slice(1)\n  if (version === 'V2000') return v2000.parseCTabV2000(ctabLines, countsSplit)\n  else if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments)\n  } else throw new Error('Molfile version unknown: ' + version) // eslint-disable-line no-else-return\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ')\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout)\n  }\n\n  const struct = v2000.parseRxn2000(ctabLines, shouldReactionRelayout)\n  struct.name = ctabLines[1].trim()\n  return struct\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving\n}\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number'\n    }\n  }\n  sgroup.bonds = xBonds\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  sgroup.bonds = xBonds\n}\n\nfunction prepareGenForSaving(sgroup, mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup)\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile\n}\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap\n    )\n  ) // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap\n    )\n  )\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul\n  lines.push(smtLine)\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  if (sgroup.data.name && sgroup.data.name !== '') {\n    lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name)\n  }\n  return lines.join('\\n')\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  const data = sgroup.data\n  let pp = sgroup.pp\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms))\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2)\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65)\n  }\n\n  lines.push(sdtLine)\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  ' // oo\n  lines.push(sddLine)\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '')\n  const charsPerLine = 69\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine))\n      chars = chars.slice(charsPerLine)\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars)\n  })\n  return lines.join('\\n')\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return []\n  const lines = []\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15) // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2)\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3)\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine)\n  }\n  return lines\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms)\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet)\n  SGroup.bracketPos(sg, mol, crossBonds)\n  const bb = sg.bracketBox\n  const d = sg.bracketDir\n  const n = d.rotateSC(1, 0)\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n\n  )\n  const lines = []\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement()\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement()\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3)\n    const coord = [a0.x, a0.y, a1.x, a1.y]\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4)\n    }\n    lines.push(line)\n  }\n  return lines\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n')\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { StereoFlag, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport common from './common'\nimport utils from './utils'\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0'\n\ntype Mapping = {\n  [key in number]: number\n}\ntype NumberTuple = [number, number]\n\nexport class Molfile {\n  molecule: Struct | null\n  molfile: string | null\n  reaction: boolean\n  mapping: Mapping\n  bondMapping: Mapping\n\n  constructor() {\n    this.molecule = null\n    this.molfile = null\n\n    this.reaction = false\n    this.mapping = {}\n    this.bondMapping = {}\n  }\n\n  parseCTFile(molfileLines: string[], shouldReactionRelayout?: boolean) {\n    let ret\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(molfileLines, shouldReactionRelayout)\n    } else {\n      ret = common.parseMol(molfileLines)\n    }\n    ret.initHalfBonds()\n    ret.initNeighbors()\n    ret.bindSGroupsToFunctionalGroups()\n\n    return ret\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule\n    const toRemove: any[] = []\n    let errors = 0\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!\n        let errorIgnore = false\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol)\n        } catch (ex: any) {\n          if (!skipErrors || typeof ex.id !== 'number') {\n            throw new Error(`Error: ${ex.message}`)\n          }\n          errorIgnore = true\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore\n          toRemove.push(sgroup.id)\n        }\n      }, this)\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.'\n      )\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i])\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone()\n    this.prepareSGroups(false, false)\n    this.molfile = ''\n    this.writeCTab2000(rgroups)\n    return this.molfile\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow()\n    this.molfile = '' + molecule.name\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment'\n        )\n      }\n      const components = molecule.getComponents()\n\n      const reactants = components.reactants\n      const products = components.products\n      const all = reactants.concat(products)\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n'\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile()\n        const submol = molecule.clone(all[i], null, true)\n        const molfile = saver.saveMolecule(submol, false, true)\n        this.molfile += '$MOL\\n' + molfile\n      }\n      return this.molfile\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold()\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups\n        )\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n'\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n'\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n'\n          this.writePaddedNumber(rgid, 3)\n          this.molfile += '\\n'\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid))\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n'\n          })\n          this.molfile += '$END RGP\\n'\n        })\n        this.molfile += '$END MOL\\n'\n\n        return this.molfile\n      }\n    }\n\n    this.molecule = molecule.clone()\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc)\n\n    this.writeHeader()\n    this.writeCTab2000()\n\n    return this.molfile\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date()\n\n    this.writeCR() // TODO: write structure name\n    this.writeWhiteSpace(2)\n    this.write('Ketcher')\n    this.writeWhiteSpace()\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000\n    )\n    this.writeCR()\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = ''\n    }\n\n    this.molfile += str + '\\n'\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)))\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str)\n    this.writeWhiteSpace(width - str.length)\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString()\n\n    this.writeWhiteSpace(width - str.length)\n    this.write(str)\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision))\n  }\n\n  writeCTab2000Header() {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3)\n    this.writePaddedNumber(this.molecule!.bonds.size, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false\n    )\n    this.writePaddedNumber(isAbsFlag ? 1 : 0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(999, 3)\n    this.writeCR(' V2000')\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header()\n\n    this.mapping = {}\n    let i = 1\n\n    const atomsIds: number[] = []\n    const atomsProps: {\n      id: number\n      value: string\n    }[] = []\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label\n      if (atom.atomList != null) {\n        label = 'L'\n        atomsIds.push(id)\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A'\n          atomsProps.push({ id, value: `'${atom.pseudo}'` })\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias })\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C'\n        atomsProps.push({ id, value: atom.label })\n      }\n\n      this.writeAtom(atom, label)\n\n      this.mapping[id] = i++\n    }, this)\n\n    this.bondMapping = {}\n    i = 1\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++\n      this.writeBond(bond)\n    }, this)\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0])\n      atomsProps.splice(0, 1)\n    }\n\n    const chargeList: NumberTuple[] = []\n    const isotopeList: NumberTuple[] = []\n    const radicalList: NumberTuple[] = []\n    const rglabelList: NumberTuple[] = []\n    const rglogicList: string[] = []\n    const aplabelList: NumberTuple[] = []\n    const rbcountList: NumberTuple[] = []\n    const unsaturatedList: NumberTuple[] = []\n    const substcountList: NumberTuple[] = []\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0) {\n        chargeList.push([id, atom.charge])\n      }\n      if (atom.isotope !== 0) {\n        isotopeList.push([id, atom.isotope])\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical])\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1])\n          }\n        }\n      }\n      if (atom.attpnt != null) {\n        aplabelList.push([id, atom.attpnt])\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount])\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount])\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom])\n      }\n    })\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range\n          rglogicList.push(line)\n        }\n      })\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList)\n    this.writeAtomPropList('M  ISO', isotopeList)\n    this.writeAtomPropList('M  RAD', radicalList)\n    this.writeAtomPropList('M  RGP', rglabelList)\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n')\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList)\n    this.writeAtomPropList('M  RBC', rbcountList)\n    this.writeAtomPropList('M  SUB', substcountList)\n    this.writeAtomPropList('M  UNS', unsaturatedList)\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j]\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!\n        this.write('M  ALS')\n        this.writePaddedNumber(atomId + 1, 4)\n        this.writePaddedNumber(atomList.ids.length, 3)\n        this.writeWhiteSpace()\n        this.write(atomList.notList ? 'T' : 'F')\n\n        const labelList = atomList.labelList()\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace()\n          this.writePadded(labelList[k], 3)\n        }\n        this.writeCR()\n      }\n    }\n\n    const sgmap = {}\n    let cnt = 1\n    const sgmapback = {}\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS()\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id\n      sgmap[id] = cnt++\n    })\n    for (let q = 1; q < cnt; ++q) {\n      // each group on its own\n      const id = sgmapback[q]\n      const sgroup = this.molecule!.sgroups.get(id)!\n      this.write('M  STY')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePadded(sgroup.type, 3)\n      this.writeCR()\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeCR()\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!\n      if (parentId >= 0) {\n        this.write('M  SPL')\n        this.writePaddedNumber(1, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(sgmap[parentId], 3)\n        this.writeCR()\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${q.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`\n\n        this.write('M  SCN')\n        this.writePaddedNumber(1, 3)\n        this.write(connectivity.toUpperCase())\n        this.writeCR()\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ')\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace()\n        this.write(sgroup.data.subscript || 'n')\n        this.writeCR()\n      }\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping\n        )\n      )\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = []\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.data.expanded) expandedGroups.push(sg.id + 1)\n    })\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`\n      this.writeCR(expandedGroupsLine)\n    }\n\n    this.writeCR('M  END')\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4)\n    this.writePaddedFloat(-atom.pp.y, 10, 4)\n    this.writePaddedFloat(atom.pp.z, 10, 4)\n    this.writeWhiteSpace()\n    this.writePadded(atomLabel, 3)\n    this.writePaddedNumber(0, 2)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0\n    }\n    this.writePaddedNumber(atom.hCount, 3)\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0\n    }\n    this.writePaddedNumber(atom.stereoCare, 3)\n\n    let number: number\n    if (atom.explicitValence < 0) {\n      number = 0\n    } else if (atom.explicitValence === 0) {\n      number = 15\n    } else {\n      number = atom.explicitValence\n    }\n    this.writePaddedNumber(number, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0\n    }\n    this.writePaddedNumber(atom.aam, 3)\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0\n    }\n    this.writePaddedNumber(atom.invRet, 3)\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3)\n\n    this.writeCR()\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3)\n    this.writePaddedNumber(this.mapping[bond.end], 3)\n    this.writePaddedNumber(bond.type, 3)\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0\n    }\n    this.writePaddedNumber(bond.stereo, 3)\n\n    this.writePadded(bond.xxx, 3)\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0\n    }\n    this.writePaddedNumber(bond.topology, 3)\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3)\n\n    this.writeCR()\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ')\n    this.writePaddedNumber(props.id + 1, 3)\n    this.writeCR()\n    this.writeCR(props.value)\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = []\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0])\n        values.splice(0, 1)\n      }\n\n      this.write(propId)\n      this.writePaddedNumber(part.length, 3)\n\n      part.forEach((value) => {\n        this.writeWhiteSpace()\n        this.writePaddedNumber(this.mapping[value[0]], 3)\n        this.writeWhiteSpace()\n        this.writePaddedNumber(value[1], 3)\n      })\n\n      this.writeCR()\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types'\nimport { Molfile } from './molfile'\nimport { Serializer } from '../serializers.types'\nimport { Struct } from 'domain/entities'\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false\n  }\n\n  readonly options: MolSerializerOptions\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile()\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g)\n    try {\n      return molfile.parseCTFile(lines, this.options.reactionRelayout)\n    } catch (ex) {\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile(\n            lines.slice(1),\n            this.options.reactionRelayout\n          )\n        } catch (ex1) {\n          //\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile(\n            [''].concat(lines),\n            this.options.reactionRelayout\n          )\n        } catch (ex2) {\n          //\n        }\n      }\n      throw ex\n    }\n  }\n\n  serialize(struct: Struct): string {\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities'\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.bonds = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2\n}\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func)\n}\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity\n}\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents\n}\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end)\n  const norm = new Vec2(-diff.y, diff.x)\n\n  if (!norm.normalize()) return 0\n\n  const normBeg = Vec2.diff(neiBeg, beg)\n  const normEnd = Vec2.diff(neiEnd, end)\n\n  if (!normBeg.normalize()) return 0\n  if (!normEnd.normalize()) return 0\n\n  const prodBeg = Vec2.dot(normBeg, norm)\n  const prodEnd = Vec2.dot(normEnd, norm)\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0\n\n  return prodBeg * prodEnd > 0 ? 1 : -1\n}\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp\n  )\n}\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen()\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen()\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen()\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen()\n\n  if (h0 && h1) return false\n  if (h2 && h3) return false\n\n  if (h1) {\n    substituents[1] = -1\n  } else if (h0) {\n    substituents[0] = substituents[1]\n    substituents[1] = -1\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1)\n  }\n\n  if (h3) {\n    substituents[3] = -1\n  } else if (h2) {\n    substituents[2] = substituents[3]\n    substituents[3] = -1\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3)\n  }\n\n  return true\n}\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx)\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false\n\n  const label1 = this.molecule.atoms.get(bond.begin).label\n  const label2 = this.molecule.atoms.get(bond.end).label\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin)\n  const neiEnd = this.getNeighbors.call(this.context, bond.end)\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false\n  }\n\n  substituents[0] = -1\n  substituents[1] = -1\n  substituents[2] = -1\n  substituents[3] = -1\n\n  let i\n  let nei\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false\n  }\n\n  return true\n}\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: []\n    }\n    this.bonds.set(bid, ct)\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return\n\n    if (!this.sortSubstituents(ct.substituents)) return\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2]\n    )\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS\n  })\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default CisTrans\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol\n  this.atom_data = atomData\n  this.components = components\n  this.nComponentsInReactants = -1\n  this.nReactants = nReactants\n\n  this.vertices = new Array(this.molecule.atoms.size) // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc()\n  }, this)\n\n  this.edges = new Array(this.molecule.bonds.size) // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc()\n  }, this)\n\n  this.v_seq = []\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0 // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0 // parent vertex in DFS tree\n  this.parent_edge = 0 // edge to parent vertex\n  this.branches = 0 // how many DFS branches go out from this vertex}\n}\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0 // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0 // 1 if this edge closes a cycle\n}\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx // index of vertex in _graph\n  this.parent_vertex = parVertex // parent vertex in DFS tree\n  this.parent_edge = parEdge // edge to parent vertex\n}\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = []\n  let i, j\n  let cid = 0\n  let component = 0\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n        if (selected === null) {\n          selected = -1\n          cid++\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n      }\n      if (selected === -1) break\n      this.vertices[selected].parent_vertex = -1\n      this.vertices[selected].parent_edge = -1\n      vStack.push(selected)\n      component++\n    }\n\n    const vIdx = vStack.pop()\n    const parentVertex = this.vertices[vIdx].parent_vertex\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge\n    )\n    this.v_seq.push(seqElem)\n\n    this.vertices[vIdx].dfs_state = 2\n\n    const atomD = this.atom_data[vIdx]\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid\n      const edgeIdx = atomD.neighbours[i].bid\n\n      if (neiIdx === parentVertex) continue // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1\n\n        j = vIdx\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex\n        }\n\n        if (j === -1) throw new Error('cycle unwind error')\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++\n        this.vertices[vIdx].branches++\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx)\n        this.v_seq.push(seqElem)\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx)\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack')\n          }\n\n          vStack.splice(j, 1)\n\n          const parent = this.vertices[neiIdx].parent_vertex\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--\n          }\n        }\n\n        this.vertices[vIdx].branches++\n        this.vertices[neiIdx].parent_vertex = vIdx\n        this.vertices[neiIdx].parent_edge = edgeIdx\n        this.vertices[neiIdx].dfs_state = 1\n        vStack.push(neiIdx)\n      }\n    }\n  }\n}\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0\n}\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches\n}\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles\n}\n\nDfs.prototype.toString = function () {\n  let str = ''\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> '\n  })\n  str += '*'\n  return str\n}\n\nexport default Dfs\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities'\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.atoms = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context)\n}\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors\n) {\n  const atoms = this.molecule.atoms\n  const bonds = this.molecule.bonds\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile()\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid)\n    if (neiList.length !== 2) return false\n    const nei1 = neiList[0]\n    const nei2 = neiList[1]\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid)\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid)\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid)\n    return true\n  })\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid)\n      let stereocenter = false\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid)\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true\n            return true\n          }\n        }\n        return false\n      }, this)\n\n      if (!stereocenter) return\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      }\n    })\n  }\n}\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 }\n]\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx)\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx)\n  const degree = neiList.length\n  let implicitDegree = -1\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: []\n  }\n\n  const edgeIds = []\n\n  let lastAtomDir = 0\n  let nDoubleBonds = 0\n\n  stereocenter.pyramid[0] = -1\n  stereocenter.pyramid[1] = -1\n  stereocenter.pyramid[2] = -1\n  stereocenter.pyramid[3] = -1\n\n  let nPureHydrogens = 0\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree)\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid)\n    const bond = this.molecule.bonds.get(nei.bid)\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement()\n    }\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++\n      edgeIds[neiIdx].rank = 10000\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length')\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++\n  })\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree\n      return true\n    }\n    return false\n  })\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)'\n    )\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter')\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter'\n    )\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n\n    var main1 = -1\n    let main2 = -1\n    var side1 = -1\n    var side2 = -1\n    var mainDir = 0\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx\n        mainDir = stereo\n        break\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond')\n    }\n\n    let xyz1, xyz2\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4\n        side1 = (main1 + 1) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 1) % 4\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond')\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec\n    )\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx)\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx)\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx)\n\n    let nUp = 0\n    let nDown = 0\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom')\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom')\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case')\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      }\n\n      mainDir = 0\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP\n      } else {\n        main1 = -1\n        side1 = -1\n        side2 = -1\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx\n            mainDir = dir\n            side1 = (neiIdx + 1) % 3\n            side2 = (neiIdx + 2) % 3\n            break\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond')\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec\n        )\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom')\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      }\n\n      stereocenter.pyramid[3] = -1\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      var dir\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter')\n      } else if (nUp > 0) dir = 1\n      else dir = -1\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      }\n      stereocenter.pyramid[3] = -1\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter)\n}\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx)\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0\n  }\n\n  return bond.stereo\n}\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001\n\n  const sine1 = Vec2.cross(v1, v2)\n  const cosine1 = Vec2.dot(v1, v2)\n\n  const sine2 = Vec2.cross(v1, u)\n  const cosine2 = Vec2.dot(v1, u)\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap')\n    }\n\n    return sine2 > 0 ? 4 : 8\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2\n\n  if (cosine2 < cosine1) return 2\n\n  return 1\n}\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x) // eslint-disable-line no-mixed-operators\n  const eps = 0.001\n\n  if (res > eps) return 1\n  if (res < -eps) return -1\n\n  throw new Error('degenerate triangle')\n}\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice()\n  let rigid = true\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n\n  return rigid\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default Stereocenters\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities'\n\nimport CisTrans from './cis_trans'\nimport Dfs from './dfs'\nimport Stereocenters from './stereocenters'\n\nexport function Smiles() {\n  this.smiles = ''\n  this.writtenAtoms = []\n  this.writtenComponents = 0\n\n  this.ignoreErrors = false\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = [] // Array of integer pairs {a, b}\n  this.aromatic = false // has aromatic bond\n  this.lowercase = false // aromatic and has to be written lowercase\n  this.chirality = 0 // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0 // runs from 0 to (branches - 1)\n  this.paren_written = false\n  this.h_count = hCount\n  this.parent = -1\n}\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid]\n}\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.sortNeighbors()\n  struct.setImplicitHydrogen()\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct)\n      } catch (ex) {\n        throw Error('Bad s-group (' + ex.message + ')')\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  })\n  // END\n\n  this.atoms = new Array(struct.atoms.size)\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH) // eslint-disable-line no-underscore-dangle\n  })\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As']\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true\n      }\n      this.atoms[bond.end].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid })\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid })\n  })\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure()\n    let bondsInLoops = new Pile()\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid)\n        bondsInLoops = bondsInLoops.union(new Pile(hbids))\n      }\n    })\n    const inLoop = {}\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1\n    })\n    return inLoop\n  })()\n\n  this.touchedCistransbonds = 0\n  this.markCisTrans(struct)\n\n  const components = struct.getComponents()\n  const componentsAll = components.reactants.concat(components.products)\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length\n  )\n\n  walk.walk()\n  this.atoms.forEach((atom) => {\n    atom.neighbours = []\n  })\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i]\n    var vIdx = seqEl.idx\n    var eIdx = seqEl.parent_edge\n    var vPrevIdx = seqEl.parent_vertex\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx]\n\n      var openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 })\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx\n            atom.neighbours[k].bid = eIdx\n            break\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place')\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx })\n        atom.parent = vPrevIdx\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx })\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours\n      },\n      this\n    )\n    stereocenters.buildFromBonds(this.ignoreErrors)\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = []\n      let counter = 0\n\n      const atom = this.atoms[atomIdx]\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow')\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0]\n        pyramidMapping[0] = pyramidMapping[1]\n        pyramidMapping[1] = pyramidMapping[2]\n        pyramidMapping[2] = pyramidMapping[3]\n        pyramidMapping[3] = counter\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality')\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1\n      } else this.atoms[atomIdx].chirality = 2\n    })\n  } catch (ex) {\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = []\n\n  cycleNumbers.push(0) // never used\n\n  let firstComponent = true\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i]\n    vIdx = seqEl.idx\n    eIdx = seqEl.parent_edge\n    vPrevIdx = seqEl.parent_vertex\n    let writeAtom = true\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')'\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx)\n        else cycleNumbers[k] = vPrevIdx\n\n        this.writeCycleNumber(k)\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx)\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false\n          } else {\n            this.smiles += '('\n            this.atoms[vPrevIdx].paren_written = true\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch')\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx)\n\n      let dir = 0\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx)\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/'\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\'\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '='\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,='\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':'\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-'\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break\n        }\n\n        if (j === cycleNumbers.length) throw new Error('cycle number not found')\n\n        this.writeCycleNumber(j)\n\n        cycleNumbers[j] = -1\n        writeAtom = false\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.' // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false\n      this.writtenComponents++\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality\n      )\n      this.writtenAtoms.push(seqEl.idx)\n    }\n  }\n\n  this.comma = false\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct)\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|'\n\n  return this.smiles\n}\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n\n  else if (n >= 10 && n < 100) this.smiles += '%' + n\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n\n  else throw new Error('bad cycle number: ' + n)\n}\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx)\n  let needBrackets = false\n  let hydro = -1\n  let aam = 0\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*'\n    return\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]'\n    return\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count\n  }\n\n  let label = atom.label\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label()\n    needBrackets = false // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*'\n    needBrackets = false\n  } else if (\n    chirality ||\n    atom.charge !== 0 ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count\n    this.smiles += '['\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope\n\n  if (lowercase) this.smiles += label.toLowerCase()\n  else this.smiles += label\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@'\n    // chirality == 2\n    else this.smiles += '@@'\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter')\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro\n    else if (hydro === 1) this.smiles += 'H'\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge\n  else if (atom.charge < -1) this.smiles += atom.charge\n  else if (atom.charge === 1) this.smiles += '+'\n  else if (atom.charge === -1) this.smiles += '-'\n\n  if (aam > 0) this.smiles += ':' + aam\n\n  if (needBrackets) this.smiles += ']'\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n}\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours\n    },\n    this\n  )\n  this.cis_trans.build()\n  this.dbonds = new Array(mol.bonds.size)\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0\n    }\n  })\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid)\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours\n      const neiEnd = this.atoms[bond.end].neighbours\n      let aromFailBeg = true\n      let aromFailEnd = true\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false\n        }\n      })\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false\n        }\n      })\n\n      if (aromFailBeg || aromFailEnd) return\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n    }\n  })\n}\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx)\n  const subst = this.cis_trans.getSubstituents(bondIdx)\n  const parity = this.cis_trans.getParity(bondIdx)\n\n  const sidebonds = [-1, -1, -1, -1]\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin)\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin)\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end)\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end)\n\n  let n1 = 0\n  let n2 = 0\n  let n3 = 0\n  let n4 = 0\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3\n    n2 += n4\n  } else {\n    n1 += n4\n    n2 += n3\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration')\n\n  if (n1 === 0 && n2 === 0) return false\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2\n    }\n  }\n\n  return true\n}\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type)\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++\n      }\n    })\n    if (ntouched === this.touchedCistransbonds) break\n    this.touchedCistransbonds = ntouched\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1\n    else this.dbonds[idx].saved = 2\n  }\n\n  return this.dbonds[idx].saved\n}\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length)\n  let i, j\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical\n\n    if (radical === 0) continue // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ','\n    } else {\n      this.smiles += ' |'\n      this.comma = true\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:'\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:'\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:'\n\n    this.smiles += i\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true\n        this.smiles += ',' + j\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types'\nimport { SmiSerializerOptions } from './smi.types'\nimport { Smiles } from './smiles'\nimport { Struct } from 'domain/entities'\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false\n  }\n\n  private readonly options: SmiSerializerOptions\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.')\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types'\n\nimport { MolSerializer } from '../mol/molSerializer'\nimport { Serializer } from '../serializers.types'\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  deserialize(content: string): Array<SdfItem> {\n    let m: any\n    const result: Array<SdfItem> = []\n    const molSerializer = new MolSerializer()\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim() // TODO: normalize newline?\n      const end = chunk.indexOf('M  END')\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m)\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6))\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/)\n            if (m) {\n              const field = m[1]\n              const value = pc.split('\\n')[1].trim()\n              acc[field] = Number.isFinite(value) ? +value : value.toString() // eslint-disable-line\n            }\n            return acc\n          },\n          {} as StructAssociatedData\n        )\n\n        result.push({ struct, props })\n      }\n    }\n    return result\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer()\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct)\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`\n        res += `${item.props[prop]}\\n\\n`\n      })\n\n      return `${res}$$$$\\n`\n    }, '')\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket'\n}\n\nexport interface WithStruct {\n  struct: string\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType\n}\n\nexport interface WithSelection {\n  selected?: Array<number>\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence'\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>\n}\n\nexport interface CheckResult {\n  [key: string]: string\n}\n\nexport interface ConvertData extends WithStruct, WithOutputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition'\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear'\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string\n  imagoVersions: Array<string>\n  isAvailable: boolean\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined\n}\n\nexport type OutputFormatType = 'png' | 'svg'\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType\n  backgroundColor?: string\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions\n  ) => Promise<ConvertResult>\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions\n  ) => Promise<LayoutResult>\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions\n  ) => Promise<CleanResult>\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ) => Promise<AromatizeResult>\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ) => Promise<DearomatizeResult>\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateCipResult>\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions\n  ) => Promise<AutomapResult>\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions\n  ) => Promise<CheckResult>\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateResult>\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>\n  generateInchIKey: (struct: string) => Promise<string>\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions\n  ) => Promise<string>\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val)\n            else setTimeout(iterate, timeGap)\n          } catch (e) {\n            reject(e)\n          }\n        },\n        (err) => reject(err)\n      )\n    }\n    setTimeout(iterate, startTimeGap || 0)\n  })\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val])\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>\n) {\n  let requestUrl = url\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data)\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json'\n      },\n      headers\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin'\n  })\n\n  if (responseHandler) {\n    response = responseHandler(response)\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error)))\n    )\n  }\n\n  return response\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>\n  ) {\n    const body = Object.assign({}, data)\n    body.options = Object.assign(body.options || {}, defaultOptions, options)\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders\n      },\n      responseHandler\n    )\n  }\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string\n  private readonly defaultOptions: StructServiceOptions\n  private readonly customHeaders?: Record<string, string>\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>\n  ) {\n    this.apiPath = apiPath\n    this.defaultOptions = defaultOptions\n    this.customHeaders = customHeaders\n  }\n\n  generateInchIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi'\n      },\n      {}\n    )\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string\n    let imagoVersions: Array<string>\n    let isAvailable = false\n\n    try {\n      const response = await request('GET', this.apiPath + 'info')\n      indigoVersion = response.indigo_version\n      imagoVersions = response.imago_versions\n      isAvailable = true\n    } catch (e) {\n      indigoVersion = ''\n      imagoVersions = []\n      isAvailable = false\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable\n    }\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions\n  ): Promise<ConvertResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : ''\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream'\n      }\n    )\n    const status = request.bind(null, 'GET', this.apiPath + 'imago/uploads/:id')\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response\n            return response.state === 'SUCCESS'\n          },\n          500,\n          300\n        )\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }))\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png'\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )({ struct: data }, { 'render-output-format': outputFormat }, (response) =>\n      response.then((resp) => resp.text())\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { RemoteStructService } from './remoteStructService'\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string\n  mode: ServiceMode = 'remote'\n  customHeaders?: Record<string, string>\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath\n    this.customHeaders = customHeaders\n    const params = new URLSearchParams(document.location.search)\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/'\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\n\nexport class SupportedFormatProperties {\n  name: string\n  mime: ChemicalMimeType\n  extensions: string[]\n  supportsCoords?: boolean\n  options?: any\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any\n  ) {\n    this.name = name\n    this.mime = mime\n    this.extensions = extensions\n    this.supportsCoords = supportsCoords || false\n    this.options = options || {}\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\nimport { SupportedFormat } from './structFormatter.types'\nimport { SupportedFormatProperties } from './supportedFormatProperties'\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties\n}\n\nconst formatProperties: FormatPropertiesMap = {\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles']\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles']\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts']\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi'\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi']\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket'\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true\n  )\n}\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' }\n}\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format]\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format]\n}\n\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const ket = this.#ketSerializer.serialize(struct)\n    return ket\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class RxnFormatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\nimport { StructFormatter, SupportedFormat } from './structFormatter.types'\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { getPropertiesByFormat } from './formatProperties'\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions\n) => Promise<ConvertResult>\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions\n) => Promise<LayoutResult>\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n  #format: SupportedFormat\n  #options?: StructServiceOptions\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions\n  ) {\n    this.#structService = structService\n    this.#ketSerializer = ketSerializer\n    this.#format = format\n    this.#options = options\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format)\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(struct)\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime\n        },\n        { ...this.#options, ...formatProperties.options }\n      )\n\n      return convertResult.struct\n    } catch (error: any) {\n      let message\n      if (error.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`\n      } else {\n        message = `Convert error!\\n${error.message || error}`\n      }\n\n      throw new Error(message)\n    }\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    let promise: LayoutPromise | ConvertPromise\n\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat('ket').mime\n    }\n\n    const withCoords = getPropertiesByFormat(this.#format).supportsCoords\n    if (withCoords) {\n      promise = this.#structService.convert\n      data.struct = stringifiedStruct\n    } else {\n      promise = this.#structService.layout\n      data.struct = stringifiedStruct.trim()\n    }\n\n    try {\n      const result = await promise(data, this.#options)\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct)\n      if (!withCoords) {\n        parsedStruct.rescale()\n      }\n      return parsedStruct\n    } catch (error: any) {\n      if (error.message !== 'Server is not compatible') {\n        throw Error(`Convert error!\\n${error.message || error}`)\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${getPropertiesByFormat('smilesExt').name} and opening of ${\n              getPropertiesByFormat('smiles').name\n            }`\n          : getPropertiesByFormat(this.#format).name\n\n      throw Error(`${formatError} is not supported in standalone mode.`)\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat\n} from './structFormatter.types'\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions\n} from 'domain/serializers'\nimport { StructService, StructServiceOptions } from 'domain/services'\nimport { KetFormatter } from './ketFormatter'\nimport { RxnFormatter } from './rxnFormatter'\nimport { ServerFormatter } from './serverFormatter'\nimport { MolfileV2000Formatter } from './molfileV2000Formatter'\n\nexport class FormatterFactory {\n  #structService: StructService\n\n  constructor(structService: StructService) {\n    this.#structService = structService\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}]\n    }\n\n    const { reactionRelayout, badHeaderRecover, ...structServiceOptions } =\n      options\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {}\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover\n    }\n\n    return [molfileParseOptions, structServiceOptions]\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options)\n\n    let formatter: StructFormatter\n    switch (format) {\n      case 'ket':\n        formatter = new KetFormatter(new KetSerializer())\n        break\n\n      case 'rxn':\n        formatter = new RxnFormatter(new MolSerializer(molSerializerOptions))\n        break\n\n      case 'mol':\n        formatter = new MolfileV2000Formatter(\n          new MolSerializer(molSerializerOptions)\n        )\n        break\n\n      case 'cml':\n      case 'inChIAuxInfo':\n      case 'inChI':\n      case 'molV3000':\n      case 'smiles':\n      case 'rxnV3000':\n      case 'smilesExt':\n      case 'smarts':\n      case 'cdxml':\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions\n        )\n    }\n\n    return formatter\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SupportedFormat } from './structFormatter.types'\n\nexport function identifyStructFormat(\n  stringifiedStruct: string\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim()\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return 'ket'\n    }\n  } catch (er) {} // eslint-disable-line\n\n  if (sanitizedString.indexOf('$RXN') !== -1) {\n    return 'rxn'\n  }\n\n  if (sanitizedString.indexOf('V3000') !== -1) {\n    return 'molV3000'\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m)\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return 'mol'\n    }\n  }\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return 'cml'\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return 'inChI'\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1) {\n    // TODO: smiles regexp\n    return 'smiles'\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return 'cdxml'\n  }\n  // Molfile by default as Indigo does\n  return 'mol'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport Raphael from 'raphael'\nimport { Vec2 } from 'domain/entities'\n\n// TODO: refactor ugly prototype extensions to plain old functions\nRaphael.el.translateAbs = function (x, y) {\n  this.delta = this.delta || new Vec2()\n  this.delta.x += x - 0\n  this.delta.y += y - 0\n  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString())\n}\n\nRaphael.st.translateAbs = function (x, y) {\n  this.forEach((el) => {\n    el.translateAbs(x, y)\n  })\n}\n\nexport default Raphael\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  warnings = 'warnings',\n  data = 'data',\n  indices = 'indices'\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off'\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nclass Visel {\n  constructor(type) {\n    this.type = type\n    this.paths = []\n    this.boxes = []\n    this.boundingBox = null\n    this.exts = []\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path)\n    if (bb) {\n      this.boxes.push(bb)\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb)\n    }\n    if (ext) this.exts.push(ext)\n  }\n\n  clear() {\n    this.paths = []\n    this.boxes = []\n    this.exts = []\n    this.boundingBox = null\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected')\n    }\n    if (args.length === 1) {\n      const vector = args[0]\n      this.translate(vector.x, vector.y)\n    } else {\n      const x = args[0]\n      const y = args[1]\n      const delta = new Vec2(x, y)\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y)\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta)\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta)\n      }\n    }\n  }\n}\n\nexport default Visel\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport Visel from './visel'\n\nclass ReObject {\n  public visel: Visel\n  public hover = false\n  public hovering: any = null\n  public selected = false\n  public selectionPlate: any = null\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType)\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox\n    if (vbox === null) return null\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated())\n    }\n    return vbox.transform(Scale.scaled2obj, render.options)\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null // && !this.highlighting.removed;\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return\n          noredraw = !this.hovering[0].removed\n        } else {\n          noredraw = !this.hovering.removed\n        }\n      }\n      if (noredraw) {\n        this.hovering.show()\n      } else {\n        render.paper.setStart()\n        this.drawHover(render)\n        this.hovering = render.paper.setFinish()\n      }\n    } else if (this.hovering) {\n      this.hovering.hide()\n    }\n\n    this.hover = hover\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.')\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden')\n  }\n}\n\nexport default ReObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport assert from 'assert'\n\nfunction tfx(v) {\n  return parseFloat(v).toFixed(8)\n}\n\nfunction relBox(box) {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height\n  }\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n * @param p { Vec2 }\n * @param d { Vec2 }\n * @param bb { Box2Abs }\n */\nfunction shiftRayBox(p, d, bb) {\n  assert(!!p)\n  assert(!!d)\n  assert(!!bb)\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y)\n  ]\n\n  const r = b.map((v) => v.sub(p)) // b relative to p\n\n  d = d.normalized()\n\n  const rc = r.map((v) => Vec2.cross(v, d)) // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)) // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1\n  let nid = -1\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid\n  const id1 = rd[pid] > rd[nid] ? pid : nid\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  )\n}\nfunction calcCoordinates(aPoint, bPoint, lengthHyp) {\n  const obj: {\n    pos1: null | { x: number; y: number }\n    pos2: null | { x: number; y: number }\n  } = { pos1: null, pos2: null }\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y }\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x\n    const D = b * b - 4 * a * e\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 }\n      obj.pos2 = { x: 0, y: 0 }\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a)\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a)\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 }\n    obj.pos2 = { x: 0, y: 0 }\n    obj.pos1.y = c / oPos2.y\n    obj.pos2.y = c / oPos2.y\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x\n    obj.pos1.y += aPoint.y\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x\n    obj.pos2.y += aPoint.y\n  }\n  return obj\n}\n\nconst util = {\n  tfx,\n  relBox,\n  shiftRayBox,\n  calcCoordinates\n}\n\nexport default util\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrowMode, Vec2, RxnArrow } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport svgPath from 'svgpath'\nimport util from './util'\n\nconst tfx = util.tfx\n\nfunction rectangle(paper, pos, options) {\n  return paper.rect(\n    tfx(Math.min(pos[0].x, pos[1].x)),\n    tfx(Math.min(pos[0].y, pos[1].y)),\n    tfx(Math.abs(pos[1].x - pos[0].x)),\n    tfx(Math.abs(pos[1].y - pos[0].y))\n  )\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  paper,\n  { pos, height },\n  length,\n  angle,\n  options\n) {\n  const [a, b] = pos\n  const b0x = a.x + length\n  const [wOffset, hOffset] = [5, height || 8]\n\n  const path =\n    `M${tfx(a.x - wOffset)},${tfx(a.y)}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y + (!height && hOffset))}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y + (!height && hOffset))}Z`\n\n  const transformedPath = svgPath(path).rotate(angle, a.x, a.y).toString()\n\n  return transformedPath\n}\n\nfunction ellipse(paper, pos, options) {\n  const rad = Vec2.diff(pos[1], pos[0])\n  const rx = rad.x / 2\n  const ry = rad.y / 2\n  return paper.ellipse(pos[0].x + rx, pos[0].y + ry, Math.abs(rx), Math.abs(ry))\n}\n\nfunction polyline(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  for (let i = 1; i < pos.length; i++) path.push('L', pos[i].x, pos[i].y)\n  return paper.path(path)\n}\n\nfunction line(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  path.push('L', pos[1].x, pos[1].y)\n  return paper.path(path)\n}\n\nfunction arrow(paper, item, length, angle, options) {\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const arrowHeadLength = direction * 10\n  const arrowHeadWidth = direction * 5\n  const arrowHeadAttr = direction * 4\n\n  const b0x = a.x + arrowLength\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadWidth)},${tfx(a.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const triangleLength = direction * 10\n  const triangleWidth = direction * 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleWidth)},${tfx(a.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - width)},${tfx(a.y - length)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)},${tfx(a.y - width)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)}, ${tfx(a.y + width)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFilledBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n    `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowDashedOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n  const dashInterval = 3.5\n\n  const path = []\n\n  const b0x = a.x + arrowLength\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    } else {\n      path.push(`M${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n      `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFailed(paper, { pos: [a, b] }, arrowLength, arrowAngle, options) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n  const failSignWidth = 8\n\n  const b0x = a.x + arrowLength\n\n  const arrowCenter = b0x - (b0x - a.x) / 2\n\n  const path = []\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n      `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n      `L${tfx(b0x)},${tfx(a.y)}Z`\n  )\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y - failSignWidth)}`\n  )\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y + failSignWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(a.x)},${tfx(a.y)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // Arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 10\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction plus(paper, c, options) {\n  const s = options.scale / 5\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      tfx(c.x),\n      tfx(c.y),\n      tfx(c.x - s),\n      tfx(c.x + s),\n      tfx(c.y - s),\n      tfx(c.y + s)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingle(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleUp(paper, a, b2, b3, options, color = '#000') {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y)\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondSingleStereoBold(paper, a1, a2, a3, a4, options, color = '#000') {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y)\n    )\n    .attr(options.lineattr)\n  bond.attr({\n    stroke: color,\n    fill: color\n  })\n  return bond\n}\n\nfunction bondDoubleStereoBold(\n  paper,\n  sgBondPath,\n  b1,\n  b2,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color\n      })\n  ])\n}\n\nfunction bondSingleDown(paper, hb1, d, nlines, step, options, color = '#000') {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = ''\n  let p\n  let q\n  let r\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i)\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5))\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5))\n    path += makeStroke(p, q)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleEither(\n  paper,\n  hb1,\n  d,\n  nlines,\n  step,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y)\n  let r = a\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5))\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondDouble(paper, a1, a2, b1, b2, cisTrans, options) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingleOrDouble(paper, hb1, hb2, nSect, options) {\n  // eslint-disable-line max-statements, max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = options.bondSpace / 2\n\n  let path = ''\n  let pi\n  let pp = a\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect)\n    if (i & 1) {\n      path += makeStroke(pp, pi)\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp))\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp))\n    }\n    pp = pi\n  }\n  return paper.path(path).attr(options.lineattr)\n}\n\nfunction bondTriple(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const a2 = a.addScaled(n, options.bondSpace)\n  const b2 = b.addScaled(n, options.bondSpace)\n  const a3 = a.addScaled(n, -options.bondSpace)\n  const b3 = b.addScaled(n, -options.bondSpace)\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondAromatic(paper, paths, bondShift, options) {\n  const l1 = paper.path(paths[0]).attr(options.lineattr)\n  const l2 = paper.path(paths[1]).attr(options.lineattr)\n  if (bondShift !== undefined && bondShift !== null) {\n    ;(bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' })\n  }\n\n  return paper.set([l1, l2])\n}\n\nfunction bondAny(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n}\n\nfunction bondHydrogen(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    'stroke-dasharray': '.',\n    'stroke-linecap': 'square'\n  })\n}\n\nfunction bondDative(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n}\n\nfunction reactingCenter(paper, p, options) {\n  let pathdesc = ''\n  for (let i = 0; i < p.length / 2; ++i) {\n    pathdesc += makeStroke(p[2 * i], p[2 * i + 1])\n  }\n  return paper.path(pathdesc).attr(options.lineattr)\n}\n\nfunction topologyMark(paper, p, mark, options) {\n  const path = paper.text(p.x, p.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000'\n  })\n  const rbb = util.relBox(path.getBBox())\n  recenterText(path, rbb)\n  return path\n}\n\nfunction radicalCap(paper, p, options) {\n  const s = options.lineWidth * 0.9\n  const dw = s\n  const dh = 2 * s\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      tfx(p.x - dw),\n      tfx(p.y + dh),\n      tfx(p.x),\n      tfx(p.y),\n      tfx(p.x + dw),\n      tfx(p.y + dh)\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter'\n    })\n}\n\nfunction radicalBullet(paper, p, options) {\n  return paper.circle(tfx(p.x), tfx(p.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000'\n  })\n}\n\nfunction bracket(paper, d, n, c, bracketWidth, bracketHeight, options) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25\n  bracketHeight = bracketHeight || 1.0\n  const a0 = c.addScaled(n, -0.5 * bracketHeight)\n  const a1 = c.addScaled(n, 0.5 * bracketHeight)\n  const b0 = a0.addScaled(d, -bracketWidth)\n  const b1 = a1.addScaled(d, -bracketWidth)\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      tfx(b0.x),\n      tfx(b0.y),\n      tfx(a0.x),\n      tfx(a0.y),\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y)\n    )\n    .attr(options.sgroupBracketStyle)\n}\n\nfunction selectionRectangle(paper, p0, p1, options) {\n  return paper\n    .rect(\n      tfx(Math.min(p0.x, p1.x)),\n      tfx(Math.min(p0.y, p1.y)),\n      tfx(Math.abs(p1.x - p0.x)),\n      tfx(Math.abs(p1.y - p0.y))\n    )\n    .attr(options.lassoStyle)\n}\n\nfunction selectionPolygon(paper, r, options) {\n  const v = r[r.length - 1]\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y)\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y)\n  }\n  return paper.path(pstr).attr(options.lassoStyle)\n}\n\nfunction selectionLine(paper, p0, p1, options) {\n  return paper.path(makeStroke(p0, p1)).attr(options.lassoStyle)\n}\n\nfunction makeStroke(a, b) {\n  return 'M' + tfx(a.x) + ',' + tfx(a.y) + 'L' + tfx(b.x) + ',' + tfx(b.y) + '\t'\n}\n\nfunction dashedPath(p0, p1, dash) {\n  let t0 = 0\n  const t1 = Vec2.dist(p0, p1)\n  const d = Vec2.diff(p1, p0).normalized()\n  let black = true\n  let path = ''\n  let i = 0\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length]\n    const t2 = t0 + Math.min(len, t1 - t0)\n    if (black) {\n      path +=\n        'M ' +\n        p0.addScaled(d, t0).coordStr() +\n        ' L ' +\n        p0.addScaled(d, t2).coordStr()\n    }\n    t0 += len\n    black = !black\n    i++\n  }\n  return path\n}\n\nfunction aromaticBondPaths(a2, a3, b2, b3, mask, dash) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2)\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3)\n\n  return [l1, l2]\n}\n\nfunction recenterText(path, rbb) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = rbb.height * 0.16\n    path.translateAbs(0, gap)\n    rbb.y += gap\n  }\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  topologyMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { ElementColor, Elements } from 'domain/constants'\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType\n} from './generalEnumTypes'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ninterface ElemAttr {\n  text: string\n  path: any\n  rbb: { x: number; y: number; width: number; height: number }\n}\n\nconst StereoLabelMinOpacity = 0.3\n\nenum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'on'\n}\n\nclass ReAtom extends ReObject {\n  a: Atom\n  showLabel: boolean\n  hydrogenOnTheLeft: boolean\n  color: string\n  component: number\n  label?: ElemAttr\n\n  constructor(atom: Atom) {\n    super('atom')\n    this.a = atom // TODO rename a to item\n    this.showLabel = false\n\n    this.hydrogenOnTheLeft = false\n\n    this.color = '#000000'\n    this.component = -1\n  }\n\n  static isSelectable(): true {\n    return true\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render)\n    }\n    return new Box2Abs(this.a.pp, this.a.pp)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const paper = render.paper\n    const options = render.options\n    const ps = Scale.obj2scaled(this.a.pp, options)\n    const atom = this.a\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n    return paper\n      .circle(ps.x, ps.y, options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any) {\n    const atom = this.a\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n    return paper\n      .circle(ps.x, ps.y, styles.atomSelectionPlateRadius)\n      .attr(styles.selectionStyle)\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const atom = restruct.molecule.atoms.get(aid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    const render = restruct.render\n    const ps = Scale.obj2scaled(this.a.pp, render.options)\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      if (FunctionalGroup.isFirstAtomInFunctionalGroup(sgroups, aid)) {\n        let sgroupName\n        for (const sg of sgroups.values()) {\n          if (aid === sg.atoms[0]) sgroupName = sg.data.name\n        }\n        const path = render.paper.text(ps.x, ps.y, sgroupName).attr({\n          'font-weight': 700,\n          'font-size': 14\n        })\n        restruct.addReObjectPath(LayerMap.data, this.visel, path, ps, true)\n      }\n      return\n    }\n\n    this.hydrogenOnTheLeft = setHydrogenPos(restruct.molecule, this)\n    this.showLabel = isLabelVisible(restruct, render.options, this)\n    this.color = 'black' // reset colour\n\n    let delta\n    let rightMargin\n    let leftMargin\n    let implh\n    let isHydrogen\n    let label\n    let index: any = null\n\n    if (this.showLabel) {\n      label = buildLabel(this, render.paper, ps, options)\n      delta = 0.5 * options.lineWidth\n      rightMargin =\n        (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      leftMargin =\n        (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      implh = Math.floor(this.a.implicitH)\n      isHydrogen = label.text === 'H'\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true)\n    }\n    if (options.showAtomIds) {\n      index = {}\n      index.text = aid.toString()\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6)\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6)\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070'\n      })\n      index.rbb = util.relBox(index.path.getBBox())\n      draw.recenterText(index.path, index.rbb)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps)\n    }\n    this.setHover(this.hover, render)\n\n    if (this.showLabel && !this.a.pseudo) {\n      let hydroIndex: any = null\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin)\n        rightMargin += hydroIndex.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render)\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.isotope !== 0) {\n        const isotope = showIsotope(this, render, leftMargin)\n        leftMargin -= isotope.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true\n        )\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(options.showHydrogenLabels, this)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin\n        })\n        const hydrogen = data.hydrogen\n        hydroIndex = data.hydroIndex\n        rightMargin = data.rightMargin\n        leftMargin = data.leftMargin\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true\n        )\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true\n          )\n        }\n      }\n\n      if (this.a.charge !== 0 && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin)\n        rightMargin += charge.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin)\n        rightMargin += valence.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin)\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true\n        )\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height\n        )\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    if (this.a.attpnt) {\n      const lsb = bisectLargestSector(this, restruct.molecule)\n      showAttpnt(this, render, lsb, restruct.addReObjectPath.bind(restruct))\n    }\n\n    const stereoLabel = this.a.stereoLabel // Enhanced Stereo\n    const aamText = getAamText(this)\n    const queryAttrsText = !this.a.pseudo ? getQueryAttrsText(this) : ''\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment)\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId)\n\n    const text =\n      (shouldDisplayStereoLabel(\n        stereoLabel,\n        options.stereoLabelStyle,\n        fragment?.enhancedStereoFlag\n      )\n        ? `${stereoLabel}\\n`\n        : '') +\n      (queryAttrsText.length > 0 ? `${queryAttrsText}\\n` : '') +\n      (aamText.length > 0 ? `.${aamText}.` : '')\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label)\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: options.atomColoring && elem ? ElementColor[this.a.label] : '#000'\n      })\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill', color)\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill-opacity', opacity)\n      }\n      const aamBox = util.relBox(aamPath.getBBox())\n      draw.recenterText(aamPath, aamBox)\n      const visel = this.visel\n      let t = 3\n      let dir = bisectLargestSector(this, restruct.molecule)\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)))\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox))\n      dir = dir.scaled(8 + t)\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y)\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true)\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' }\n\n      const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style)\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path)\n    }\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000'\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters\n    case StereoLabel.Or:\n      return options.colorOfOrCenters\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters\n    default:\n      return '#000'\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '')\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity)\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  flag: StereoFlag | undefined\n): boolean {\n  if (!stereoLabel) {\n    return false\n  }\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  switch (labelStyle) {\n    // Off\n    case StereLabelStyleType.Off:\n      return false\n    // On\n    case StereLabelStyleType.On:\n      return true\n    // Classic\n    case StereLabelStyleType.Classic:\n      return !!(flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or)\n    // IUPAC\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      )\n    default:\n      return true\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom) {\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal)\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    atom.a.alias ||\n    atom.a.isotope !== 0 ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== 0 ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c'\n\n  if (shouldBeVisible) return true\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0]\n    const nei2 = atom.a.neighbors[1]\n    const hb1 = restruct.molecule.halfBonds.get(nei1)\n    const hb2 = restruct.molecule.halfBonds.get(nei2)\n    const bond1 = restruct.bonds.get(hb1.bid)\n    const bond2 = restruct.bonds.get(hb2.bid)\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction displayHydrogen(hydrogenLabels, atom) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label.text.toLowerCase() !== 'c'))\n  )\n}\n\nfunction setHydrogenPos(struct, atom) {\n  // check where should the hydrogen be put on the left of the label\n  if (atom.a.neighbors.length === 0) {\n    const element = Elements.get(atom.a.label)\n    return !element || Boolean(element.leftH)\n  }\n\n  let yl = 1\n  let yr = 1\n  let nl = 0\n  let nr = 0\n\n  atom.a.neighbors.forEach((nei) => {\n    const d = struct.halfBonds.get(nei).dir\n\n    if (d.x <= 0) {\n      yl = Math.min(yl, Math.abs(d.y))\n      nl++\n    } else {\n      yr = Math.min(yr, Math.abs(d.y))\n      nr++\n    }\n  })\n\n  return yl < 0.51 || yr < 0.51 ? yr < yl : nr > nl\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any\n): ElemAttr {\n  // eslint-disable-line max-statements\n  let label: any = {}\n  label.text = getLabelText(atom.a)\n\n  if (label.text === '') label = 'R#' // for structures that missed 'M  RGP' tag in molfile\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text)\n    if (options.atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000'\n    }\n  }\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : ''\n  })\n\n  label.rbb = util.relBox(label.path.getBBox())\n  draw.recenterText(label.path, label.rbb)\n\n  if (atom.a.atomList !== null) {\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n        2,\n      0\n    )\n  }\n\n  atom.label = label\n  return label\n}\n\nfunction getLabelText(atom) {\n  if (atom.atomList !== null) return atom.atomList.label()\n\n  if (atom.pseudo) return atom.pseudo\n\n  if (atom.alias) return atom.alias\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = ''\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString()\n      }\n    }\n\n    return text\n  }\n\n  return atom.label\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydroIndex: any = {}\n  hydroIndex.text = (implh + 1).toString()\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const paper: any = render.paper\n  const radical: any = {}\n  let hshift\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('fill', atom.color)\n      break\n    case 2:\n      radical.path = paper.set()\n      radical.path.push(draw.radicalBullet(paper, ps, options))\n      radical.path.attr('fill', atom.color)\n      break\n    case 3:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('stroke', atom.color)\n      break\n    default:\n      break\n  }\n  radical.rbb = util.relBox(radical.path.getBBox())\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height)\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift)\n  return radical\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const isotope: any = {}\n  isotope.text = atom.a.isotope.toString()\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  isotope.rbb = util.relBox(isotope.path.getBBox())\n  draw.recenterText(isotope.path, isotope.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return isotope\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const charge: any = {}\n  charge.text = ''\n  const absCharge = Math.abs(atom.a.charge)\n  if (absCharge !== 1) charge.text = absCharge.toString()\n  if (atom.a.charge < 0) charge.text += '\\u2013'\n  else charge.text += '+'\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  charge.rbb = util.relBox(charge.path.getBBox())\n  draw.recenterText(charge.path, charge.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return charge\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV'\n  }\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const valence: any = {}\n  valence.text = mapValence[atom.a.explicitValence]\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString())\n  }\n  valence.text = '(' + valence.text + ')'\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  valence.rbb = util.relBox(valence.path.getBBox())\n  draw.recenterText(valence.path, valence.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return valence\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any\n    hydroIndex: number\n    rightMargin: number\n    leftMargin: number\n  }\n): {\n  hydrogen: ElemAttr\n  hydroIndex: ElemAttr\n  rightMargin: number\n  leftMargin: number\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex\n  const hydrogenLeft = atom.hydrogenOnTheLeft\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydrogen = data.hydrogen\n  hydrogen.text = 'H'\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color\n  })\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox())\n  draw.recenterText(hydrogen.path, hydrogen.rbb)\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0\n    )\n    data.rightMargin += hydrogen.rbb.width + delta\n  }\n  if (implh > 1) {\n    hydroIndex = {}\n    hydroIndex.text = implh.toString()\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color\n    })\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.rightMargin += hydroIndex.rbb.width + delta\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.leftMargin -= hydroIndex.rbb.width + delta\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0\n    )\n    data.leftMargin -= hydrogen.rbb.width + delta\n  }\n  return Object.assign(data, { hydrogen, hydroIndex })\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const delta = 0.5 * render.options.lineWidth\n  const tfx = util.tfx\n  const warning: any = {}\n  const y = ps.y + atom.label.rbb.height / 2 + delta\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y)\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' })\n  warning.rbb = util.relBox(warning.path.getBBox())\n  return warning\n}\n\nfunction showAttpnt(atom, render, lsb, addReObjectPath) {\n  // eslint-disable-line max-statements\n  const asterisk = '∗'\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const tfx = util.tfx\n  let i, j\n  for (i = 0; i < 4; ++i) {\n    let attpntText = ''\n    if (atom.a.attpnt & (1 << i)) {\n      if (attpntText.length > 0) attpntText += ' '\n      attpntText += asterisk\n      for (j = 0; j < (i === 0 ? 0 : i + 1); ++j) attpntText += \"'\"\n      let pos0 = new Vec2(ps)\n      let pos1 = ps.addScaled(lsb, 0.7 * options.scale)\n\n      const attpntPath1 = render.paper.text(pos1.x, pos1.y, attpntText).attr({\n        font: options.font,\n        'font-size': options.fontsz,\n        fill: atom.color\n      })\n      const attpntRbb = util.relBox(attpntPath1.getBBox())\n      draw.recenterText(attpntPath1, attpntRbb)\n\n      const lsbn = lsb.negated()\n      /* eslint-disable no-mixed-operators */\n      pos1 = pos1.addScaled(\n        lsbn,\n        util.shiftRayBox(pos1, lsbn, Box2Abs.fromRelBox(attpntRbb)) +\n          options.lineWidth / 2\n      )\n      /* eslint-enable no-mixed-operators */\n      pos0 = shiftBondEnd(atom, pos0, lsb, options.lineWidth)\n      const n = lsb.rotateSC(1, 0)\n      const arrowLeft = pos1\n        .addScaled(n, 0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const arrowRight = pos1\n        .addScaled(n, -0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const attpntPath = render.paper.set()\n      attpntPath.push(\n        attpntPath1,\n        render.paper\n          .path(\n            'M{0},{1}L{2},{3}M{4},{5}L{2},{3}L{6},{7}',\n            tfx(pos0.x),\n            tfx(pos0.y),\n            tfx(pos1.x),\n            tfx(pos1.y),\n            tfx(arrowLeft.x),\n            tfx(arrowLeft.y),\n            tfx(arrowRight.x),\n            tfx(arrowRight.y)\n          )\n          .attr(render.options.lineattr)\n          .attr({ 'stroke-width': options.lineWidth / 2 })\n      )\n      addReObjectPath(LayerMap.indices, atom.visel, attpntPath, ps)\n      lsb = lsb.rotate(Math.PI / 6)\n    }\n  }\n}\n\n// function getStereoLabelText(atom, aid, render) {\n// \tconst struct = render.ctab.molecule;\n// \tconst frag = struct.frags.get(atom.a.fragment);\n// \tconst stereo = frag.getStereoAtomMark(aid);\n// \tif (!stereo.type) return null;\n//\n// \treturn stereo.type + (stereo.number || '');\n// }\n\nfunction getAamText(atom) {\n  let aamText = ''\n  if (atom.a.aam > 0) aamText += atom.a.aam\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.invRet === 1) aamText += 'Inv'\n    else if (atom.a.invRet === 2) aamText += 'Ret'\n    else throw new Error('Invalid value for the invert/retain flag')\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext'\n    else throw new Error('Invalid value for the exact change flag')\n  }\n  return aamText\n}\n\nfunction getQueryAttrsText(atom) {\n  let queryAttrsText = ''\n  if (atom.a.ringBondCount !== 0) {\n    if (atom.a.ringBondCount > 0) {\n      queryAttrsText += 'rb' + atom.a.ringBondCount.toString()\n    } else if (atom.a.ringBondCount === -1) queryAttrsText += 'rb0'\n    else if (atom.a.ringBondCount === -2) queryAttrsText += 'rb*'\n    else throw new Error('Ring bond count invalid')\n  }\n  if (atom.a.substitutionCount !== 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.substitutionCount > 0) {\n      queryAttrsText += 's' + atom.a.substitutionCount.toString()\n    } else if (atom.a.substitutionCount === -1) queryAttrsText += 's0'\n    else if (atom.a.substitutionCount === -2) queryAttrsText += 's*'\n    else throw new Error('Substitution count invalid')\n  }\n  if (atom.a.unsaturatedAtom > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.unsaturatedAtom === 1) queryAttrsText += 'u'\n    else throw new Error('Unsaturated atom invalid value')\n  }\n  if (atom.a.hCount > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    queryAttrsText += 'H' + (atom.a.hCount - 1).toString()\n  }\n  return queryAttrsText\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y)\n  rbb.x += x\n  rbb.y += y\n}\n\nfunction bisectLargestSector(atom: ReAtom, struct: Struct) {\n  let angles: Array<number> = []\n  atom.a.neighbors.forEach((hbid) => {\n    const hb = struct.halfBonds.get(hbid)\n    hb && angles.push(hb.ang)\n  })\n  angles = angles.sort((a, b) => a - b)\n  const da: Array<number> = []\n  for (let i = 0; i < angles.length - 1; ++i) {\n    da.push(angles[(i + 1) % angles.length] - angles[i])\n  }\n  da.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI)\n  let daMax = 0\n  let ang = -Math.PI / 2\n  for (let i = 0; i < angles.length; ++i) {\n    if (da[i] > daMax) {\n      daMax = da[i]\n      ang = angles[i] + da[i] / 2\n    }\n  }\n  return new Vec2(Math.cos(ang), Math.sin(ang))\n}\n\nfunction shiftBondEnd(atom, pos0, dir, margin) {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nexport default ReAtom\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { LayerMap, StereoColoringType } from './generalEnumTypes'\nimport ReAtom, { getColorFromStereoLabel } from './reatom'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReBond extends ReObject {\n  b: Bond\n  doubleBondShift: number\n  path: any\n  neihbid1 = -1\n  neihbid2 = -1\n  boldStereo?: boolean\n  rbb?: { x: number; y: number; width: number; height: number }\n\n  constructor(bond: Bond) {\n    super('bond')\n    this.b = bond // TODO rename b to item\n    this.doubleBondShift = 0\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const options = render.options\n    bondRecalc(this, render.ctab, options)\n    const bond = this.b\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return render.paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any) {\n    bondRecalc(this, restruct, options)\n    const bond = this.b\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const struct = restruct.molecule\n    const bond = restruct.molecule.bonds.get(bid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      return\n    }\n\n    const paper = render.paper\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null\n\n    checkStereoBold(bid, this, restruct)\n    bondRecalc(this, restruct, options)\n    setDoubleBondShift(this, struct)\n    if (!hb1 || !hb2) return\n    this.path = getBondPath(restruct, this, hb1, hb2)\n    this.rbb = util.relBox(this.path.getBBox())\n    restruct.addReObjectPath(LayerMap.data, this.visel, this.path, null, true)\n    const reactingCenter: any = {}\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2)\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true\n      )\n    }\n    const topology: any = {}\n    topology.path = getTopologyMark(render, this, hb1, hb2)\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true\n      )\n    }\n    this.setHover(this.hover, render)\n\n    let ipath = null\n    const bondIdxOff = options.subFontSize * 0.6\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round'\n      }\n\n      const c = Scale.obj2scaled(this.b.center, restruct.render.options)\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2)\n      highlightPath.attr(style)\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true\n      )\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y }\n  const end = { x: hb2.p.x, y: hb2.p.y }\n\n  const paper = restruct.render.paper\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`\n\n  const path = paper.path(pathString)\n\n  return path\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid)\n\n    if (!hb || hb.bid === bid0) return false\n\n    const neibond = restruct.bonds.get(hb.bid)\n\n    if (!neibond) return false\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      )\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    )\n  })\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    if (!atom) return -1\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0]\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1]\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  let path = null\n  const render = restruct.render\n  const struct = restruct.molecule\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel\n\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct)\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n          } else path = getBondSingleUpPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(render, hb1, hb2, bond, struct)\n          break\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            getStereoBondColor(render.options, bond, struct)\n          )\n          break\n      }\n      break\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct)\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB\n        )\n      } else path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic)\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options)\n        : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      path = getSingleOrDoublePath(render, hb1, hb2)\n      break\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.ANY:\n      path = draw.bondAny(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      path = draw.bondHydrogen(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(render.paper, hb1, hb2, render.options)\n      break\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported')\n  }\n  return path\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const options = render.options\n  const bsp = 0.7 * options.stereoBond\n  let b2 = b.addScaled(n, bsp)\n  let b3 = b.addScaled(n, -bsp)\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct\n    )\n    b2 = coords[0]\n    b3 = coords[1]\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct\n): string {\n  const defaultColor = '#000'\n\n  if (bond.b.stereo === 0) return defaultColor\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel\n\n  let stereoLabel = ''\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const options = render.options\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct\n  )\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct\n  )\n  const a1 = coords1[0]\n  const a2 = coords1[1]\n  const a3 = coords2[0]\n  const a4 = coords2[1]\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = bond.doubleBondShift\n  const bsp = 1.5 * render.options.stereoBond\n  let b1 = a.addScaled(n, bsp * shift)\n  let b2 = b.addScaled(n, bsp * shift)\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    getStereoBondColor(render.options, bond, struct)\n  )\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0\n  return sin / (1 - cos)\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid)\n  const cos = Vec2.dot(hb.dir, neihb!.dir)\n  const sin = Vec2.cross(hb.dir, neihb!.dir)\n  const cosHalf = Math.sqrt(0.5 * (1 - cos))\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos))\n  )\n\n  const denomAdd = 0.3\n  const scale = 0.7\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd))\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd)\n  )\n  return sin > 0 ? [a1, a2] : [a2, a1]\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length() + 0.2\n  d = d.normalized()\n  const interval = 1.2 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 1)\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length()\n  d = d.normalized()\n  const interval = 0.6 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 0.5)\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS\n\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = cisTrans ? 0 : bond.doubleBondShift\n\n  const options = render.options\n  const bsp = options.bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n\n  let a1 = a.addScaled(n, s1)\n  let b1 = b.addScaled(n, s1)\n  let a2 = a.addScaled(n, s2)\n  let b2 = b.addScaled(n, s2)\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n\n  return draw.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options)\n}\n\nfunction getSingleOrDoublePath(render: Render, hb1: HalfBond, hb2: HalfBond) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed())\n  if (!(nSect & 1)) nSect += 1\n  return draw.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options)\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125]\n  let mark: number | null = null\n  let dash: number[] | null = null\n  const options = render.options\n  const bondShift = bond.doubleBondShift\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mark = bondShift > 0 ? 1 : 2\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mark = 3\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mark,\n    dash\n  )\n  return draw.bondAromatic(render.paper, paths, bondShift, options)\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number | null,\n  dash: number[] | null\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n  let a2 = a.addScaled(n, s1)\n  let b2 = b.addScaled(n, s1)\n  let a3 = a.addScaled(n, s2)\n  let b3 = b.addScaled(n, s2)\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash)\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  const n = d.rotateSC(1, 0)\n\n  const p: Array<Vec2> = []\n\n  const lw = render.options.lineWidth\n  const bs = render.options.bondSpace / 2\n  const alongIntRc = lw // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs // half size along for CENTER\n  const acrossInt = 1.5 * bs // half interval across for CENTER\n  const acrossSz = 3.0 * bs // half size across for all\n  const tiltTan = 0.2 // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt))\n      break\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      break\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    default:\n      return null\n  }\n  return draw.reactingCenter(render.paper, p, render.options)\n}\n\nfunction getTopologyMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const options = render.options\n  let mark: string | null = null\n\n  if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) mark = 'rng'\n  else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) mark = 'chn'\n  else return null\n\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  let n = d.rotateSC(1, 0)\n  let fixed = options.lineWidth\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift)\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace)\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)))\n\n  return draw.topologyMark(render.paper, p, mark, options)\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff)\n  const ipath = paper.text(pb.x, pb.y, bid.toString())\n  const irbb = util.relBox(ipath.getBBox())\n  draw.recenterText(ipath, irbb)\n  return ipath\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1\n  const hb2 = bond.b.hb2\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n    return\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop\n  const loop2 = struct.halfBonds.get(hb2)!.loop\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds\n    const d2 = struct.loops.get(loop2)!.dblBonds\n    const n1 = struct.loops.get(loop1)!.hbs.length\n    const n2 = struct.loops.get(loop2)!.hbs.length\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2)\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n  }\n}\n\nfunction bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n  const render = restruct.render\n  const atom1 = restruct.atoms.get(bond.b.begin)\n  const atom2 = restruct.atoms.get(bond.b.end)\n\n  if (\n    !atom1 ||\n    !atom2 ||\n    bond.b.hb1 === undefined ||\n    bond.b.hb2 === undefined\n  ) {\n    return\n  }\n\n  const p1 = Scale.obj2scaled(atom1.a.pp, render.options)\n  const p2 = Scale.obj2scaled(atom2.a.pp, render.options)\n  const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n  const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n  if (!hb1?.dir || !hb2?.dir) return\n\n  hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth)\n  hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth)\n  bond.b.center = Vec2.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5)\n  bond.b.len = Vec2.dist(p1, p2)\n  bond.b.sb = options.lineWidth * 5\n  /* eslint-disable no-mixed-operators */\n  bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2)\n  /* eslint-enable no-mixed-operators */\n  bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI\n}\n\nfunction shiftBondEnd(\n  atom: ReAtom,\n  pos0: Vec2,\n  dir: Vec2,\n  margin: number\n): Vec2 {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1\n  if (n2 * d1 > n1 * d2) return -1\n  if (n2 * d1 < n1 * d2) return 1\n  if (n2 > n1) return -1\n  return 1\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1)\n  const hb2 = struct.halfBonds.get(bond.b.hb2)\n  if (!hb1 || !hb2) return 0\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0)\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0)\n  if (nLeft > nRight) return -1\n  if (nLeft < nRight) return 1\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1) return 1\n  return 0\n}\n\nexport default ReBond\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any\n\n  constructor() {\n    super('enhancedFlag')\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox())\n    const sz = box.p1.sub(box.p0)\n    const p0 = box.p0.sub(render.options.offset)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render\n    const fragment = restruct.molecule.frags.get(fragmentId)\n    if (!fragment?.enhancedStereoFlag) return\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!\n\n    const paper = render.paper\n    const ps = Scale.obj2scaled(position, options)\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel\n    }\n\n    if (options.showStereoFlags) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : ''\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000'\n        })\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true\n    )\n  }\n}\n\nexport default ReEnhancedFlag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag')\n    this.item = frag\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid\n    )\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment\n\n      return firstFrag === fid && secondFrag === fid\n    })\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        bba = bba.extend(ext, ext)\n      } else {\n        if (!render) render = global._ui_editor.render // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba\n    })\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render)\n\n    if (bb) {\n      const p0 = Scale.obj2scaled(new Vec2(bb.p0.x, bb.p0.y), render.options)\n      const p1 = Scale.obj2scaled(new Vec2(bb.p1.x, bb.p1.y), render.options)\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs)\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(render) {\n    // eslint-disable-line no-unused-vars\n    return null // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this)\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render')\n      return\n    }\n\n    fid = parseInt(fid, 10)\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render)\n    })\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render)\n      }\n    })\n  }\n}\nexport default ReFrag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3)\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup')\n    this.labelBox = null\n    this.item = rgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  getAtoms(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  getBonds(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  calcBBox(render) {\n    let ret = null\n    this.item.frags.forEach((fid) => {\n      const bbf = render.ctab.frags.get(fid).calcBBox(render.ctab, fid, render)\n      if (bbf) ret = ret ? Box2Abs.union(ret, bbf) : bbf\n    })\n\n    if (ret) ret = ret.extend(BORDER_EXT, BORDER_EXT)\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    const bb = this.calcBBox(render)\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools'\n      )\n      return {}\n    }\n\n    const ret = { data: [] }\n    const p0 = Scale.obj2scaled(bb.p0, options)\n    const p1 = Scale.obj2scaled(bb.p1, options)\n    const brackets = render.paper.set()\n\n    rGroupdrawBrackets(brackets, render, bb) // eslint-disable-line new-cap\n\n    ret.data.push(brackets)\n    const key = render.ctab.rgroups.keyOf(this)\n    const labelSet = render.paper.set()\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black'\n      })\n\n    const labelBox = util.relBox(label.getBBox())\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0)\n\n    labelSet.push(label)\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black'\n    }\n\n    const logic = [rLogicToString(key, this.item)]\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle)\n      const logicBox = util.relBox(logicPath.getBBox())\n      shift += logicBox.height / 2\n      logicPath.translateAbs(-logicBox.width / 2 - 6 * options.lineWidth, shift)\n      shift += logicBox.height / 2 + options.lineWidth / 2\n      ret.data.push(logicPath)\n      labelSet.push(logicPath)\n    }\n\n    ret.data.push(label)\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.scaled2obj,\n      render.options\n    )\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT) // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null\n\n    const p0 = Scale.obj2scaled(bb.p0, render.options)\n    const p1 = Scale.obj2scaled(bb.p1, render.options)\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs)\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this)\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render'\n      )\n      return null\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */\n    ) // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render)\n    })\n\n    return ret\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options)\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true\n        )\n      }\n    })\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.obj2scaled(d || new Vec2(1, 0), render.options)\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n  const bracketHeight = bb.p1.y - bb.p0.y\n  const cy = 0.5 * (bb.p1.y + bb.p0.y)\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  return set.push(leftBracket, rightBracket)\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : ''\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=')\n\n  let range = null\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range\n  } else range = '>0'\n\n  const restH = rLogic.resth ? ' (RestH)' : ''\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : ''\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`\n}\n\nexport default ReRGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport Raphael from '../raphael-ext'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ntype Arrow = {\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n  height?: number\n}\n\ntype ArrowParams = {\n  length: number\n  angle: number\n}\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow')\n    this.item = arrow\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const pos = item.pos\n\n    let dist: number = calculateDistanceToLine(pos, point)\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints()\n      dist = Math.min(\n        dist,\n        calculateDistanceToLine([startPoint, middlePoint], point),\n        calculateDistanceToLine([middlePoint, endPoint], point)\n      )\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection')\n\n    return render.paper.path(path)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    const item = this.item\n    const [a, b] = item.pos\n    const height = item.height\n    refPoints.push(new Vec2(a.x, a.y))\n    refPoints.push(new Vec2(b.x, b.y))\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b)\n      refPoints.push(middlePoint)\n    }\n    return refPoints\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render\n    const options = restruct.render.options\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle)\n    )\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  generatePath(render: Render, options, type) {\n    let path\n    const item = this.item\n    const height = RxnArrow.isElliptical(item) && item.height! * options.scale\n    const pos = item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y\n    )\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n    }\n\n    return path\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1)\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180\n\n    return { length, angle }\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow')\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+util.tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x)\n    const minY = Math.min(a.y, b.y)\n    const x = minX + Math.abs(a.x - b.x) / 2\n    const y = minY + Math.abs(a.y - b.y) / 2\n    return new Vec2(x, y)\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y)\n  const lengthHyp = Math.hypot(length / 2, height)\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  }\n  return new Vec2(a.x, a.y)\n}\n\nexport default ReRxnArrow\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus')\n    this.item = plus\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const p = Scale.obj2scaled(this.item.pp, render.options)\n    const s = render.options.scale\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8)\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render\n    const centre = Scale.obj2scaled(this.item.pp, options)\n    const path = draw.plus(render.paper, centre, options)\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nexport default ReRxnPlus\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData')\n    this.sgroup = sgroup\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea\n    const p0 = Scale.obj2scaled(box.p0, render.options)\n    const sz = Scale.obj2scaled(box.p1, render.options).sub(p0)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n}\n\nexport default ReDataSGroupData\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, FunctionalGroup, Pile, SGroup, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReSGroup extends ReObject {\n  constructor(sgroup) {\n    super('sgroup')\n    this.item = sgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  draw(remol, sgroup) {\n    this.render = remol.render\n    let set = this.render.paper.set()\n    const atomSet = new Pile(sgroup.atoms)\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet)\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds)\n    const bracketBox = sgroup.bracketBox\n    const d = sgroup.bracketDir\n    sgroup.areas = [bracketBox]\n    const functionalGroups = remol.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      sgroup.firstSgroupAtom = remol.molecule.atoms.get(sgroup.atoms[0])\n      sgroup.functionalGroup = true\n    } else {\n      switch (sgroup.type) {\n        case 'MUL':\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.mul\n          )\n          break\n        case 'SRU': {\n          let connectivity = sgroup.data.connectivity || 'eu'\n          if (connectivity === 'ht') connectivity = ''\n          const subscript = sgroup.data.subscript || 'n'\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            subscript,\n            connectivity\n          )\n          break\n        }\n        case 'SUP': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.name,\n            null,\n            { 'font-style': 'italic' }\n          )\n          break\n        }\n        case 'GEN': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d\n          )\n          break\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup)\n          break\n        }\n        default:\n          break\n      }\n    }\n    return set\n  }\n\n  makeSelectionPlate(restruct, paper, options) {\n    const sgroup = this.item\n    const { startX, startY, size } = getHighlighPathInfo(sgroup, options)\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      return paper.rect(startX, startY, size, size).attr(options.selectionStyle)\n    }\n  }\n\n  drawHover(render) {\n    // eslint-disable-line max-statements\n    const options = render.options\n    const paper = render.paper\n    const sGroupItem = this.item\n    const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, options)\n\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    const set = paper.set()\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(\n        sGroupItem.id,\n        functionalGroups\n      )\n    ) {\n      const { startX, startY, size } = getHighlighPathInfo(sGroupItem, options)\n      sGroupItem.hovering = paper\n        .rect(startX, startY, size, size)\n        .attr(options.hoverStyle)\n    } else {\n      sGroupItem.hovering = paper\n        .path(\n          'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n          tfx(a0.x),\n          tfx(a0.y),\n          tfx(a1.x),\n          tfx(a1.y),\n          tfx(b1.x),\n          tfx(b1.y),\n          tfx(b0.x),\n          tfx(b0.y)\n        )\n        .attr(options.hoverStyle)\n    }\n    set.push(sGroupItem.hovering)\n\n    SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n      set.push(render.ctab.atoms.get(aid).makeHoverPlate(render))\n    }, this)\n    SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n      set.push(render.ctab.bonds.get(bid).makeHoverPlate(render))\n    }, this)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set)\n  }\n\n  show(restruct) {\n    const render = restruct.render\n    const sgroup = this.item\n    if (sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab\n      const path = this.draw(remol, sgroup)\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n      this.setHover(this.hover, render) // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets(\n  set,\n  render,\n  sg,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute\n) {\n  // eslint-disable-line max-params\n  const brackets = getBracketParameters(\n    render.ctab.molecule,\n    crossBonds,\n    atomSet,\n    bracketBox,\n    d,\n    render,\n    sg.id\n  )\n  let ir = -1\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const path = draw.bracket(\n      render.paper,\n      Scale.obj2scaled(bracket.d, render.options),\n      Scale.obj2scaled(bracket.n, render.options),\n      Scale.obj2scaled(bracket.c, render.options),\n      bracket.w,\n      bracket.h,\n      render.options\n    )\n    set.push(path)\n    if (\n      ir < 0 ||\n      brackets[ir].d.x < bracket.d.x ||\n      (brackets[ir].d.x === bracket.d.x && brackets[ir].d.y > bracket.d.y)\n    ) {\n      ir = i\n    }\n  }\n  const bracketR = brackets[ir]\n  function renderIndex(text, shift) {\n    const indexPos = Scale.obj2scaled(\n      bracketR.c.addScaled(bracketR.n, shift * bracketR.h),\n      render.options\n    )\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub\n    })\n    if (indexAttribute) indexPath.attr(indexAttribute)\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()))\n    const t =\n      Math.max(util.shiftRayBox(indexPos, bracketR.d.negated(), indexBox), 3) +\n      2\n    indexPath.translateAbs(t * bracketR.d.x, t * bracketR.d.y)\n    set.push(indexPath)\n  }\n  if (lowerIndexText) renderIndex(lowerIndexText, 0.5)\n  if (upperIndexText) renderIndex(upperIndexText, -0.5)\n}\n\nfunction showValue(paper, pos, sg, options) {\n  const text = paper.text(pos.x, pos.y, sg.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz\n  })\n  const box = text.getBBox()\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    3\n  )\n  rect = sg.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' })\n  const st = paper.set()\n  st.push(rect, text.toFront())\n  return st\n}\n\nfunction drawGroupDat(restruct, sgroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule)\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : []\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule)\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup)\n}\n\nfunction drawAbsoluteDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  const ps = sgroup.pp.scaled(options.scale)\n  const name = showValue(paper, ps, sgroup, options)\n  const box = util.relBox(name.getBBox())\n\n  name.translateAbs(0.5 * box.width, -0.5 * box.height)\n  set.push(name)\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()))\n  sgroup.dataArea = sbox.transform(Scale.scaled2obj, render.options)\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup))\n  }\n\n  return set\n}\n\nfunction drawAttachedDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid)\n    const p = Scale.obj2scaled(atom.a.pp, options)\n    const bb = atom.visel.boundingBox\n\n    if (bb !== null) p.x = Math.max(p.x, bb.p1.x)\n\n    p.x += options.lineWidth // shift a bit to the right\n\n    const nameI = showValue(paper, p, sgroup, options)\n    const boxI = util.relBox(nameI.getBBox())\n\n    nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height)\n    set.push(nameI)\n\n    let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()))\n    sboxI = sboxI.transform(Scale.scaled2obj, render.options)\n    sgroup.areas.push(sboxI)\n  })\n\n  return set\n}\n\nfunction getBracketParameters(\n  mol,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  render,\n  id\n) {\n  // eslint-disable-line max-params\n  function BracketParams(c, d, w, h) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n  const brackets = []\n  let n = d.rotateSC(1, 0)\n\n  const crossBondsPerAtom = Object.values(crossBonds)\n  const crossBondsValues = crossBondsPerAtom.flat()\n  if (crossBondsValues.length < 2) {\n    ;(function () {\n      d = d || new Vec2(1, 0)\n      n = n || d.rotateSC(1, 0)\n      const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3)\n      const cl = Vec2.lc2(\n        d,\n        bracketBox.p0.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const cr = Vec2.lc2(\n        d,\n        bracketBox.p1.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const bracketHeight = bracketBox.sz().y\n\n      brackets.push(\n        new BracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n        new BracketParams(cr, d, bracketWidth, bracketHeight)\n      )\n    })()\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    ;(function () {\n      // eslint-disable-line max-statements\n      const b1 = mol.bonds.get(crossBondsValues[0])\n      const b2 = mol.bonds.get(crossBondsValues[1])\n      const cl0 = b1.getCenter(mol)\n      const cr0 = b2.getCenter(mol)\n      let tl = -1\n      let tr = -1\n      let tt = -1\n      let tb = -1\n      const cc = Vec2.centre(cl0, cr0)\n      const dr = Vec2.diff(cr0, cl0).normalized()\n      const dl = dr.negated()\n      const dt = dr.rotateSC(1, 0)\n      const db = dt.negated()\n\n      mol.sGroupForest.children.get(id).forEach((sgid) => {\n        let bba = render.ctab.sgroups.get(sgid).visel.boundingBox\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n        tl = Math.max(tl, util.shiftRayBox(cl0, dl, bba))\n        tr = Math.max(tr, util.shiftRayBox(cr0, dr, bba))\n        tt = Math.max(tt, util.shiftRayBox(cc, dt, bba))\n        tb = Math.max(tb, util.shiftRayBox(cc, db, bba))\n      }, this)\n      tl = Math.max(tl + 0.2, 0)\n      tr = Math.max(tr + 0.2, 0)\n      tt = Math.max(Math.max(tt, tb) + 0.1, 0)\n      const bracketWidth = 0.25\n      const bracketHeight = 1.5 + tt\n      brackets.push(\n        new BracketParams(\n          cl0.addScaled(dl, tl),\n          dl,\n          bracketWidth,\n          bracketHeight\n        ),\n        new BracketParams(\n          cr0.addScaled(dr, tr),\n          dr,\n          bracketWidth,\n          bracketHeight\n        )\n      )\n    })()\n  } else {\n    ;(function () {\n      for (let i = 0; i < crossBondsValues.length; ++i) {\n        const b = mol.bonds.get(crossBondsValues[i])\n        const c = b.getCenter(mol)\n        const d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated()\n        brackets.push(new BracketParams(c, d, 0.2, 1.0))\n      }\n    })()\n  }\n  return brackets\n}\n\nfunction getHighlighPathInfo(sgroup, options) {\n  let bracketBox = sgroup.bracketBox.transform(Scale.obj2scaled, options)\n  const lineWidth = options.lineWidth\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6)\n  bracketBox = bracketBox.extend(vext, vext)\n  const d = sgroup.bracketDir\n  const n = d.rotateSC(1, 0)\n  const a0 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p0.y)\n  const a1 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p1.y)\n  const b0 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p0.y)\n  const b1 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p1.y)\n  const size = options.contractedFunctionalGroupSize\n  let startX = (b0.x + a0.x) / 2 - size / 2\n  let startY = (a1.y + a0.y) / 2 - size / 2\n  if (sgroup.firstSgroupAtom) {\n    const shift = new Vec2(size / 2, size / 2, 0)\n    const hoverPp = Vec2.diff(sgroup.firstSgroupAtom.pp.scaled(40), shift)\n    startX = hoverPp.x\n    startY = hoverPp.y\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size\n  }\n}\n\nexport default ReSGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\ninterface StyledPath {\n  path: any\n  stylesApplied: boolean\n}\nclass ReSimpleObject extends ReObject {\n  private item: any\n\n  constructor(simpleObject: any) {\n    super('simpleObject')\n    this.item = simpleObject\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const mode = item.mode\n    const pos = item.pos\n    let dist: number\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry))\n        const pointToCenter = Vec2.diff(point, center)\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry)\n          )\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = calculateDistanceToLine(pos, point)\n        }\n        break\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x)\n        const topY = Math.min(pos[0].y, pos[1].y)\n        const bottomX = Math.max(pos[0].x, pos[1].x)\n        const bottomY = Math.max(pos[0].y, pos[1].y)\n\n        const distances: Array<number> = []\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y)\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY)\n          } else {\n            distances.push(point.y - topY, bottomY - point.y)\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point))\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point))\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point))\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point))\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x)\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX)\n          } else {\n            distances.push(point.x - topX, bottomX - point.x)\n          }\n        }\n        dist = Math.min(...distances)\n        break\n      }\n      case SimpleObjectMode.line: {\n        dist = calculateDistanceToLine(pos, point)\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y)\n        )\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x)\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y)\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h)\n        )\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y)\n          )\n        }\n        break\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)))\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n    return refPoints\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = []\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.obj2scaled(p, render.options)\n    })\n    const scaleFactor = render.options.scale\n\n    const path: Array<any> = []\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        path.push(\n          render.paper.ellipse(\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) + scaleFactor / 8),\n            tfx(Math.abs(ry) + scaleFactor / 8)\n          )\n        )\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          path.push(\n            render.paper.ellipse(\n              tfx(point[0].x + rx),\n              tfx(point[0].y + ry),\n              tfx(Math.abs(rx) - scaleFactor / 8),\n              tfx(Math.abs(ry) - scaleFactor / 8)\n            )\n          )\n        }\n        break\n      }\n\n      case SimpleObjectMode.rectangle: {\n        path.push(\n          render.paper.rect(\n            tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) +\n                scaleFactor / 4\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) +\n                scaleFactor / 4\n            )\n          )\n        )\n\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          path.push(\n            render.paper.rect(\n              tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n              tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n              tfx(\n                Math.max(point[0].x, point[1].x) -\n                  Math.min(point[0].x, point[1].x) -\n                  scaleFactor / 4\n              ),\n              tfx(\n                Math.max(point[0].y, point[1].y) -\n                  Math.min(point[0].y, point[1].y) -\n                  scaleFactor / 4\n              )\n            )\n          )\n        }\n\n        break\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = []\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x)\n        )\n\n        const p0 = { x: 0, y: 0 }\n        const p1 = { x: 0, y: 0 }\n\n        const k = point[0].x > point[1].x ? -1 : 1\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle))\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle))\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle))\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle))\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n\n        path.push(render.paper.path(poly))\n        break\n      }\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const enhPaths: Array<StyledPath> = path.map((p) => {\n      return { path: p, stylesApplied: false }\n    })\n\n    return enhPaths\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle)\n      }\n      return enhPath.path\n    })\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths)\n    return paths\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, restruct.render.options) || new Vec2()\n    })\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = restruct.render.options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.hoverStyleSimpleObject\n      )\n    )\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n\n    const path = generatePath(this.item.mode, render.paper, pos, options)\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: Vec2, options?): any {\n  let path: any\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos, options)\n      break\n    }\n    default: {\n      throw new Error('Unsupported shape type')\n    }\n  }\n\n  return path\n}\n\nexport default ReSimpleObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop')\n    this.loop = loop\n    this.centre = new Vec2()\n    this.radius = new Vec2()\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const paper = render.paper\n    const molecule = restruct.molecule\n    const loop = this.loop\n    this.centre = new Vec2()\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const bond = restruct.bonds.get(hb.bid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false\n      this.centre.add_(apos) // eslint-disable-line no-underscore-dangle\n    })\n    loop.convex = true\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k])\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir)\n      )\n      if (angle > 0) loop.convex = false\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length)\n    this.radius = -1\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      const bpos = Scale.obj2scaled(restruct.atoms.get(hb.end).a.pp, options)\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized()\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n)\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist)\n    })\n    this.radius *= 0.7\n    if (!loop.aromatic) return\n    let path = null\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width']\n      })\n    } else {\n      let pathStr = ''\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k])\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir)\n        )\n        const halfAngle = (Math.PI - angle) / 2\n        const dir = hbb.dir.rotate(halfAngle)\n        const pi = Scale.obj2scaled(restruct.atoms.get(hbb.begin).a.pp, options)\n        let sin = Math.sin(halfAngle)\n        const minSin = 0.1\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin)\n        const offset = options.bondSpace / sin\n        const qi = pi.addScaled(dir, -offset)\n        pathStr += k === 0 ? 'M' : 'L'\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y)\n      }\n      pathStr += 'Z'\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- '\n      })\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid\n    )\n  }\n}\n\nexport default ReLoop\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange\n} from 'draft-js'\nimport { Text, TextCommand, Vec2 } from 'domain/entities'\nimport { flatten, isEqual } from 'lodash/fp'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Scale } from 'domain/helpers'\nimport { RaphaelBaseElement } from 'raphael'\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize\n}\n\nconst SCALE = 40 // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text\n  paths: Array<Array<RaphaelBaseElement>> = []\n\n  constructor(text: Text) {\n    super('text')\n    this.item = text\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return []\n\n    const { p0, p1 } = this.getRelBox(this.paths)\n\n    const p = this.item.position\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE\n\n    const refPoints: Array<Vec2> = []\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y)\n    )\n\n    return refPoints\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths)\n    const topLeft = p0.sub(render.options.offset)\n    const { x: width, y: height } = p1.sub(p0)\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5)\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0]\n    const leftEdge = firstElOfFirstRow.getBBox().x\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0]\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y)\n    )\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0]\n    )\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1]\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1]\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height)\n    )\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge)\n    }\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width\n      return rowWidth\n    }, 0)\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render\n    const paper = render.paper\n    const paperScale = Scale.obj2scaled(this.item.position!, options)\n\n    let shiftY = 0\n    this.paths = []\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null\n    if (!rawContentState) {\n      return\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options)\n      let shiftX = 0\n      const row: Array<RaphaelBaseElement> = []\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0')\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0'\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles\n          })\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0))\n        row.push(path)\n        shiftX += path.getBBox().width\n      })\n\n      this.paths.push(row)\n\n      const { p0, p1 } = this.getRelBox([row])\n      shiftY += Math.abs(Vec2.diff(p0, p1).y)\n    })\n\n    this.item.setPos(this.getReferencePoints())\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true\n    )\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = []\n\n    let start = 0\n    let styles: Record<string, any> = this.getStyles(block, start, options)\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options)\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles])\n        styles = nextStyles\n        start = i\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles])\n\n    return ranges\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length\n    )\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0]\n        }\n        return acc\n      },\n      null\n    )\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz\n        const fontszsub = (customFontSize || options.fontszsub) * 0.8\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold'\n            break\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic'\n            break\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = fontsz / 3\n\n            break\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = -fontsz / 3\n            break\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px'\n            break\n\n          default:\n        }\n\n        return styles\n      },\n      {}\n    )\n  }\n}\n\nexport default ReText\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReAtom from './reatom'\nimport ReBond from './rebond'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReEnhancedFlag from './reenhancedFlag'\nimport ReFrag from './refrag'\nimport ReLoop from './reloop'\nimport ReRGroup from './rergroup'\nimport ReRxnArrow from './rerxnarrow'\nimport ReRxnPlus from './rerxnplus'\nimport ReSGroup from './resgroup'\nimport ReSimpleObject from './resimpleObject'\nimport ReText from './retext'\nimport { Render } from '../raphaelRender'\nimport Visel from './visel'\nimport util from '../util'\n\nclass ReStruct {\n  public static maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText\n  }\n\n  public render: Render\n  public molecule: Struct\n  public atoms: Map<number, ReAtom> = new Map()\n  public bonds: Map<number, ReBond> = new Map()\n  public reloops: Map<number, ReLoop> = new Map()\n  public rxnPluses: Map<number, ReRxnPlus> = new Map()\n  public rxnArrows: Map<number, ReRxnArrow> = new Map()\n  public frags: Pool = new Pool()\n  public rgroups: Pool = new Pool()\n  public sgroups: Map<number, ReSGroup> = new Map()\n  public sgroupData: Map<number, ReDataSGroupData> = new Map()\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map()\n  private simpleObjects: Map<number, ReSimpleObject> = new Map()\n  public texts: Map<number, ReText> = new Map()\n  private initialized = false\n  private layers: Array<any> = []\n  public connectedComponents: Pool = new Pool()\n  private ccFragmentType: Pool = new Pool()\n  private structChanged = false\n\n  private atomsChanged: Map<number, ReAtom> = new Map()\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map()\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map()\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map()\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private textsChanged: Map<number, ReText> = new Map()\n  constructor(molecule, render: Render) {\n    // eslint-disable-line max-statements\n    this.render = render\n    this.molecule = molecule || new Struct()\n    this.initLayers()\n    this.clearMarks()\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom))\n    })\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond))\n    })\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop))\n    })\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item))\n    })\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item))\n    })\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item))\n    })\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item))\n    })\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item))\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag())\n    })\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item))\n    })\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item))\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item))\n      } // [MK] sort of a hack, we use the SGroup id for the data field id\n      if (FunctionalGroup.isFunctionalGroup(item)) {\n        this.molecule.functionalGroups.set(id, new FunctionalGroup(item))\n      }\n    })\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid)\n    if (!atom || atom.component < 0) return\n    const cc = this.connectedComponents.get(atom.component)\n\n    cc.delete(aid)\n    if (cc.size < 1) this.connectedComponents.delete(atom.component)\n\n    atom.component = -1\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear()\n    this.atoms.forEach((atom) => {\n      atom.component = -1\n    })\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid]\n    const ids = new Pile()\n\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)\n      if (!atom) continue\n      if (atom.component >= 0) adjacentComponents.add(atom.component)\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor)\n        if (!halfBond) return\n        const neiId = halfBond.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet)\n    const adjacentComponents = new Pile()\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents\n    )\n\n    adjacentComponents.delete(compId)\n\n    let type = -1\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (!atom) return\n      atom.component = compId\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType\n    })\n\n    this.ccFragmentType.set(compId, type)\n    return compId\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.component = -1\n    })\n\n    return this.connectedComponents.delete(ccid)\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return\n\n      const adjacentComponents = new Pile()\n      const idSet = this.getConnectedComponent(aid, adjacentComponents)\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid)\n      })\n\n      this.addConnectedComponent(idSet)\n    })\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0'\n        })\n        .toFront()\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return\n\n    const paths = Array.isArray(path) ? path : [path]\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null\n      const ext = pos && bb ? bb.translate(pos.negated()) : null\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y)\n        bb = bb ? bb.translate(offset) : null\n      }\n      visel.add(path, bb, ext)\n      path.insertBefore(this.layers[LayerMap[group]])\n    })\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map()\n    })\n\n    this.structChanged = false\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark)\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark)\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed']\n\n    const value = mapChanged.has(id) ? Math.max(mark, mapChanged.get(id)) : mark\n\n    mapChanged.set(id, value)\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel)\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove()\n    })\n    visel.clear()\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func)\n    })\n  }\n\n  getVBoxObj(selection): Box2Abs | null {\n    selection = selection || {}\n\n    if (isSelectionEmpty(selection)) {\n      Object.keys(ReStruct.maps).forEach((map) => {\n        selection[map] = Array.from(this[map].keys())\n      })\n    }\n\n    let vbox: Box2Abs | null = null\n    Object.keys(ReStruct.maps).forEach((map) => {\n      if (!selection[map]) return\n\n      selection[map].forEach((id) => {\n        const box = this[map].get(id).getVBoxObj(this.render)\n        if (box) vbox = vbox ? Box2Abs.union(vbox, box) : box.clone()\n      })\n    })\n\n    vbox = vbox || new Box2Abs(0, 0, 0, 0)\n    return vbox\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d))\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s))\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel))\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1))\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id)\n        })\n      }\n    })\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid)\n    )\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render)\n    )\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel)\n      this.frags.delete(fid)\n      this.molecule.frags.delete(fid)\n    })\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n\n      mapChanged.forEach((_value, id) => {\n        this.clearVisel(this[map].get(id).visel)\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0\n      })\n    })\n\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel)\n      sgroup.hovering = null\n      sgroup.selectionPlate = null\n    })\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel)\n    })\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel)\n    })\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents()\n      this.molecule.initHalfBonds()\n      this.molecule.initNeighbors()\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys())\n    this.molecule.updateHalfBonds(atomsChangedArray)\n    this.molecule.sortNeighbors(atomsChangedArray)\n\n    this.assignConnectedComponents()\n    this.initialized = true\n\n    this.verifyLoops()\n    const updLoops = force || this.structChanged\n    if (updLoops) this.updateLoops()\n    this.showLabels()\n    this.showBonds()\n    if (updLoops) this.showLoops()\n    this.showReactionSymbols()\n    this.showSGroups()\n\n    this.showFragments()\n    this.showRGroups()\n    this.showEnhancedFlags()\n    this.showSimpleObjects()\n    this.showTexts()\n    this.clearMarks()\n\n    return true\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel)\n    })\n    const ret = this.molecule.findLoops()\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1)\n    })\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)))\n    })\n  }\n\n  showLoops(): void {\n    const options = this.render.options\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options)\n    })\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id)\n      if (simpleObject) simpleObject.show(this, options)\n    })\n  }\n\n  showTexts() {\n    const options = this.render.options\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id)\n      if (text) text.show(this, id, options)\n    })\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id)\n      if (arrow) arrow.show(this, id, options)\n    })\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id)\n      if (plus) plus.show(this, id, options)\n    })\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id)\n        if (!resgroup) return\n        resgroup.show(this)\n      })\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id)\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true)\n      }\n      // TODO fragment selection & highlighting\n    })\n  }\n\n  showRGroups(): void {\n    const options = this.render.options\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options)\n    })\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId)\n    if (!reloop) {\n      return\n    }\n    this.clearVisel(reloop.visel)\n\n    const bondlist: Array<number> = []\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid)\n      if (!hb) return\n      hb.loop = -1\n      this.markBond(hb.bid, 1)\n      this.markAtom(hb.begin, 1)\n      bondlist.push(hb.bid)\n    })\n\n    this.reloops.delete(loopId)\n    this.molecule.loops.delete(loopId)\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid)\n    })\n  }\n\n  showLabels(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.show(this, aid, options)\n    })\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid)\n      if (flag) flag.show(this, chid, options)\n    })\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid)\n      if (bond) {\n        bond.show(this, bid, options)\n      }\n    })\n  }\n\n  setSelection(selection) {\n    const redraw = arguments.length === 0 // render.update only\n    const atoms: { selected: boolean; sgroup: number }[] = []\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values() // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup: sgroup\n            })\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item.item.id,\n              this.molecule.functionalGroups\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item.item.id\n            )\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected\n          }\n          const selected = redraw\n            ? item.selected\n            : selection && selection[map] && selection[map].indexOf(id) > -1\n\n          this.showItemSelection(item, selected)\n        })\n      }\n    })\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item)\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected\n    if (selected) {\n      if (!exists) {\n        const render = this.render\n        const options = render.options\n        const paper = render.paper\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options)\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate\n        )\n      }\n      if (item.selectionPlate) item.selectionPlate.show() // TODO [RB] review\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide() // TODO [RB] review\n    }\n  }\n}\n\nfunction isSelectionEmpty(selection) {\n  if (!selection) return true\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0\n  )\n\n  return !anySelection\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor)\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor)\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor)\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0)\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s)\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  )\n}\n\nexport default ReStruct\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport { inRange } from 'lodash'\n\nlet FRAC = Math.PI / 12 // '15º'\n\nfunction setFracAngle(angle) {\n  FRAC = (Math.PI / 180) * angle\n}\n\nfunction calcAngle(pos0, pos1) {\n  const v = Vec2.diff(pos1, pos0)\n  return Math.atan2(v.y, v.x)\n}\n\nfunction fracAngle(angle, angle2) {\n  if (angle2) angle = calcAngle(angle, angle2)\n  return Math.round(angle / FRAC) * FRAC\n}\n\nfunction calcNewAtomPos(pos0, pos1, ctrlKey) {\n  const v = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1)\n  )\n  v.add_(pos0) // eslint-disable-line no-underscore-dangle\n  return v\n}\n\nfunction degrees(angle) {\n  let degree = Math.round((angle / Math.PI) * 180)\n  if (degree > 180) degree -= 360\n  else if (degree <= -180) degree += 360\n  return degree\n}\n\nconst BONDS_MERGE_ANGLE = 10 // 'º'\nconst BONDS_MERGE_SCALE = 0.2\n\nfunction mergeBondsParams(struct1, bond1, struct2, bond2) {\n  const begin1 = struct1.atoms.get(bond1.begin)\n  const begin2 = struct2.atoms.get(bond2.begin)\n  const end1 = struct1.atoms.get(bond1.end)\n  const end2 = struct2.atoms.get(bond2.end)\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp)\n  const mergeAngle = Math.abs(degrees(angle) % 180)\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp)\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE)\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 }\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  calcNewAtomPos,\n  degrees,\n  setFracAngle,\n  mergeBondsParams\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport utils from '../editor/shared/utils'\n\nfunction defaultOptions(opt) {\n  const scaleFactor = opt.scale || 100\n\n  if (opt.rotationStep) utils.setFracAngle(opt.rotationStep)\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactor / 6))\n  const subFontSize = Math.ceil(0.7 * labelFontSize)\n\n  const defaultOptions = {\n    'dearomatize-on-load': false,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: 'on',\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    scale: scaleFactor,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactor / 20,\n    bondSpace: opt.doubleBondWidth || scaleFactor / 7,\n    stereoBond: opt.stereoBondWidth || scaleFactor / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': opt.bondThickness || scaleFactor / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round'\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#7f7',\n      stroke: 'none'\n    },\n    hoverStyle: {\n      stroke: '#0c0',\n      'stroke-width': (0.6 * scaleFactor) / 20\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactor) / 20\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px'\n    },\n    hoverStyleSimpleObject: {\n      stroke: '#0c0',\n      'stroke-width': scaleFactor / 4,\n      'stroke-linecap': 'round',\n      'stroke-opacity': 0.6\n    },\n    atomSelectionPlateRadius: labelFontSize * 1.2,\n    contractedFunctionalGroupSize: 50\n  }\n\n  return Object.assign({}, defaultOptions, opt)\n}\n\nexport default defaultOptions\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport { ReStruct } from './restruct'\nimport { Scale } from 'domain/helpers'\nimport defaultOptions from './options'\nimport draw from './draw'\n\nexport function Render(clientArea, opt) {\n  let renderWidth = clientArea.clientWidth - 10\n  let renderHeight = clientArea.clientHeight - 10\n  renderWidth = renderWidth > 0 ? renderWidth : 0\n  renderHeight = renderHeight > 0 ? renderHeight : 0\n\n  this.userOpts = opt\n  this.clientArea = clientArea\n  this.paper = new Raphael(clientArea, renderWidth, renderHeight)\n  this.sz = Vec2.ZERO\n  this.ctab = new ReStruct(new Struct(), this)\n  this.options = defaultOptions(this.userOpts)\n}\n\nRender.prototype.updateOptions = function (opts) {\n  try {\n    const passedOptions = JSON.parse(opts)\n    if (passedOptions && typeof passedOptions === 'object') {\n      this.options = { ...this.options, ...passedOptions }\n      return this.options\n    }\n  } catch (e) {\n    console.log('Not a valid settings object')\n  }\n  return false\n}\n\nRender.prototype.selectionPolygon = function (r) {\n  return draw.selectionPolygon(this.paper, r, this.options)\n}\n\nRender.prototype.selectionLine = function (p0, p1) {\n  return draw.selectionLine(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.selectionRectangle = function (p0, p1) {\n  return draw.selectionRectangle(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.view2obj = function (p, isRelative) {\n  let scroll = this.scrollPos()\n  if (!this.useOldZoom) {\n    p = p.scaled(1 / this.options.zoom)\n    scroll = scroll.scaled(1 / this.options.zoom)\n  }\n  p = isRelative ? p : p.add(scroll).sub(this.options.offset)\n  return Scale.scaled2obj(p, this.options)\n}\n\nRender.prototype.obj2view = function (v, isRelative) {\n  let p = Scale.obj2scaled(v, this.options)\n  p = isRelative\n    ? p\n    : p\n        .add(this.options.offset)\n        .sub(this.scrollPos().scaled(1 / this.options.zoom))\n  if (!this.useOldZoom) p = p.scaled(this.options.zoom)\n  return p\n}\n\nRender.prototype.scrollPos = function () {\n  return new Vec2(this.clientArea.scrollLeft, this.clientArea.scrollTop)\n}\n\nRender.prototype.page2obj = function (event) {\n  const clientArea = this.clientArea\n\n  const { top: offsetTop, left: offsetLeft } =\n    clientArea.getBoundingClientRect()\n\n  const pp = new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop)\n  return this.view2obj(pp)\n}\n\nRender.prototype.setPaperSize = function (sz) {\n  this.sz = sz\n  this.paper.setSize(sz.x * this.options.zoom, sz.y * this.options.zoom)\n  this.setViewBox(this.options.zoom)\n}\n\nRender.prototype.setOffset = function (newoffset) {\n  const delta = new Vec2(\n    newoffset.x - this.options.offset.x,\n    newoffset.y - this.options.offset.y\n  )\n  this.clientArea.scrollLeft += delta.x\n  this.clientArea.scrollTop += delta.y\n  this.options.offset = newoffset\n}\n\nRender.prototype.setZoom = function (zoom) {\n  // when scaling the canvas down it may happen that the scaled canvas is smaller than the view window\n  // don't forget to call setScrollOffset after zooming (or use extendCanvas directly)\n  this.options.zoom = zoom\n  this.paper.setSize(this.sz.x * zoom, this.sz.y * zoom)\n  this.setViewBox(zoom)\n}\n\nfunction calcExtend(sSz, x0, y0, x1, y1) {\n  // eslint-disable-line max-params\n  let ex = x0 < 0 ? -x0 : 0\n  let ey = y0 < 0 ? -y0 : 0\n\n  if (sSz.x < x1) ex += x1 - sSz.x\n  if (sSz.y < y1) ey += y1 - sSz.y\n  return new Vec2(ex, ey)\n}\n\nRender.prototype.setScrollOffset = function (x, y) {\n  const clientArea = this.clientArea\n  const cx = clientArea.clientWidth\n  const cy = clientArea.clientHeight\n  const e = calcExtend(\n    this.sz.scaled(this.options.zoom),\n    x,\n    y,\n    cx + x,\n    cy + y\n  ).scaled(1 / this.options.zoom)\n  if (e.x > 0 || e.y > 0) {\n    this.setPaperSize(this.sz.add(e))\n    const d = new Vec2(x < 0 ? -x : 0, y < 0 ? -y : 0).scaled(\n      1 / this.options.zoom\n    )\n    if (d.x > 0 || d.y > 0) {\n      this.ctab.translate(d)\n      this.setOffset(this.options.offset.add(d))\n    }\n  }\n  clientArea.scrollLeft = x\n  clientArea.scrollTop = y\n  // TODO: store drag position in scaled systems\n  // scrollLeft = clientArea.scrollLeft;\n  // scrollTop = clientArea.scrollTop;\n  this.update(false)\n}\n\nRender.prototype.setScale = function (z) {\n  if (this.options.offset) {\n    this.options.offset = this.options.offset.scaled(1 / z).scaled(z)\n  }\n  this.userOpts.scale *= z\n  this.options = null\n  this.update(true)\n}\n\nRender.prototype.setViewBox = function (z) {\n  if (!this.useOldZoom) {\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      '0 0 ' + this.sz.x + ' ' + this.sz.y\n    )\n  } else this.setScale(z)\n}\n\nRender.prototype.setMolecule = function (ctab) {\n  this.paper.clear()\n  this.ctab = new ReStruct(ctab, this)\n  this.options.offset = new Vec2()\n  this.update(false)\n}\n\nRender.prototype.update = function (force = false, viewSz = null) {\n  // eslint-disable-line max-statements\n  viewSz =\n    viewSz ||\n    new Vec2(\n      this.clientArea.clientWidth || 100,\n      this.clientArea.clientHeight || 100\n    )\n\n  const changes = this.ctab.update(force)\n  this.ctab.setSelection() // [MK] redraw the selection bits where necessary\n  if (changes) {\n    const sf = this.options.scale\n    const bb = this.ctab\n      .getVBoxObj()\n      .transform(Scale.obj2scaled, this.options)\n      .translate(this.options.offset || new Vec2())\n\n    if (!this.options.autoScale) {\n      const ext = Vec2.UNIT.scaled(sf)\n      const eb = bb.sz().length() > 0 ? bb.extend(ext, ext) : bb\n      const vb = new Box2Abs(\n        this.scrollPos(),\n        viewSz.scaled(1 / this.options.zoom).sub(Vec2.UNIT.scaled(20))\n      )\n      const cb = Box2Abs.union(vb, eb)\n      if (!this.oldCb) this.oldCb = new Box2Abs()\n\n      const sz = cb.sz().floor()\n      const delta = this.oldCb.p0.sub(cb.p0).ceil()\n      this.oldBb = bb\n      if (!this.sz || sz.x !== this.sz.x || sz.y !== this.sz.y) {\n        this.setPaperSize(sz)\n      }\n\n      this.options.offset = this.options.offset || new Vec2()\n      if (delta.x !== 0 || delta.y !== 0) {\n        this.setOffset(this.options.offset.add(delta))\n        this.ctab.translate(delta)\n      }\n    } else {\n      const sz1 = bb.sz()\n      const marg = this.options.autoScaleMargin\n      const mv = new Vec2(marg, marg)\n      const csz = viewSz\n      if (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1) {\n        throw new Error('View box too small for the given margin')\n      }\n      let rescale = Math.max(\n        sz1.x / (csz.x - 2 * marg),\n        sz1.y / (csz.y - 2 * marg)\n      )\n      if (this.options.maxBondLength / rescale > 1.0) rescale = 1.0\n      const sz2 = sz1.add(mv.scaled(2 * rescale))\n      /* eslint-disable no-mixed-operators */\n      this.paper.setViewBox(\n        bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n        bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n        csz.x * rescale,\n        csz.y * rescale\n      )\n      /* eslint-enable no-mixed-operators */\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render'\n\nimport { OperationType } from './OperationType'\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>\ntype OperationType = ValueOf<typeof OperationType>\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined\n  type: OperationType\n  priority: number\n  data: any\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type\n    this.priority = priority\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented')\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct)\n    if (!this._inverted) {\n      this._inverted = this.invert()\n      this._inverted._inverted = this\n    }\n    return this._inverted\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented')\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId)\n    if (!atom) {\n      return\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0)\n\n    const halfBonds = restruct.molecule.halfBonds\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return\n      }\n\n      const halfBond = halfBonds.get(halfBondId)\n      if (!halfBond) {\n        return\n      }\n\n      restruct.markBond(halfBond.bid, 1)\n      restruct.markAtom(halfBond.end, 0)\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid)\n      }\n    })\n\n    const fragment = atom.a.fragment\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0)\n      }\n    })\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId)\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop)\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop)\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId)\n\n    const bond = restruct.bonds.get(bondId)\n    if (!bond) {\n      return\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0)\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0)\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    map,\n    id: number,\n    level?: any\n  ) {\n    if (map === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level)\n      return\n    }\n\n    if (map === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id)\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id)\n      }\n      return\n    }\n\n    restruct.markItem(map, id, level)\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1)\n  }\n}\n\nexport { BaseOperation }\nexport default BaseOperation\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight'\n})\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  aid?: any\n  attribute?: any\n  value?: any\n}\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, 1)\n    this.data = { aid: atomId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data\n\n      const atom = restruct.molecule.atoms.get(aid)!\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute]\n        }\n      }\n\n      atom[attribute] = value\n      BaseOperation.invalidateAtom(restruct, aid)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, 2)\n    this.data = { aid: atomId, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { aid, d } = this.data\n    const atom = struct.atoms.get(aid)\n    if (!atom) return\n    atom!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid)\n    if (reatom) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reatom.visel.translate(scaled)\n    }\n\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove()\n    inverted.data = this.data\n    return inverted\n  }\n\n  isDummy() {\n    const { d } = this.data\n    return d.x === 0 && d.y === 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Pile, Vec2 } from 'domain/entities'\nimport { ReAtom, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any\n  atom: any\n  pos: any\n}\n\nclass AtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD)\n    this.data = { atom, pos, aid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data\n\n    const struct = restruct.molecule\n\n    const pp: { label: string } = { label: '' }\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p]\n      })\n    }\n\n    pp.label = pp.label || 'C'\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp))\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp))\n    }\n\n    const { aid } = this.data\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!)\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]))\n    restruct.atoms.set(aid, atomData)\n    restruct.markAtom(aid, 1)\n\n    struct.atomSetPos(aid, new Vec2(pos))\n\n    const arrow = struct.rxnArrows.get(0)\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x\n      )\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, 5)\n    this.data = { aid: atomId, atom: null, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid)\n      this.data.pos = this.data.atom.pp\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid)\n    if (!restructedAtom) {\n      return\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component)\n    set.delete(aid)\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component)\n    }\n\n    restruct.clearVisel(restructedAtom.visel)\n    restruct.atoms.delete(aid)\n    restruct.markItemRemoved()\n    struct.atoms.delete(aid)\n  }\n\n  invert() {\n    const inverted = new AtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { AtomAdd, AtomDelete }\nexport * from './AtomAttr'\nexport * from './AtomMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  bid: any\n  attribute: any\n  value: any\n}\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(bondId?: any, attribute?: any, value?: any) {\n    super(OperationType.BOND_ATTR, 2)\n    this.data = { bid: bondId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n\n      if (!this.data2) {\n        this.data2 = {\n          bid: bid,\n          attribute: attribute,\n          value: bond[attribute]\n        }\n      }\n\n      bond[attribute] = value\n\n      BaseOperation.invalidateBond(restruct, bid)\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid)\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n      return bond[attribute] === value\n    }\n    return false\n  }\n\n  invert() {\n    const inverted = new BondAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any\n    d: any\n  }\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, 2)\n    this.data = { bid: bondId, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data\n    const bond = restruct.bonds.get(bid)\n    if (!bond) return\n\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    bond.visel.translate(scaled)\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new BondMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReBond, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { Bond } from 'domain/entities'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any\n  begin: any\n  end: any\n  bid: any\n}\n\nclass BondAdd extends BaseOperation {\n  data: Data\n\n  constructor(begin?: any, end?: any, bond?: any) {\n    super(OperationType.BOND_ADD, 1)\n    this.data = { bond, begin, end, bid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected')\n    }\n\n    BaseOperation.invalidateAtom(restruct, begin, 1)\n    BaseOperation.invalidateAtom(restruct, end, 1)\n\n    const pp: {\n      type: number\n      begin: number\n      end: number\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0\n    }\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p]\n      })\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE\n    pp.begin = begin\n    pp.end = end\n\n    const newBond = new Bond(pp)\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond)\n    } else {\n      this.data.bid = struct.bonds.add(newBond)\n    }\n\n    const { bid } = this.data\n    const structBond = struct.bonds.get(bid)!\n\n    struct.bondInitHalfBonds(bid)\n    struct.atomAddNeighbor(structBond.hb1)\n    struct.atomAddNeighbor(structBond.hb2)\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond))\n    restruct.markBond(bid, 1)\n  }\n\n  invert() {\n    const inverted = new BondDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, 3)\n    this.data = { bid: bondId, bond: null, begin: null, end: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid)\n      this.data.begin = this.data.bond.begin\n      this.data.end = this.data.bond.end\n    }\n\n    BaseOperation.invalidateBond(restruct, bid)\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid)\n    if (!rebond) return\n    ;[rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return\n      const halfBond = restruct.molecule.halfBonds.get(hbid)\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop)\n      }\n    }, restruct)\n    restruct.clearVisel(rebond.visel)\n    restruct.bonds.delete(bid)\n    restruct.markItemRemoved()\n\n    const structBond = struct.bonds.get(bid)!\n    ;[structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!)\n      if (!halfBond) {\n        return\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!\n      const pos = atom.neighbors.indexOf(hbid!)\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length\n      const next = (pos + 1) % atom.neighbors.length\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next])\n      atom.neighbors.splice(pos, 1)\n    })\n    struct.halfBonds.delete(structBond.hb1!)\n    struct.halfBonds.delete(structBond.hb2!)\n\n    struct.bonds.delete(bid)\n  }\n\n  invert() {\n    const inverted = new BondAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { BondAdd, BondDelete }\nexport * from './BondAttr'\nexport * from './BondMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Struct } from 'domain/entities'\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct\n  }\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD)\n    this.data = { struct }\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule\n    restruct.clearVisels() // TODO: What is it?\n    restruct.render.setMolecule(this.data.struct)\n    this.data.struct = oldStruct\n  }\n\n  invert() {\n    const inverted = new CanvasLoad()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS)\n    this.history = {}\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse()\n\n    const structBox: any = struct.getCoordBoundingBoxObj()\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0)\n    )\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp)\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5))\n      sgroup.pp = alignPoint\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history)\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION)\n    this.history = history\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values())\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id]\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new AlignDescriptors()\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any\n    p: any\n  }\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE)\n    this.data = { frid: fragmentId, p }\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data\n    const { p } = this.data\n    const fragment = restruct.molecule.frags.get(frid)\n    if (!fragment) return\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!\n\n    const newPosition = Vec2.sum(currentPosition, p)\n    fragment.stereoFlagPosition = newPosition\n\n    this.data.p = p.negated()\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1)\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n  skipRgids: any[]\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = new Map()\n    this.skipRgids = skipRgids || []\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new\n        this.ifThenHistory.set(rgid, this.rgid_old)\n        struct.rgroups.set(rgid, rg)\n      }\n    })\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory)\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = history || new Map()\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!\n      rgValue.ifthen = rg\n      struct.rgroups.set(rgid, rgValue)\n    })\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new)\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { Fragment } from 'domain/entities'\nimport { OperationType } from './OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId?: any) {\n    super(OperationType.FRAGMENT_ADD)\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const frag = new Fragment()\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag)\n    } else {\n      struct.frags.set(this.frid, frag)\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)) // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag())\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid)\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    if (!struct.frags.get(this.frid)) {\n      return\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1)\n    restruct.frags.delete(this.frid)\n    struct.frags.delete(this.frid) // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid)\n    if (!enhancedFalg) return\n    restruct.clearVisel(enhancedFalg.visel)\n    restruct.enhancedFlags.delete(this.frid)\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid)\n  }\n}\n\nexport { FragmentAdd, FragmentDelete }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any\n  aid: any\n}\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_ADD_STEREO_ATOM, 100)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid)\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_DELETE_STEREO_ATOM, 90)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data\n    return new FragmentAddStereoAtom(frid, aid)\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number\n\n  constructor(fragmentId: number) {\n    super(OperationType.FRAGMENT_STEREO_FLAG, 6)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const fragment = struct.frags.get(this.frid)!\n    fragment.updateStereoFlag(struct)\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid)\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid)\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, 10)\n    this.atomIds = aids\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds\n\n    restruct.molecule.setImplicitHydrogen(aIds)\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data\n    const reloop = restruct.reloops.get(id)\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reloop.visel.translate(scaled)\n    }\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new LoopMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  rgid: any\n  attribute: any\n  value: any\n}\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR)\n    this.data = { rgid: rgroupId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!\n\n      if (!rgp) {\n        return\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute]\n        }\n      }\n\n      rgp[attribute] = value\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid)\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n      const rgroup = restruct.molecule.rgroups.get(rgid)!\n      return rgroup[attribute] === value\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { RGroup } from 'domain/entities'\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any\n  rg_new: any\n  rgid_old: any\n  rg_old: any\n  frid: any\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT)\n    this.rgid_new = rgroupId\n    this.rg_new = rg\n    this.rgid_old = null\n    this.rg_old = null\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid)\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null\n\n    this.removeOld(struct, restruct)\n    this.setNew(struct, restruct)\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return\n    }\n\n    this.rg_old.frags.delete(this.frid)\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel)\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old)\n      struct.rgroups.delete(this.rgid_old)\n      restruct.markItemRemoved()\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1)\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new)\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup()\n      struct.rgroups.set(this.rgid_new, rgNew)\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew))\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1)\n    }\n\n    rgNew.frags.add(this.frid)\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\n\ninterface RxnArrowMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.rxnArrows.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    move.data = this.data\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\nimport { RxnArrow, Vec2 } from 'domain/entities'\nimport { tfx } from 'utilities'\ninterface RxnArrowResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.rxnArrows.get(id)\n    const anchor = this.data.anchor\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n      let middlePoint\n      let reItem\n\n      if (RxnArrow.isElliptical(item)) {\n        reItem = restruct.rxnArrows.get(id)\n        ;[, , middlePoint] = reItem.getReferencePoints()\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y\n        )\n        const angleInRadians = (angle * Math.PI) / 180\n        const cosAngle = Math.cos(angleInRadians)\n        const sinAngle = Math.sin(angleInRadians)\n\n        const diffX = current.x - anchor.x\n        const diffY = current.y - anchor.y\n\n        const diff = diffY * cosAngle - diffX * sinAngle\n        item.height -= diff\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints()\n\n        anchor.y = newMiddlePoint.y\n        anchor.x = newMiddlePoint.x\n      }\n    } else {\n      item.pos[1].add_(d)\n    }\n\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\nimport { ReStruct } from '../../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data\n\n    const struct = restruct.molecule\n    struct.rxnPluses.get(id)!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    rxn.visel.translate(scaled)\n\n    this.data.d = d.negated()\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRxnPlus, ReStruct } from '../../../../render'\nimport { RxnPlus, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any\n  pos: any\n}\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD)\n    this.data = { plid: null, pos }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const newRxn = new RxnPlus()\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn)\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn)\n    }\n\n    const { pos, plid } = this.data\n\n    const structRxn = struct.rxnPluses.get(plid)\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn))\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos))\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1)\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE)\n    this.data = { plid, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved()\n    const rxn = restruct.rxnPluses.get(plid)\n    if (!rxn) return\n    restruct.clearVisel(rxn.visel)\n    restruct.rxnPluses.delete(plid)\n\n    struct.rxnPluses.delete(plid)\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete }\nexport * from './RxnPlusMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReRxnArrow } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n}\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number\n  ) {\n    super(OperationType.RXN_ARROW_ADD)\n    this.data = { pos, mode, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new RxnArrow({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item)\n      this.data.id = index\n    } else {\n      struct.rxnArrows.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item))\n\n    const positions = [...this.data.pos]\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1)\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!)\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: RxnArrowMode\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE)\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.rxnArrows.get(this.data.id) as any\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel)\n    restruct.rxnArrows.delete(this.data.id)\n\n    struct.rxnArrows.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id)\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete }\nexport * from './RxnArrowMove'\nexport * from './RxnArrowResize'\nexport * from './plus'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport Base from './base'\nimport { OperationType } from './OperationType'\nimport { ReSimpleObject } from '../../render'\nimport { Scale } from 'domain/helpers'\nimport { tfx } from 'utilities'\n\ninterface SimpleObjectAddData {\n  id?: number\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n  toCircle: boolean\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD)\n    this.data = { pos, mode, toCircle, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new SimpleObject({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item)\n      this.data.id = index\n    } else {\n      struct.simpleObjects.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item))\n\n    const positions = [...this.data.pos]\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1])\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1)\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!)\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: SimpleObjectMode\n  toCircle?: boolean\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE)\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.simpleObjects.get(this.data.id) as any\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.data.toCircle = item.toCircle\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel)\n    restruct.simpleObjects.delete(this.data.id)\n\n    struct.simpleObjects.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id\n    )\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.simpleObjects.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    // todo Need further investigation on why this is needed?\n    move.data = this.data\n    return move\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n  toCircle: boolean\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0()\n  const previousPos1 = item.pos[1].get_xy0()\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x\n    current.x = previousPos1.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y\n    current.y = previousPos1.y\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x\n    current.x = previousPos0.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y\n    current.y = previousPos0.y\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate, toCircle }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.simpleObjects.get(id)\n    const anchor = this.data.anchor\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current)\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0()\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current)\n        item.pos[1].x = circlePoint.x\n        item.pos[1].y = circlePoint.y\n        this.data.current = previousPos1\n      } else {\n        const previousPos1 = item.pos[1].get_xy0()\n        item.pos[1].x = current.x\n        item.pos[1].y = current.y\n        this.data.current = previousPos1\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current)\n    } else item.pos[1].add_(d)\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle\n    )\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0)\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { SGroup } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  aid: any\n}\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, 3)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      throw new Error(\n        'The same atom cannot be added to an S-group more than once'\n      )\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found')\n    }\n\n    struct.atomAddToSGroup(sgid, aid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    SGroup.removeAtom(sgroup, aid)\n    atom.sgs.delete(sgid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any\n    attr: any\n    value: any\n  }\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, 4)\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroupId = this.data.sgid\n    const sgroup = struct.sgroups.get(sgroupId)!\n\n    const sgroupData = restruct.sgroupData.get(sgroupId)\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgroupId)\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value)\n  }\n\n  invert() {\n    const inverted = new SGroupAttr()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data\n    const { sgroups } = restruct.molecule\n\n    sgroups.get(id)!.pp?.add_(d) // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated()\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1)\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  parent?: any\n  children?: any\n}\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(OperationType.S_GROUP_ADD_TO_HIERACHY, 100)\n    this.data = { sgid: sgroupId, parent, children }\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data\n\n    const struct = restruct.molecule\n    const sgroup = struct.sgroups.get(sgid)!\n    const relations = struct.sGroupForest.insert(sgroup, parent, children)\n\n    this.data.parent = relations.parent\n    this.data.children = relations.children\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data\n    const struct = restruct.molecule\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid)\n    this.data.children = struct.sGroupForest.children.get(sgid)\n    struct.sGroupForest.remove(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities'\nimport { ReSGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  type?: any\n  pp?: any\n  expanded?: boolean\n  name?: string\n}\n\nclass SGroupCreate extends BaseOperation {\n  data: Data\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string\n  ) {\n    super(OperationType.S_GROUP_CREATE)\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroup = new SGroup(this.data.type)\n    const { sgid, pp, expanded, name } = this.data\n\n    sgroup.id = sgid\n    struct.sgroups.set(sgid, sgroup)\n\n    if (pp) {\n      struct.sgroups.get(sgid)!.pp = new Vec2(pp)\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded\n    }\n\n    if (name) {\n      sgroup.data.name = name\n    }\n\n    restruct.sgroups.set(sgid, new ReSGroup(struct.sgroups.get(sgid)))\n    if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n      restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup))\n    }\n    this.data.sgid = sgid\n  }\n\n  invert() {\n    const inverted = new SGroupDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, 95)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { sgid } = this.data\n    const sgroup = restruct.sgroups.get(sgid)\n    const sgroupData = restruct.sgroupData.get(sgid)\n    if (!sgroup) return\n    this.data.type = sgroup.item.type\n    this.data.pp = sgroup.item.pp\n\n    if (sgroup.item.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgid)\n    }\n\n    restruct.clearVisel(sgroup.visel)\n    if (sgroup.item.atoms.length !== 0) {\n      throw new Error('S-Group not empty!')\n    }\n\n    if (FunctionalGroup.isFunctionalGroup(sgroup.item)) {\n      let relatedFGroupId\n      this.data.name = sgroup.item.data.name\n      this.data.expanded = sgroup.item.expanded\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid\n        }\n      })\n      restruct.molecule.functionalGroups.delete(relatedFGroupId)\n    }\n\n    restruct.sgroups.delete(sgid)\n    struct.sgroups.delete(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupCreate()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupCreate, SGroupDelete }\nexport * from './sgroupAtom'\nexport * from './SGroupAttr'\nexport * from './SGroupDataMove'\nexport * from './sgroupHierarchy'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct, ReText } from '../../../render'\nimport { Text, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\ninterface TextCreateData {\n  id?: number\n  content: string\n  pos: Array<Vec2>\n  position: Vec2\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE)\n    this.data = { content: content, position, pos, id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data)\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item)\n      this.data.id = index\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.texts.set(itemId, new ReText(item))\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position))\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1)\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!)\n  }\n}\n\ninterface TextDeleteData {\n  id: number\n  content?: string\n  position?: Vec2\n  pos?: Array<Vec2> | []\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE)\n    this.data = { id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const item = struct.texts.get(this.data.id)!\n    if (!item) return\n\n    this.data.content = item.content!\n    this.data.position = item.position\n\n    restruct.markItemRemoved()\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel)\n    restruct.texts.delete(this.data.id)\n\n    struct.texts.delete(this.data.id)\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ninterface TextUpdateData {\n  id: number\n  content: string\n  previousContent?: string\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE)\n    this.data = { id, content: content }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data\n    const text = restruct.molecule.texts.get(id)\n\n    if (text) {\n      this.data.previousContent = text.content!\n      text.content = content\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!)\n\n    inverted.data.previousContent = this.data.content\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\ninterface TextMoveData {\n  id: any\n  d: any\n  noinvalidate: boolean\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData\n\n  constructor(id: any, d: any, noinvalidate: boolean) {\n    super(OperationType.TEXT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const difference = this.data.d\n    const item = struct.texts.get(id)\n\n    item?.position?.add_(difference)\n    restruct.texts\n      .get(id)\n      ?.visel.translate(Scale.obj2scaled(difference, restruct.render.options))\n\n    this.data.d = difference.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(this.data.id, this.data.d, this.data.noinvalidate)\n\n    move.data = this.data\n\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base'\nimport { ReStruct } from '../../render'\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[]\n\n  constructor(operations = []) {\n    this.operations = operations\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation)\n    }\n\n    return operation\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations)\n    return this\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct) {\n    const action = new Action()\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority\n    )\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct)\n      action.addOp(invertedOperation)\n    })\n\n    return action\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true)\n      ) === undefined\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { Bond } from 'domain/entities'\nimport { BondAttr } from '../operations'\nimport { MolSerializer } from 'domain/serializers'\n\n/**\n * @param restruct { ReStruct }\n * @param events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  events,\n  simpleFusing\n) {\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const frid = struct.getBondFragment(bid)\n  const beforeMerge = getFragmentWithBondMap(struct, frid)\n  let afterMerge: any = null\n  let pasteItems: any = null\n\n  let action = new Action()\n\n  if (true) {\n    action = simpleFusing(restruct, template, bid)\n    return Promise.resolve(action)\n  }\n\n  const molSerialzer = new MolSerializer()\n\n  return Promise.all([\n    events.aromatizeStruct\n      .dispatch(beforeMerge.frag)\n      .then((res) => molSerialzer.deserialize(res.struct)),\n    events.aromatizeStruct\n      .dispatch(tmpl)\n      .then((res) => molSerialzer.deserialize(res.struct))\n  ])\n    .then(([astruct, atmpl]) => {\n      // aromatize restruct fragment\n      const aromatizeAction = fromAromatize(\n        restruct,\n        astruct,\n        beforeMerge.bondMap\n      )\n      // merge template with fragment\n      const aromTemplate = { bid: template.bid, molecule: atmpl }\n      const templateFusingAction = simpleFusing(restruct, aromTemplate, bid)\n      pasteItems = templateFusingAction[1]\n\n      action = templateFusingAction[0].mergeWith(aromatizeAction)\n\n      afterMerge = getFragmentWithBondMap(restruct.molecule, frid)\n\n      return events.dearomatizeStruct\n        .dispatch(afterMerge.frag)\n        .then((res) => molSerialzer.deserialize(res.struct))\n    })\n    .then((destruct) => {\n      destruct.bonds.forEach((bond) => {\n        if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n          throw Error('Bad dearomatize')\n        }\n      })\n\n      // dearomatize restruct fragment\n      const dearomatizeAction = fromDearomatize(\n        restruct,\n        destruct,\n        afterMerge.bondMap\n      )\n      action = dearomatizeAction.mergeWith(action)\n\n      return [action, pasteItems]\n    })\n    .catch((err) => {\n      console.info(err.message)\n      action.perform(restruct) // revert actions if error\n\n      return simpleFusing(restruct, template, bid)\n    })\n}\n\nfunction fromAromatize(restruct, astruct, bondMap) {\n  const action = new Action()\n\n  astruct.bonds.forEach((bond, bid) => {\n    if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) return\n    action.addOp(\n      new BondAttr(\n        bondMap.get(bid),\n        'type',\n        Bond.PATTERN.TYPE.AROMATIC\n      ).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param dastruct { ReStruct }\n * @param bondMap { Map<number, number> }\n * @returns { Action }\n */\nfunction fromDearomatize(restruct, dastruct, bondMap) {\n  const action = new Action()\n\n  dastruct.bonds.forEach((bond, bid) => {\n    action.addOp(\n      new BondAttr(bondMap.get(bid), 'type', bond.type).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/* UTILS */\n\n// function canBeAromatized(struct) {\n//   // TODO correct this checking && move to chem.Struct ??\n//   if (struct.loops.size === 0) struct.prepareLoopStructure()\n//\n//   const hasAromLoop = struct.loops.find((_id, loop) => loop.aromatic)\n//   if (struct.loops.size === 0 || hasAromLoop) return false\n//\n//   const correctDblBonds = struct.loops.find(\n//     (_id, loop) => loop.dblBonds === loop.hbs.length / 2\n//   )\n//\n//   return correctDblBonds !== undefined\n// }\n\n/**\n * @param struct { Struct }\n * @param frid { number }\n * @returns {{\n * \t\tfrag: Struct,\n * \t\tbondMap: Map<number, number>\n *  }}\n */\nfunction getFragmentWithBondMap(struct, frid) {\n  const atomSet = struct.getFragmentIds(frid)\n  const atomsInStruct = Array.from(atomSet)\n\n  const frag = struct.clone(atomSet)\n  const bondMap = new Map()\n  frag.bonds.forEach((bond, bid) => {\n    bondMap.set(\n      bid,\n      struct.findBondId(atomsInStruct[bond.begin], atomsInStruct[bond.end])\n    )\n  })\n\n  return { frag, bondMap }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4\nconst SELECTION_WITHIN_TEXT = 0\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText\n}\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null\n  let ret = null\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct)\n    const topX = referencePoints[0].x\n    const topY = referencePoints[0].y\n    const bottomX = referencePoints[2].x\n    const bottomY = referencePoints[2].y\n\n    const distances = []\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y)\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY)\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y)\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x)\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX)\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT)\n      }\n    }\n\n    const dist = Math.min(...distances)\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return\n\n    const dist = Vec2.dist(pos, atom.a.pp)\n\n    if (dist < minDist) {\n      closestAtom = aid\n      minDist = dist\n    }\n  })\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null\n  let closestBondCenter = null\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  let minCDist = minDist\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5)\n    const cdist = Vec2.dist(pos, mid)\n\n    if (cdist < minCDist) {\n      minCDist = cdist\n      closestBondCenter = bid\n    }\n  })\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const dir = hb.dir\n    const norm = hb.norm\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const inStripe = Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm))\n\n      if (dist < minDist) {\n        closestBond = bid\n        minDist = dist\n      }\n    }\n  })\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist\n    }\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist\n  let ret = null\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id)\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id)\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return\n\n    const dist = Math.abs(pos.y - p.y)\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected')\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist }\n        minDist = xDist\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  const struct = restruct.molecule\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist)\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist\n    }\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale)\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  let ret = null\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos)\n\n      if (!ret || dist < minDist) {\n        minDist = dist\n        ret = { id: rgid, dist: minDist }\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y))\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null\n  let minDist = SELECTION_DISTANCE_COEFFICIENT\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.functionalGroup && !sg.expanded) {\n      const firstAtomPp = sg.firstSgroupAtom.pp\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n      const shift = new Vec2(0.625, 0.625)\n      const box = {\n        p0: Vec2.diff(firstAtomPp, shift),\n        p1: Vec2.sum(firstAtomPp, shift)\n      }\n\n      const inBox =\n        box.p0.y < pg.y && box.p1.y > pg.y && box.p0.x < pg.x && box.p1.x > pg.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid\n        minDist = xDist\n      }\n    } else {\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x)\n        )\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid\n          minDist = xDist\n        }\n      })\n    }\n  })\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps)\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale)\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item\n      return {\n        map: mp,\n        id: id,\n        dist: dist,\n        ...other\n      }\n    }\n\n    return res\n  }, null)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map() // bid -> position\n  }\n\n  const struct = restruct.molecule\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp)\n  })\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid)\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5\n      )\n    )\n  })\n\n  const result = {}\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId }\n      const item = findMaps[mp](restruct, pos[mp].get(srcId), skip, null, scale)\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id)\n\n      return res\n    }, new Map())\n  })\n\n  return result\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport closest from '../shared/closest'\nimport { difference } from 'lodash'\n\nexport function atomGetAttr(restruct, aid, name) {\n  return restruct.molecule.atoms.get(aid)[name]\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length\n}\n\nexport function atomGetSGroups(restruct, aid) {\n  return Array.from(restruct.atoms.get(aid).a.sgs)\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp\n}\n\nexport function findStereoAtoms(struct, aids) {\n  return aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null)\n}\n\nexport function structSelection(struct) {\n  return [\n    'atoms',\n    'bonds',\n    'frags',\n    'sgroups',\n    'rgroups',\n    'rxnArrows',\n    'rxnPluses',\n    'simpleObjects',\n    'texts'\n  ].reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys())\n    return res\n  }, {})\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = []\n  const pos = atomGetPos(restruct, id)\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id)\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined\n  )\n  const prevBond = restruct.molecule.bonds.get(prevBondId)\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid)\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) })\n  })\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x)\n  )\n\n  let i\n  let maxI = 0\n  let angle\n  let maxAngle = 0\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v\n    )\n\n    if (angle < 0) angle += 2 * Math.PI\n\n    if (angle > maxAngle) {\n      maxI = i\n      maxAngle = angle\n    }\n  }\n\n  let v = new Vec2(1, 0)\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3)\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0]\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = []\n        const neiPos = atomGetPos(restruct, nei.aid)\n        const neiV = Vec2.diff(pos, neiPos)\n        const neiAngle = Math.atan2(neiV.y, neiV.x)\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid)\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos)\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle\n\n          if (ang < 0) ang += 2 * Math.PI\n\n          neiNeighbours.push(ang)\n        })\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2)\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE)\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x)\n    }\n\n    v = v.rotate(angle)\n  }\n\n  v.add_(pos) // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1)\n  a = a === null ? { label: 'C' } : a.id\n\n  return { atom: a, pos: v }\n}\n\nexport function getRelSgroupsBySelection(restruct, selectedAtoms) {\n  return restruct.molecule.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action()\n  action.addOp(new RGroupFragment(rgidNew, frid))\n\n  return action.perform(restruct)\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = []\n) {\n  const action = new Action()\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids))\n  }\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy\n} from '../operations'\nimport { Pile, SGroup } from 'domain/entities'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\n\nimport { Action } from './action'\nimport { SgContexts } from '..'\nimport { uniq } from 'lodash/fp'\nimport { fromAtomsAttrs } from './atom'\n\nexport function fromSeveralSgroupAddition(restruct, type, atoms, attrs) {\n  const descriptors = attrs.fieldValue\n\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId()\n    )\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs)\n    localAttrs.fieldValue = fValue\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId()\n      )\n    )\n  }, new Action())\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function setExpandSGroup(restruct, sgid, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]))\n  })\n\n  const sgroup = restruct.molecule.sgroups.get(sgid)\n  if (sgroup.firstSgroupAtom) delete sgroup.firstSgroupAtom\n  const atoms = SGroup.getAtoms(restruct, sgroup)\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid).a, false)\n    )\n  })\n\n  return action.perform(restruct)\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action\n}\n\nexport function fromSgroupDeletion(restruct, id) {\n  let action = new Action()\n  const struct = restruct.molecule\n\n  const sG = restruct.sgroups.get(id).item\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds()\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'))\n      }\n    })\n  }\n\n  const sg = struct.sgroups.get(id)\n  const atoms = SGroup.getAtoms(struct, sg)\n  const attrs = sg.getAttrs()\n\n  action.addOp(new SGroupRemoveFromHierarchy(id))\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom))\n  })\n\n  action.addOp(new SGroupDelete(id))\n\n  action = action.perform(restruct)\n\n  action.mergeWith(sGroupAttributeAction(id, attrs))\n\n  return action\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  pp?,\n  expanded?,\n  name?\n) {\n  // eslint-disable-line\n  let action = new Action()\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId()\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name))\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp))\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom))\n  })\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, [])\n  )\n\n  action = action.perform(restruct)\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds()\n    let asteriskAction = new Action()\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon()\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'))\n      }\n    })\n\n    asteriskAction = asteriskAction.perform(restruct)\n    asteriskAction.mergeWith(action)\n    action = asteriskAction\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action)\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection)\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds)\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds))\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys())\n    )\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms)\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      sourceAtoms,\n      newSg.attrs\n    )\n  }\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs)\n      )\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment)\n  )\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a\n        if (fragId === atom.fragment) res.push(aid)\n\n        return res\n      }, [])\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs)\n      )\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms)\n      acc.selection.bonds = acc.selection.bonds.concat(bonds)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule\n  let bonds = getAtomsBondIds(struct, sourceAtoms)\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds))\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs\n        )\n      )\n\n      acc.selection.bonds.push(bondid)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms)\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds\n    }\n  }\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id)\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id))\n    })\n\n    return true\n  }\n\n  return false\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct, atoms) {\n  const struct = restruct.molecule\n  const sgCounts = new Map()\n\n  atoms.forEach((id) => {\n    const sgroups = atomGetSGroups(restruct, id)\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1)\n    })\n  })\n\n  sgCounts.forEach((count, sid) => {\n    const sG = restruct.sgroups.get(sid).item\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sG)\n\n    if (sgAtoms.length === count) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid)\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()))\n      action.addOp(new SGroupRemoveFromHierarchy(sid))\n      action.addOp(new SGroupDelete(sid))\n    }\n  })\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms)\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid)\n    return atomSet.has(bond.begin) && atomSet.has(bond.end)\n  })\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || []\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid)\n    acc = acc.concat([bond.begin, bond.end])\n    return acc\n  }, [])\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag\n} from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups\n} from './atom'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { StereoValidator } from 'domain/helpers'\nimport utils from '../shared/utils'\n\nexport function fromBondAddition(\n  restruct: ReStruct,\n  bond: any,\n  begin: any,\n  end: any,\n  pos?: Vec2,\n  pos2?: Vec2\n): [Action, number, number, number] {\n  // eslint-disable-line\n  if (end === undefined) {\n    const atom = atomForNewBond(restruct, begin, bond)\n    end = atom.atom\n    pos = atom.pos\n  }\n  const action = new Action()\n  const struct = restruct.molecule\n  let mergeFragments = false\n\n  let frid = null\n\n  if (!(typeof begin === 'number')) {\n    if (typeof end === 'number') frid = atomGetAttr(restruct, end, 'fragment')\n  } else {\n    frid = atomGetAttr(restruct, begin, 'fragment')\n    if (typeof end === 'number') mergeFragments = true\n  }\n\n  if (frid == null) {\n    frid = (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd)\n      .frid\n  }\n\n  if (!(typeof begin === 'number')) {\n    begin.fragment = frid\n    begin = (action.addOp(new AtomAdd(begin, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof end === 'number') mergeSgroups(action, restruct, [begin], end)\n    pos = pos2\n  } else if (atomGetAttr(restruct, begin, 'label') === '*') {\n    action.addOp(new AtomAttr(begin, 'label', 'C').perform(restruct))\n  }\n\n  if (!(typeof end === 'number')) {\n    end.fragment = frid\n    // TODO: <op>.data.aid here is a hack, need a better way to access the id of a created atom\n    end = (action.addOp(new AtomAdd(end, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof begin === 'number') mergeSgroups(action, restruct, [end], begin)\n  } else if (atomGetAttr(restruct, end, 'label') === '*') {\n    action.addOp(new AtomAttr(end, 'label', 'C').perform(restruct))\n  }\n\n  const bid = (\n    action.addOp(new BondAdd(begin, end, bond).perform(restruct)) as BondAdd\n  ).data.bid\n\n  const bnd = struct.bonds.get(bid)\n\n  if (bnd) {\n    action.addOp(new CalcImplicitH([bnd.begin, bnd.end]).perform(restruct))\n    action.mergeWith(fromBondStereoUpdate(restruct, bnd))\n  }\n\n  action.operations.reverse()\n\n  if (mergeFragments) mergeFragmentsIfNeeded(action, restruct, begin, end)\n\n  if (struct.frags.get(frid || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(new FragmentStereoFlag(frid || 0).perform(restruct))\n  }\n\n  return [action, begin, end, bid]\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean\n): Action {\n  const struct = restruct.molecule\n  const action = new Action()\n  const bids = Array.isArray(ids) ? ids : [ids]\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key)\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct))\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid)\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct)\n          )\n          action.mergeWith(fromBondStereoUpdate(restruct, bond))\n        }\n      }\n    })\n  })\n\n  return action\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>\n): Action {\n  const struct = restruct.molecule\n\n  const atomPairs = new Map()\n  let action = new Action()\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n    if (!bond || !bondCI) return\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI)\n    if (!params.merged) return\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end)\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin)\n  })\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n  })\n\n  return action\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id)\n\n  const action = new Action()\n  action.addOp(new BondDelete(id).perform(restruct))\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct))\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean\n): Action {\n  const action = new Action()\n  const struct = restruct.molecule\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment\n  const endFrId = struct.atoms.get(bond?.end)?.fragment\n\n  const fragmentStereoBonds: Array<Bond> = []\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond)\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond)\n    }\n  })\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond)\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse)\n      )\n    }\n  })\n\n  return action\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond\n) {\n  const stereoAtomsMap = new Map()\n  const correctAtomIds: Array<number> = []\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin\n      )\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end\n      )\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`\n          })\n        }\n        correctAtomIds.push(bond.begin)\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n      }\n    }\n  })\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n  }\n\n  return stereoAtomsMap\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD\n      break\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER\n      break\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN\n      break\n  }\n  return newAtomParity\n}\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any\n): Action {\n  const action = new Action()\n  let newItemId = itemID\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID))\n    newItemId = (action.operations[1] as BondAdd).data.bid\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length]\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action)\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE\n]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, RGroup } from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd\n} from '../operations'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport { fromBondStereoUpdate } from './bond'\nimport { without } from 'lodash/fp'\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom)\n  const action = new Action()\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid\n  action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param ids { Array<number>|number }\n * @param attrs { object }\n * @param reset { boolean? }\n */\nexport function fromAtomsAttrs(restruct, ids, attrs, reset) {\n  const action = new Action()\n  const aids = Array.isArray(ids) ? ids : [ids]\n\n  aids.forEach((aid) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attpnt' && !(key in attrs)) return\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key)\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        default:\n          action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          break\n      }\n    })\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(aid, 'atomList', null).perform(restruct))\n    }\n\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(aid)\n    const bond = restruct.molecule.bonds.get(atomNeighbors[0]?.bid)\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond))\n    }\n  })\n\n  return action\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action()\n  const atom = restruct.molecule.atoms.get(aid)\n  if (atom) {\n    const frid = atom.fragment\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct)\n      )\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct)\n      )\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct))\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct))\n      }\n    }\n    if (withReverse) action.operations.reverse()\n  }\n\n  return action\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action()\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const oldfrid = atom.fragment\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid))\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid))\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid))\n    }\n  })\n\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action()\n\n  const fragAction = new Action()\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId)\n\n  const action = new Action()\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId)\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid)\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid))\n      return\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId\n    const end = bond.begin === nei.aid ? dstId : nei.aid\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end)\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond))\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond)\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]))\n      })\n    }\n\n    action.addOp(new BondDelete(nei.bid))\n  })\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId))\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C'\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]))\n    }\n  })\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId)\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId])\n\n  action.addOp(new AtomDelete(srcId))\n  action.addOp(new CalcImplicitH([dstId]))\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId)\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid\n  )\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond))\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment')\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment')\n  if (frid2 === frid || typeof frid2 !== 'number') return\n\n  const struct = restruct.molecule\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2)\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid))\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid)\n\n  const atomsToNewFrag: Array<any> = []\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid)\n  })\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid)\n\n  mergeSgroups(action, restruct, fridAtoms, dstId)\n  action.addOp(new FragmentDelete(frid2).perform(restruct))\n  action.mergeWith(moveAtomsAction)\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom)\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid)\n    const notExpandedContexts = ['Atom', 'Bond', 'Group']\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms)\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct))\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action()\n\n  action.addOp(new CanvasLoad(struct))\n  return action.perform(restruct)\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action()\n  action.addOp(new AlignDescriptors())\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { atomGetAttr } from './utils'\nimport { fromBondAddition } from './bond'\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6)\n  const dy = Math.sin(Math.PI / 6)\n\n  let action = new Action()\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: []\n  }\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct)\n          ) as AtomAdd\n        ).data.aid\n\n  chainItems.atoms.push(id0)\n  action.operations.reverse()\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0)\n\n    const ret = fromBondAddition(restruct, {}, id0, {}, pos)\n    action = ret[0].mergeWith(action)\n    id0 = ret[2]\n    chainItems.bonds.push(ret[3])\n    chainItems.atoms.push(id0)\n  }\n\n  return [action, chainItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { fromAtomMerge } from './atom'\nimport { fromBondsMerge } from './bond'\nimport utils from '../shared/utils'\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action()\n\n  if (!items) return action\n\n  const usedAtoms = new Set()\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n    usedAtoms.add(dst).add(src)\n  })\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action)\n\n  return action\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys())\n  }\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds'])\n  )\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values())\n  }\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems }\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds)\n  }\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin)\n      mergeMap.atoms.delete(bond.end)\n    } else {\n      mergeMap.bonds.delete(srcId)\n    }\n  })\n\n  if (mergeMap.atoms.size === 0 && mergeMap.bonds.size === 0) return null\n\n  return mergeMap\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove\n} from '../operations'\nimport { Pile, RGroup, Vec2 } from 'domain/entities'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { fromAtomsFragmentAttr } from './atom'\nimport { getRelSgroupsBySelection } from './utils'\n\nexport function fromMultipleMove(restruct, lists, d) {\n  d = new Vec2(d)\n\n  const action = new Action()\n  const struct = restruct.molecule\n  const loops = new Pile()\n  const atomsToInvalidate = new Pile()\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms)\n    const bondlist: Array<number> = []\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid)\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ;['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop\n          if (loop >= 0) loops.add(loop)\n        })\n        return\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin)\n        return\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end)\n    })\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d))\n    })\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d))\n      }\n    })\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)))\n    })\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSgroupsBySelection(restruct, lists.atoms)\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d))\n      })\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true))\n    })\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true))\n    })\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true))\n    })\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d))\n    })\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d))\n    })\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true))\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action()\n\n  if (!flag) {\n    const struct = restruct.molecule\n    const frag = restruct.molecule.frags.get(frid)\n    frag.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid))\n      }\n    })\n  }\n\n  action.addOp(new FragmentStereoFlag(frid))\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid]\n  const usedIds = new Pile(queue)\n\n  while (queue.length > 0) {\n    const id = queue.shift()\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid)\n        queue.push(nei.aid)\n      }\n    })\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = []\n) {\n  const action = new Action()\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid))\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid))\n    }\n  })\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid))\n    action.addOp(new FragmentDelete(frid).perform(restruct))\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove))\n  }\n\n  action.operations.reverse()\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SimpleObjectDelete,\n  TextDelete\n} from '../operations'\nimport { Pile, RGroup } from 'domain/entities'\nimport {\n  fromSgroupDeletion,\n  removeAtomFromSgroupIfNeeded,\n  removeSgroupIfNeeded\n} from './sgroup'\n\nimport { Action } from './action'\nimport assert from 'assert'\nimport { atomGetDegree } from './utils'\nimport { fromBondStereoUpdate } from '../actions/bond'\nimport { fromFragmentSplit } from './fragment'\n\nexport function fromOneAtomDeletion(restruct, id) {\n  return fromFragmentDeletion(restruct, { atoms: [id] })\n}\n\nfunction fromBondDeletion(restruct, bid: number, skipAtoms: Array<any> = []) {\n  let action = new Action()\n  const bond: any = restruct.molecule.bonds.get(bid)\n  const atomsToRemove: Array<any> = []\n\n  action.addOp(new BondDelete(bid))\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 1\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin)\n    }\n\n    action.addOp(new AtomDelete(bond.begin))\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 1\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end)\n    }\n\n    action.addOp(new AtomDelete(bond.end))\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n  action = action.perform(restruct)\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct))\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false))\n\n  action.operations.reverse()\n\n  return action\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id)\n  let action = fromBondDeletion(restruct, id)\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action)\n\n  return action\n}\n\nexport function fromFragmentDeletion(restruct, selection) {\n  assert(!!selection != null)\n\n  let action = new Action()\n  const atomsToRemove: Array<number> = []\n  const frids: Array<number> = []\n\n  selection = {\n    // TODO: refactor me\n    atoms: selection.atoms || [],\n    bonds: selection.bonds || [],\n    rxnPluses: selection.rxnPluses || [],\n    rxnArrows: selection.rxnArrows || [],\n    sgroupData: selection.sgroupData || [],\n    simpleObjects: selection.simpleObjects || [],\n    texts: selection.texts || []\n  }\n\n  const actionRemoveDataSGroups = new Action()\n  restruct.molecule.sgroups.forEach((sg, id) => {\n    if (\n      selection.sgroupData.includes(id) ||\n      new Pile(selection.atoms).isSuperset(new Pile(sg.atoms))\n    ) {\n      actionRemoveDataSGroups.mergeWith(fromSgroupDeletion(restruct, id))\n    }\n  })\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid])\n      }\n    })\n  })\n\n  const actionRemoveBonds = new Action()\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid)\n    if (frids.indexOf(frid) < 0) frids.push(frid)\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms)\n    )\n  })\n\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment\n    if (frids.indexOf(frid3) < 0) frids.push(frid3)\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid)\n    }\n\n    action.addOp(new AtomDelete(aid))\n  })\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id))\n  })\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id))\n  })\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id))\n  })\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id))\n  })\n\n  action = action.perform(restruct)\n  action.mergeWith(actionRemoveBonds)\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!\n  )\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action\n    )\n  }\n\n  action.mergeWith(actionRemoveDataSGroups)\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH\n} from '../operations'\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromPaste(restruct, pstruct, point, angle = 0) {\n  const xy0 = getStructCenter(pstruct)\n  const offset = Vec2.diff(point, xy0)\n\n  const action = new Action()\n\n  const aidMap = new Map()\n  const fridMap = new Map()\n\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment)) {\n      fridMap.set(\n        atom.fragment,\n        (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n      )\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment)\n    })\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point)\n    ).perform(restruct) as AtomAdd\n    action.addOp(operation)\n    aidMap.set(aid, operation.data.aid)\n\n    pasteItems.atoms.push(operation.data.aid)\n  })\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct\n        )\n      )\n    )\n  })\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n  })\n\n  pstruct.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.data.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct))\n  })\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset))\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct)\n      )\n    })\n    const ifThen = pstruct.rgroups.get(rgid).ifthen\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen))\n  })\n\n  action.operations.reverse()\n  return [action, pasteItems]\n}\n\nfunction getStructCenter(struct) {\n  // TODO: Review, function may not work sometimes\n  const onlyOneStructsSgroupId = struct.sgroups.keys().next().value\n  if (\n    struct.sgroups.size === 1 &&\n    !struct.sgroups.get(onlyOneStructsSgroupId).data.expanded\n  ) {\n    return struct.atoms.get(0).pp\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50\n    let ymin = xmin\n    let xmax = -xmin\n    let ymax = -ymin\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x)\n      ymin = Math.min(ymin, atom.pp.y)\n      xmax = Math.max(xmax, atom.pp.x)\n      ymax = Math.max(ymax, atom.pp.y)\n    })\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2) // TODO: check\n  }\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0).center()\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0).pp\n  if (struct.simpleObjects.size > 0) return struct.simpleObjects.get(0).center()\n  if (struct.texts.size > 0) return struct.texts.get(0).position\n\n  return null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action()\n  action.addOp(new RxnArrowAdd(pos, mode))\n  return action.perform(restruct)\n}\n\nexport function fromArrowResizing(restruct, id, d, current, anchor) {\n  const action = new Action()\n  action.addOp(new RxnArrowResize(id, d, current, anchor, false))\n  return action.perform(restruct)\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnArrowDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action()\n  action.addOp(new RxnPlusAdd(pos).perform(restruct))\n  return action\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnPlusDelete(id))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove\n} from '../operations'\nimport { Bond, Fragment, Pile, Vec2 } from 'domain/entities'\nimport { getRelSgroupsBySelection, structSelection } from './utils'\n\nimport { Action } from './action'\nimport utils from '../shared/utils'\n\nexport function fromFlip(restruct, selection, dir, center) {\n  // eslint-disable-line max-statements\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (!selection.atoms) {\n    return action.perform(restruct)\n  }\n\n  const fids = selection.atoms.reduce((acc, aid) => {\n    const atom = struct.atoms.get(aid)\n\n    if (!acc[atom.fragment]) {\n      acc[atom.fragment] = []\n    }\n\n    acc[atom.fragment].push(aid)\n    return acc\n  }, {})\n\n  const fidsNumberKeys = Object.keys(fids).map((frag) => parseInt(frag, 10))\n\n  const isFragFound = fidsNumberKeys.find((frag) => {\n    const allFragmentsOfStructure = struct.getFragmentIds(frag)\n    const selectedFragmentsOfStructure = new Pile(fids[frag])\n    const res = allFragmentsOfStructure.equals(selectedFragmentsOfStructure)\n    return !res\n  })\n\n  if (typeof isFragFound === 'number') {\n    return action // empty action\n  }\n\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    const bbox = struct.getCoordBoundingBox(fragment)\n    const calcCenter =\n      center ||\n      new Vec2((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2)\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, calcCenter, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, calcCenter, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  if (selection.bonds) {\n    selection.bonds.forEach((bid) => {\n      const bond = struct.bonds.get(bid)\n\n      if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.DOWN))\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.UP))\n      }\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nfunction flipItemByCenter(item, center, dir) {\n  const d = new Vec2()\n  /* eslint-disable no-mixed-operators */\n  if (dir === 'horizontal') {\n    d.x =\n      center.x > item.pp.x\n        ? 2 * (center.x - item.pp.x)\n        : -2 * (item.pp.x - center.x)\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > item.pp.y\n        ? 2 * (center.y - item.pp.y)\n        : -2 * (item.pp.y - center.y)\n  }\n  /* eslint-enable no-mixed-operators */\n  return d\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)))\n    })\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSgroupsBySelection(restruct, selection.atoms)\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle))\n        )\n      })\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((aid) => {\n      const arrow = struct.rxnArrows.get(aid)\n      action.addOp(\n        new RxnArrowMove(aid, rotateDelta(arrow.center(), center, angle))\n      )\n    })\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid)\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)))\n    })\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did)\n      action.addOp(new SGroupDataMove(did, rotateDelta(data.pp, center, angle)))\n    })\n  }\n\n  const stereoFlags =\n    selection.enhancedFlags || Array.from(restruct.enhancedFlags.keys())\n  if (stereoFlags) {\n    stereoFlags.forEach((flagId) => {\n      const frId = flagId\n      const frag = restruct.molecule.frags.get(frId)\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle\n          )\n        )\n      )\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromBondAlign(restruct, bid, dir) {\n  const struct = restruct.molecule\n  const bond = struct.bonds.get(bid)\n  const begin = struct.atoms.get(bond.begin)\n  const end = struct.atoms.get(bond.end)\n\n  const center = begin.pp.add(end.pp).scaled(0.5)\n  let angle = utils.calcAngle(begin.pp, end.pp)\n  const atoms = Array.from(struct.getFragmentIds(begin.fragment))\n\n  // TODO: choose minimal angle\n  angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle\n\n  if (angle === 0 || Math.abs(angle) === Math.PI) {\n    return fromFlip(restruct, { atoms }, dir, center)\n  }\n\n  return fromRotate(restruct, { atoms }, center, angle)\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center)\n  v1 = v1.rotate(angle)\n  v1.add_(center) // eslint-disable-line no-underscore-dangle\n  return v1.sub(v)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new SimpleObjectDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action()\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle\n) {\n  const action = new Action()\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Vec2 } from 'domain/entities'\nimport { AtomAdd, BondAdd, CalcImplicitH } from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport { fromAtomsAttrs, mergeSgroups } from './atom'\nimport { fromBondAddition, fromBondStereoUpdate, fromBondsAttrs } from './bond'\n\nimport { Action } from './action'\nimport closest from '../shared/closest'\nimport { fromAromaticTemplateOnBond } from './aromaticFusing'\nimport { fromPaste } from './paste'\nimport utils from '../shared/utils'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromTemplateOnCanvas(restruct, template, pos, angle) {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle\n  )\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n\n  return [action, pasteItems]\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action()\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n  let additionalAtom: any = null\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid)\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      middleAtom.pos.get_xy0()\n    )\n    action = actionRes[0]\n    action.operations.reverse()\n    additionalAtom = actionRes[2]\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0()\n    ).perform(restruct) as AtomAdd\n\n    action.addOp(operation)\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct)\n    )\n\n    additionalAtom = operation.data.aid\n  }\n\n  return { action, aid1: additionalAtom }\n}\n\nexport function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {\n  let action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  let atom = struct.atoms.get(aid) // aid - the atom that was clicked on\n  let aid1 = aid // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle)\n    action = extraRes.action\n    aid1 = extraRes.aid1\n\n    atom = struct.atoms.get(aid1)\n    delta = utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos)\n    }\n    delta = angle - template.angle0\n  }\n\n  const map = new Map()\n  const xy0 = tmpl.atoms.get(template.aid).pp\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a)\n    attrs.fragment = frid\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true))\n      map.set(id, aid1)\n      pasteItems.atoms.push(aid1)\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp)\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct\n      ) as AtomAdd\n      action.addOp(operation)\n      map.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, aid)\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  tmpl.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      atom.pp,\n      sg.type === 'SUP' ? sg.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  action.operations.reverse()\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0])\n    )\n  )\n\n  return [action, pasteItems]\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip)\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip) // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing\n  )\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip) {\n  // TODO: refactor function !!\n  const action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const bond = struct.bonds.get(bid)\n  const tmplBond = tmpl.bonds.get(template.bid)\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin)\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end]\n  ])\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end\n  }\n  const { angle, scale } = utils.mergeBondsParams(struct, bond, tmpl, bondAtoms)\n\n  const frid = struct.getBondFragment(bid)\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom)\n    attrs.fragment = frid\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      return\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp)\n    const mergeA = closest.atom(restruct, v, null, 0.1)\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd\n      action.addOp(operation)\n      atomsMap.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    } else {\n      atomsMap.set(id, mergeA.id)\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      // TODO [RB] need to merge fragments?\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin)\n\n  tmpl.bonds.forEach((tBond) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end)\n    )\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond\n      ).perform(restruct) as BondAdd\n      action.addOp(operation)\n\n      pasteItems.bonds.push(operation.data.bid)\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true))\n    }\n  })\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct\n      )\n    )\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0])\n      )\n    )\n  }\n\n  action.operations.reverse()\n\n  return [action, pasteItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>\n) {\n  const action = new Action()\n  action.addOp(new TextCreate(content, position, pos))\n  return action.perform(restruct)\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string\n) {\n  const action = new Action()\n  action.addOp(new TextUpdate(id, content))\n  return action.perform(restruct)\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action()\n\n  action.addOp(new TextDelete(id))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Highlight } from 'domain/entities'\nimport { ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\n\ntype Data = {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n  highlightId?: number\n}\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number\n  ) {\n    super(OperationType.ADD_HIGHLIGHT)\n    this.data = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data\n\n    if (!color) {\n      return\n    }\n\n    const struct = restruct.molecule\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color\n    })\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight)\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight)\n    }\n\n    notifyChanged(restruct, atoms, bonds)\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color)\n    return inverted\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5)\n    this.data = {\n      highlightId: highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white'\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId)\n      if (typeof highlightToRemove === 'undefined') {\n        return\n      }\n\n      const { atoms, bonds, color } = highlightToRemove\n\n      this.data.atoms = atoms\n      this.data.bonds = bonds\n      this.data.color = color\n\n      struct.highlights.delete(this.data.highlightId)\n      notifyChanged(restruct, atoms, bonds)\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId)\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number }\n  oldData: Data & { highlightId: number }\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT)\n    this.newData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData\n    if (!color) {\n      return\n    }\n\n    const highlightId = this.newData.highlightId\n    const struct = restruct.molecule\n\n    const highlightToUpdate = struct.highlights.get(highlightId)\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor\n      } = highlightToUpdate\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId\n      }\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color\n      })\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight)\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds])\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color\n    )\n    return inverted\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms\n  const reBonds = restruct.bonds\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1)\n      }\n    })\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1)\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render'\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight'\n\nimport { Action } from './action'\n\ntype HighlightType = {\n  atoms: number[]\n  bonds: number[]\n  color: string\n}\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[]\n): Action {\n  const action = new Action()\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight\n\n    action.addOp(new HighlightAdd(atoms, bonds, color))\n  })\n  return action.perform(restruct)\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key))\n  })\n\n  return action.perform(restruct)\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils'\n\n// TODO: delete it\nexport const fracAngle = utils.fracAngle\nexport * from './operations'\nexport * from './actions'\nexport * from './shared/constants'\nexport * from './editor.types'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService\n} from 'domain/services'\nimport { StructOrString } from 'application/indigo.types'\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d'\n]\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition'\n]\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType\n}\ntype AutomapOptions = {\n  mode?: AutomapMode\n}\ntype CheckOptions = {\n  types?: Array<CheckTypes>\n}\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>\n}\ntype RecognizeOptions = {\n  version?: string\n}\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType\n  backgroundColor?: string\n}\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map()\n    const result = struct.clone(null, null, false, aidMap)\n\n    return serializer.serialize(result)\n  }\n\n  return struct\n}\n\nexport class Indigo {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n\n  constructor(structService) {\n    this.#structService = structService\n    this.#ketSerializer = new KetSerializer()\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info()\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat\n    })\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard'\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types\n    })\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties\n    })\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || ''\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png'\n    const backgroundColor = options?.backgroundColor || ''\n\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor\n      }\n    )\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat\n} from './formatters'\nimport { GenerateImageOptions, StructService } from 'domain/services'\n\nimport { Editor } from './editor'\nimport { Indigo } from 'application/indigo'\nimport { MolfileFormat } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport assert from 'assert'\nimport { EventEmitter } from 'events'\nimport { runAsyncAction } from 'utilities'\n\nasync function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.setImplicitHydrogen()\n  struct.markFragments()\n\n  return struct\n}\n\nfunction parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n) {\n  const format = identifyStructFormat(structStr)\n  const factory = new FormatterFactory(structService)\n  const options = ketcherInstance.editor.options()\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load']\n  })\n  return service.getStructureFromStringAsync(structStr)\n}\n\nfunction getStructure(\n  structureFormat: SupportedFormat = 'rxn',\n  formatterFactory: FormatterFactory,\n  struct: Struct\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat)\n  return formatter.getStructureFromStructAsync(struct)\n}\n\nexport class Ketcher {\n  #structService: StructService\n  #formatterFactory: FormatterFactory\n  #editor: Editor\n  #indigo: Indigo\n  #eventBus: EventEmitter\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory\n  ) {\n    assert(editor != null)\n    assert(structService != null)\n    assert(formatterFactory != null)\n\n    this.#editor = editor\n    this.#structService = structService\n    this.#formatterFactory = formatterFactory\n    this.#indigo = new Indigo(this.#structService)\n    this.#eventBus = new EventEmitter()\n  }\n\n  get indigo() {\n    return this.#indigo\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options()\n\n    if ('dearomatize-on-load' in options) {\n      return {\n        'general.dearomatize-on-load': options['dearomatize-on-load']\n      }\n    }\n    throw new Error('dearomatize-on-load option is not provided!')\n  }\n\n  // TODO: create optoions type\n  setSettings(settings: Record<string, string>) {\n    if (!settings) {\n      throw new Error('Please provide settings')\n    }\n\n    // eslint-disable-next-line prefer-const\n    let options = {}\n    if ('general.dearomatize-on-load' in settings) {\n      options['dearomatize-on-load'] = settings['general.dearomatize-on-load']\n    }\n    return this.#editor.setOptions(JSON.stringify(options))\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    const format: SupportedFormat = isExtended ? 'smilesExt' : 'smiles'\n    return getStructure(format, this.#formatterFactory, this.editor.struct())\n  }\n\n  async getMolfile(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrrows.'\n      )\n    }\n\n    const format: SupportedFormat =\n      molfileFormat === 'v3000' ? 'molV3000' : 'mol'\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return molfile\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.'\n      )\n    }\n    const format: SupportedFormat =\n      molfileFormat === 'v3000' ? 'rxnV3000' : 'rxn'\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return rxnfile\n  }\n\n  getKet(): Promise<string> {\n    return getStructure('ket', this.#formatterFactory, this.#editor.struct())\n  }\n\n  getSmarts(): Promise<string> {\n    return getStructure('smarts', this.#formatterFactory, this.#editor.struct())\n  }\n\n  getCml(): Promise<string> {\n    return getStructure('cml', this.#formatterFactory, this.#editor.struct())\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? 'inChIAuxInfo' : 'inChI',\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  async generateInchIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      'ket',\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return this.#structService.generateInchIKey(struct)\n  }\n\n  containsReaction(): boolean {\n    return this.editor.struct().hasRxnArrow()\n  }\n\n  async setMolecule(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.struct(struct)\n    }, this.eventBus)\n  }\n\n  async addFragment(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.structToAddFragment(struct)\n    }, this.eventBus)\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    return this.#indigo.recognize(image, { version: version })\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = { outputFormat: 'png' }\n  ): Promise<Blob> {\n    let meta = ''\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml'\n        break\n\n      case 'png':\n      default:\n        meta = 'image/png'\n        options.outputFormat = 'png'\n    }\n\n    const base64 = await this.#structService.generateImageAsBase64(\n      data,\n      options\n    )\n    const byteCharacters = atob(base64)\n    const byteNumbers = new Array(byteCharacters.length)\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i)\n    }\n    const byteArray = new Uint8Array(byteNumbers)\n    const blob = new Blob([byteArray], { type: meta })\n    return blob\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { Editor } from 'application/editor'\nimport { FormatterFactory } from 'application/formatters'\nimport { Ketcher } from './ketcher'\nimport assert from 'assert'\n\nconst DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false\n}\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider\n    return this\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null)\n    assert(this.#structServiceProvider != null)\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions\n    }\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions)\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService)\n    )\n    ketcher[this.#structServiceProvider.mode] = true\n\n    return ketcher\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","Generics","itemSets","displayName","items","description","subGroups","AtomList","params","notList","ids","labels","_createForOfIteratorHelper","id","currenElement","push","labelList","join","atomList","sort","toString","Vec2","args","length","x","y","z","arguments","parseFloat","Error","Math","sqrt","v","s","y1","f","scaled","l","toFixed","assert","max","min","ceil","floor","angle","sin","cos","rotateSC","atan2","a","b","diff","v1","v2","cross","dot","i","addScaled","f1","f2","lc2","Pile","_createSuper","item","setB","isSuperset","subset","has","expression","Array","from","union","add","Set","getValueOrDefault","value","defaultValue","getPseudo","radicalElectrons","radical","Atom","PATTERN","RADICAL","DOUPLET","SINGLET","TRIPLET","StereoLabel","attributes","fragment","alias","attrlist","isotope","charge","rglabel","attpnt","explicitValence","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","Object","defineProperty","enumerable","fidMap","ret","conn","isQuery","groupno","rad","hyd","absCharge","abs","atom","attrs","attr","NONE","STEREO_PARITY","ODD","EVEN","EITHER","Bond","begin","end","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","center","struct","p1","atoms","p2","sub","normalized","aidMap","cp","bond","TYPE","SINGLE","DOUBLE","TRIPLE","AROMATIC","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","ANY","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","undefined","filteredStereoAtoms","map","aid","hasAnotherLabel","some","stereoFlag","Mixed","match","Abs","And","Or","Fragment","stereoAtoms","stereoFlagPosition","_classPrivateFieldInitSpec","fr","frId","isAdd","includes","bonds","values","atomId","fragmentId","getFragment","bb","getCoordBoundingBox","scaled2obj","options","scale","obj2scaled","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","beginAtom","EndAtomNeigh","NaN","Number","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","list","instance","Box2Abs","p0","lp","rb","p","ext","d","centre","relBox","width","height","b1","b2","c","dc","dd","da","db","SGroupBracketParams","w","h","n","SGroup","bracketBox","bracketDir","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","data","mul","connectivity","name","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","keys","forEach","oldValue","offset","sum","topLeftPoint","context","contentBoxes","contentBB","direction","pos","bba","extend","bbb","include","sgroups","size","descriptorIntersects","sAtom","sAtomPP","getMassCentre","sgroup","newAtoms","j","_mol","sg","atomMap","removeNegative","filterAtoms","field","elem","allAtoms","splice","mol","parentAtomSet","crossBonds","bid","sGroup","crossBondsPerAtom","flat","getCenter","braketBox","vext","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","sz","cl","cr","bracketHeight","negated","cl0","cr0","dr","dl","getDir","a0","_atom","getAtoms","indexOf","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","SUP","MUL","SRU","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","DAT","GEN","sgBottomRightPoint","bottomRightPoint","segmentIntersection","FunctionalGroup","provider","getInstance","types","getFunctionalGroupsList","functionalGroups","fg","relatedSGroup","molecule","getBonds","relatedSGroupId","functionalGroup","isFunctionalGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","contractedFunctionalGroupsAtoms","sgroupId","isExpanded","HalfBond","dir","norm","ang","loop","contra","next","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","hbs","isConvex","dblBonds","aromatic","convex","hb","halfBonds","RGroup","atrributes","frags","resth","range","ifthen","index","fid","rgroups","frid","find","_rgid","rgroup","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","order","queue","shift","newId","isStrictSuperset","isSubset","equals","parents","childs","findIndex","childId","path","guess","getAtomSetRelations","resetParentLink","parentId","childIndex","checkOverlapping","res","sid","sgAtoms","SimpleObjectMode","SimpleObject","line","rectangle","Pool","nextId","entries","arrayAddIfMissing","array","Struct","loops","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","_aid","hasRxnProps","_bid","hasRxnArrow","hasRxnPluses","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","mergeInto","rg","_fnum","clone","getFragmentIds","keepAllRGroups","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","bidMap","insert","soid","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","addAtom","a1","a2","hb1","hb2","halfBondId","halfBond","startCoords","endCoords","coordsDifference","dist","turnLeft","oxAngle","clear","bondInitHalfBonds","hbid","left","hbl","ir","il","setHbNext","halfBondSetAngle","nei","nei2","nextNei","atomSortNeighbors","halfBondUpdate","atomUpdateHalfBonds","remove","position","vec","global","totalLength","cnt","bld","getBondLengthData","totalDist","minDist","k","firstaid","pop","neiId","discardExistingFragments","addedAtoms","components","component","findConnectedComponent","idSet","frag","updateStereoAtom","findConnectedComponents","comp","markFragment","isReactionStruct","avg","getAvgBondLength","getAvgClosestAtomDistance","hbi","ai","bi","hbj","aj","bj","subloops","continueFlag","atomToHalfBond","aid1","subloop","slice","hbid1","hbid2","hba","hbb","every","loopArr","halfBondAngle","totalAngle","PI","hbida","hbidb","newLoops","bondsToMark","hbIdNext","hbId","partitionLoop","loopId","loopIsInner","loopHasSelfIntersections","loopIsConvex","calcConn","isAromatic","correctConn","hasImplicitH","calcValenceMinusHyd","calcValence","calcImplicitHydrogen","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","TextCommand","preparePositions","positions","Text","content","coords","Highlight","color","customizer","clonedValue","cloneDeep","getNodeWithInvertedYCoord","node","cloneDeepWith","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","prop","ifDef","target","isArray","tfx","parsedValue","KetcherAsyncEvents","runAsyncAction","action","eventEmitter","emit","LOADING","SUCCESS","FAILURE","headerToKet","header","fromRlabel","rgi","val","moleculeToKet","body","rglabelToKet","atomListToKet","atomToKet","bondToKet","sgroupToKet","_objectSpread","source","result","stereoCare","weight","parseInt","refsToRGroups","rgnumber","toUpperCase","toRlabel","moleculeToStruct","ketItem","rglabelToStruct","atomListToStruct","atomToStruct","bondToStruct","sgroupToStruct","markFragments","bindSGroupsToFunctionalGroups","attachmentPoints","Boolean","mapping","$refs","el","elements","toLowerCase","placement","display","fieldData","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","fragAtoms","ketNode","filteredSGroups","filteredSGroupsMap","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","_value","rxnToStruct","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","radius","pos0","ellipse","textToKet","textNode","textToStruct","validate","ket","ajv","Ajv","compile","schema","parseNode","currentStruct","KetSerializer","resultingStruct","JSON","parse","nodes","root","$ref","moleculeName","moleculeId","stringify","paddedNum","precision","numStr","replace","padStart","parseDecimalInt","str","isNaN","partitionLine","parts","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","getCoordBoundingBoxObj","fragmentType","shiftMol","xorig","over","add_","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowCenter","arrowStart","arrowEnd","rgMerge","scaffold","ctab","readKeyValuePairs","valueString","partition","utils","count","trim","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","sGroups","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","concat","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","split","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","startsWith","endsWith","applyDataSGroupDataLine","strArray","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","rLogic","props","charAt","propValue","isPseudo","test","propertyData","rglabels","a2rs","a2ri","a2r","iii","hhh","ooo","logic","pool","parsePropertyLineAtomList","expandedSGroups","eg","sGroupId","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","call","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","search","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","substring","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","current","rGroups","molLines","bracketEquality","currentIndex","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareMulForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","message","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","getCrossBonds","bracketPos","getBracketParameters","bracket","yComplement","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","molfileLines","common","skipErrors","preserveIndigoDesc","toRemove","errors","getSGroupsBFS","errorIgnore","ex","sGroupDelete","prepareSGroups","writeCTab2000","skipSGroupErrors","getComponents","all","saver","submol","saveMolecule","getScaffold","getCTab","writePaddedNumber","writeHeader","date","Date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","isAbsFlag","enhancedStereoFlag","writeCTab2000Header","atomsIds","atomsProps","pseudo","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","writePadded","sgmap","sgmapback","sgorder","q","expandedGroups","expandedGroupsLine","atomLabel","writePaddedFloat","MolSerializer","DefaultOptions","parseCTFile","reactionRelayout","badHeaderRecover","ex1","ex2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","prototype","each","func","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normalize","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","pureHydrogen","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","sign","arr","i1","i2","tmp","Dfs","atomData","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neighbours","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","degree","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","smiles","writtenAtoms","writtenComponents","_Atom","lowercase","chirality","branch_cnt","paren_written","h_count","isBondInRing","inLoop","setImplicitHydrogen","allowedLowercase","prepareLoopStructure","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","findBondId","n1","n2","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","molSerializer","exec","chunk","propChunks","deserialize","pc","isFinite","sdfItems","serialize","ChemicalMimeType","pollDeferred","process","complete","timeGap","startTimeGap","Promise","resolve","reject","iterate","then","setTimeout","e","err","parametrizeUrl","url","_","request","method","headers","responseHandler","requestUrl","response","fetch","assign","Accept","credentials","json","ok","error","indigoCall","baseUrl","defaultOptions","customHeaders","RemoteStructService","apiPath","output_format","isAvailable","indigoVersion","indigo_version","imagoVersions","imago_versions","blob","parVersion","req","status","bind","upload_id","metadata","mol_str","outputFormat","resp","text","RemoteStructServiceProvider","currentApiPath","URLSearchParams","document","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","Mol","molV3000","rxn","Rxn","rxnV3000","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","cml","CML","KET","cdxml","CDXML","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","KetFormatter","serializer","_ketSerializer","RxnFormatter","_molSerializer","stringifiedMolfile","stringifiedStruct","ServerFormatter","structService","ketSerializer","_structService","convert","convertResult","withCoords","promise","layout","parsedStruct","rescale","formatError","MolfileV2000Formatter","FormatterFactory","structServiceOptions","_excluded","molfileParseOptions","separateOptions","molSerializerOptions","formatter","identifyStructFormat","sanitizedString","er","Raphael","translateAbs","delta","transform","st","LayerMap","StereoColoringType","StereLabelStyleType","Visel","paths","boxes","boundingBox","exts","vector","translate","ReObject","viselType","visel","render","vbox","noredraw","removed","show","paper","setStart","drawHover","setFinish","hide","_render","_restruct","_paper","_styles","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","obj","pos1","pos2","oPos2","D","util","rect","rectangleArrowHighlightAndSelection","b0x","wOffset","hOffset","transformedPath","svgPath","rotate","rx","ry","polyline","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","lineattr","triangleLength","triangleWidth","fill","dashInterval","failSignWidth","arrowLen","lineOffset","arrowOffset","unbalanceVal","plus","bondSingle","makeStroke","stroke","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathdesc","topologyMark","mark","font","fontszsub","rbb","getBBox","recenterText","radicalCap","lineWidth","dw","dh","radicalBullet","circle","b0","sgroupBracketStyle","selectionRectangle","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","t0","t1","black","t2","coordStr","aromaticBondPaths","mask","vml","gap","StereoLabelMinOpacity","ShowHydrogenLabels","ReAtom","showLabel","hydrogenOnTheLeft","getVBoxObj","makeHoverPlate","addReObjectPath","ps","isAtomInContractedFunctionalGroup","atomSelectionPlateRadius","hoverStyle","restruct","styles","selectionStyle","isFirstAtomInFunctionalGroup","sgroupName","setHydrogenPos","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","buildLabel","zoom","showAtomIds","idPos","lc","draw","indices","setHover","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","warnings","pathAndRBoxTranslate","lsb","bisectLargestSector","showAttpnt","aamText","getAamText","queryAttrsText","getQueryAttrsText","shouldDisplayStereoLabel","stereoLabelStyle","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","t","fromRelBox","isHighlighted","highlightColor","highlight","hasCurrentHighlight","style","colorStereogenicCenters","Off","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","sameNotStereo","hydrogenLabels","Terminal","TerminalAndHetero","yl","yr","nl","nr","getLabelText","fontsz","hshift","vshift","mapValence","hydrogenLeft","asterisk","attpntText","attpntPath1","attpntRbb","lsbn","shiftBondEnd","arrowLeft","arrowRight","attpntPath","angles","daMax","margin","ReBond","doubleBondShift","bondRecalc","isBondInContractedFunctionalGroup","checkStereoBold","setDoubleBondShift","getBondPath","getReactingCenterPath","getTopologyMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","highlightPath","getHighlightPath","beginning","pathString","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","halfbonds","neihbid1","neihbid2","shiftA","shiftB","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","selectDoubleBondShift","atom1","atom2","nLeft","nRight","ReEnhancedFlag","hoverPath","getDefaultStereoFlagPosition","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","firstFrag","secondFrag","_ui_editor","calcBBox","keyOf","BORDER_EXT","ReRGroup","labelBox","fragGetAtoms","fragGetBonds","bbf","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","rLogicToString","logicPath","logicBox","_draw","fnum","drawing","cy","leftBracket","rightBracket","ifThen","rangeExists","restH","nextRg","ReRxnArrow","point","distRef","getReferencePointDistance","calculateDistanceToLine","getReferencePoints","startPoint","endPoint","middlePoint","refPoint","refPoints","rp","generatePath","findMiddlePoint","scaleFactor","selectionSet","scaledRP","getArrowParams","x1","x2","y2","hypot","_id","per","minX","minY","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","ReSGroup","remol","firstSgroupAtom","SGroupdrawBrackets","drawGroupDat","getHighlighPathInfo","startX","startY","sGroupItem","lowerIndexText","upperIndexText","indexAttribute","bracketR","renderIndex","indexPos","indexPath","indexBox","showValue","toFront","calculatePP","drawAttachedDat","drawAbsoluteDat","sbox","sgroupData","nameI","boxI","sboxI","BracketParams","crossBondsValues","tl","tr","tt","tb","cc","dt","contractedFunctionalGroupSize","hoverPp","ReSimpleObject","simpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","poly","atan","enhPaths","stylesApplied","enhPath","hoverStyleSimpleObject","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","SCALE","ReText","getRelBox","topLeft","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","start","setPos","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","textRange","Bold","Italic","Subscript","Superscript","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","reAtom","adjacentComponents","neighbor","compId","aidSet","getConnectedComponent","ccFragmentType","ccid","removeConnectedComponent","addConnectedComponent","layers","visible","parentNode","insertBefore","maps","structChanged","markItem","mapChanged","clearVisel","selection","isSelectionEmpty","eachItem","scaleVisel","force","initialized","_item","atomsChanged","connectedComponentRemoveAtom","emptyFrags","clearConnectedComponents","atomsChangedArray","assignConnectedComponents","verifyLoops","updLoops","updateLoops","showLabels","showBonds","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","reloop","markBond","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","bondlist","markAtom","isValid","loopRemove","enhancedFlagsChanged","chid","bondsChanged","redraw","mapValues","isSelectable","sgId","sGroupAtoms","showItemSelection","exists","isSelectionSvgObjectExists","makeSelectionPlate","anySelection","scaleRPath","FRAC","setFracAngle","calcAngle","fracAngle","angle2","round","calcNewAtomPos","ctrlKey","degrees","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","opt","rotationStep","labelFontSize","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","doubleBondWidth","stereoBondWidth","bondThickness","Render","clientArea","renderWidth","clientWidth","renderHeight","clientHeight","userOpts","ZERO","updateOptions","opts","passedOptions","view2obj","isRelative","scroll","scrollPos","useOldZoom","obj2view","scrollLeft","scrollTop","page2obj","event","getBoundingClientRect","offsetTop","top","offsetLeft","clientX","clientY","setPaperSize","setSize","setViewBox","setOffset","newoffset","setZoom","calcExtend","sSz","x0","y0","ey","setScrollOffset","cx","update","setScale","canvas","setMolecule","viewSz","changes","setSelection","sf","UNIT","eb","vb","cb","oldCb","oldBb","sz1","marg","mv","csz","sz2","BaseOperation","priority","execute","_inverted","invert","level","invalidateLoop","bondId","halfBond1","halfBond2","invalidateAtom","invalidateBond","invalidateItem","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","AtomAttr","attribute","data2","inverted","AtomMove","noinvalidate","reatom","AtomAdd","atomSetPos","AtomDelete","restructedAtom","markItemRemoved","BondAttr","BondMove","BondAdd","structBond","atomAddNeighbor","BondDelete","rebond","prev","CanvasLoad","oldStruct","clearVisels","AlignDescriptors","history","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","newPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","enhancedFalg","FragmentAddStereoAtom","invalidateEnhancedFlag","FragmentDeleteStereoAtom","FragmentStereoFlag","updateStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","findRGroupByFragment","removeOld","setNew","RxnArrowMove","Base","move","RxnArrowResize","anchor","previousPos0","get_xy0","previousPos1","reItem","angleInRadians","cosAngle","sinAngle","diffX","diffY","newMiddlePoint","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","rxnPlusSetPos","RxnPlusDelete","RxnArrowAdd","itemId","rxnArrowSetPos","RxnArrowDelete","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","simpleObjectSetPos","SimpleObjectDelete","SimpleObjectMove","handleRectangleChangeWithAnchor","SimpleObjectResize","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","removeAtom","SGroupAttr","setAttr","SGroupDataMove","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupCreate","SGroupDelete","relatedFGroupId","fgid","TextCreate","textSetPosition","TextDelete","TextUpdate","previousContent","TextMove","difference","Action","operations","operation","isDummy","sortedOperations","invertedOperation","perform","addOp","fromAromaticTemplateOnBond","template","events","simpleFusing","getBondFragment","getFragmentWithBondMap","atomsInStruct","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","calcDistance","ref","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","contains","rxnArrow","firstAtomPp","pg","findClosestItem","mp","other","findCloseMerge","srcId","merge","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","structSelection","atomForNewBond","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSgroupsBySelection","selectedAtoms","_sgid","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","mergeWith","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","sGroupAttributeAction","fromSgroupDeletion","sG","sGroupsRecalcCrossBonds","getAttrs","asteriskAction","plainCarbon","isPlainCarbon","fromSgroupAction","newSg","sourceAtoms","SgContexts","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","uniq","fromGroupAction","Multifragment","fromMultiFragmentAction","Group","fromAtomAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","fromBondAddition","mergeFragments","mergeSgroups","bnd","fromBondStereoUpdate","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","attrGetDefault","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","isInteger","withReverse","beginFrId","endFrId","fragmentStereoBonds","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","fromStereoAtomAttrs","correctAtomIds","getStereoParity","newAtomParity","bondChangingAction","itemID","bondProps","newItemId","plainBondTypes","fromAtomAddition","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","fragAction","mergeBondId","getAttrHash","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","fromNewCanvas","fromDescriptorsAlign","fromChain","dx","dy","chainItems","fromItemsFuse","usedAtoms","getItemsToFuse","editor","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","now","closestMap","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","atomsToRemove","fromOneBondDeletion","frids","actionRemoveDataSGroups","actionRemoveBonds","frid3","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","__frag","newRgId","onlyOneStructsSgroupId","xmin","ymin","xmax","ymax","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","fids","fidsNumberKeys","isFragFound","allFragmentsOfStructure","selectedFragmentsOfStructure","bbox","calcCenter","flipItemByCenter","fromRotate","rotateDelta","did","stereoFlags","flagId","fromBondAlign","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","fromTemplateOnCanvas","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","extraRes","angle0","fromTemplateOnBondAction","flip","fromTemplateOnBond","tmplBond","tmplBegin","atomsMap","bondAtoms","mergeA","tBond","existId","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","notifyChanged","HighlightDelete","highlightToRemove","newData","oldData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","HighlightUpdate","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","defaultTypes","defaultCalcProps","convertStructToString","Indigo","info","clean","aromatize","dearomatize","calculateCip","automap","check","properties","calculate","image","recognize","backgroundColor","generateImageAsBase64","prepareStructToRender","structStr","ketcherInstance","parseStruct","factory","service","create","getStructureFromStringAsync","getStructure","structureFormat","formatterFactory","getStructureFromStructAsync","Ketcher","EventEmitter","settings","setOptions","isExtended","molfileFormat","containsReaction","rxnfile","withAuxInfo","generateInchIKey","eventBus","structToAddFragment","meta","base64","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","DefaultStructServiceOptions","KetcherBuilder","structServiceProvider","serviceOptions","mergedServiceOptions","createStructService","ketcher"],"mappings":"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"}