{"version":3,"file":"index.modern.js","sources":["../src/domain/constants/elementColor.ts","../src/domain/constants/elements.ts","../src/domain/constants/generics.ts","../src/domain/entities/atomList.ts","../src/domain/entities/vec2.ts","../src/domain/entities/pile.ts","../src/domain/entities/atom.ts","../src/domain/entities/bond.ts","../src/domain/entities/fragment.ts","../src/domain/helpers/scale.ts","../src/domain/helpers/stereoValidator.ts","../src/domain/helpers/functionalGroupsProvider.ts","../src/domain/helpers/saltsAndSolventsProvider.ts","../src/domain/entities/box2Abs.ts","../src/domain/entities/sgroup.ts","../src/domain/entities/functionalGroup.ts","../src/domain/entities/halfBond.ts","../src/domain/entities/loop.ts","../src/domain/entities/rgroup.ts","../src/domain/entities/rxnArrow.ts","../src/domain/entities/rxnPlus.ts","../src/domain/entities/sgroupForest.ts","../src/domain/entities/simpleObject.ts","../src/domain/entities/pool.ts","../src/domain/entities/struct.ts","../src/domain/entities/text.ts","../src/domain/entities/highlight.ts","../src/domain/serializers/ket/helpers.ts","../src/domain/serializers/ket/toKet/rxnToKet.ts","../src/utilities/ifDef.ts","../src/utilities/tfx.ts","../src/utilities/runAsyncAction.ts","../src/domain/serializers/ket/toKet/headerToKet.ts","../src/domain/serializers/ket/toKet/moleculeToKet.ts","../src/domain/serializers/ket/fromKet/moleculeToStruct.ts","../src/domain/serializers/ket/toKet/prepare.ts","../src/domain/serializers/ket/toKet/rgroupToKet.ts","../src/domain/serializers/ket/fromKet/rgroupToStruct.ts","../src/domain/serializers/ket/fromKet/rxnToStruct.ts","../src/domain/serializers/ket/toKet/simpleObjectToKet.ts","../src/domain/serializers/ket/fromKet/simpleObjectToStruct.ts","../src/domain/serializers/ket/toKet/textToKet.ts","../src/domain/serializers/ket/fromKet/textToStruct.ts","../src/domain/serializers/ket/validate.ts","../src/domain/serializers/ket/ketSerializer.ts","../src/domain/serializers/mol/utils.js","../src/domain/serializers/mol/parseSGroup.js","../src/domain/serializers/mol/v2000.js","../src/domain/serializers/mol/v3000.js","../src/domain/serializers/mol/common.js","../src/domain/serializers/mol/molfile.ts","../src/domain/serializers/mol/molSerializer.ts","../src/domain/serializers/smi/cis_trans.js","../src/domain/serializers/smi/dfs.js","../src/domain/serializers/smi/stereocenters.js","../src/domain/serializers/smi/smiles.js","../src/domain/serializers/smi/smiSerializer.ts","../src/domain/serializers/sdf/sdfSerializer.ts","../src/domain/services/struct/structService.types.ts","../src/infrastructure/services/struct/remoteStructService.ts","../src/infrastructure/services/struct/remoteStructServiceProvider.ts","../src/application/formatters/supportedFormatProperties.ts","../src/application/formatters/formatProperties.ts","../src/application/formatters/structFormatter.types.ts","../src/application/formatters/ketFormatter.ts","../src/application/formatters/rxnFormatter.ts","../src/application/formatters/serverFormatter.ts","../src/application/formatters/molfileV2000Formatter.ts","../src/application/formatters/formatterFactory.ts","../src/application/formatters/identifyStructFormat.ts","../src/application/render/raphael-ext.js","../src/application/render/restruct/generalEnumTypes.ts","../src/application/render/restruct/visel.js","../src/application/render/restruct/reobject.ts","../src/application/render/util.ts","../src/application/render/draw.js","../src/application/render/restruct/reatom.ts","../src/application/render/restruct/rebond.ts","../src/application/render/restruct/reenhancedFlag.ts","../src/application/render/restruct/refrag.js","../src/application/render/restruct/rergroup.js","../src/application/render/restruct/rerxnarrow.ts","../src/application/render/restruct/rerxnplus.js","../src/application/render/restruct/redatasgroupdata.js","../src/application/render/restruct/resgroup.js","../src/application/render/restruct/resimpleObject.ts","../src/application/render/restruct/reloop.js","../src/application/render/restruct/retext.ts","../src/application/render/restruct/restruct.ts","../src/application/editor/shared/utils.js","../src/application/render/options.js","../src/application/render/raphaelRender.js","../src/application/editor/operations/base.ts","../src/application/editor/operations/OperationType.ts","../src/application/editor/operations/atom/AtomAttr.ts","../src/application/editor/operations/atom/AtomMove.ts","../src/application/editor/operations/atom/index.ts","../src/application/editor/operations/bond/BondAttr.ts","../src/application/editor/operations/bond/BondMove.ts","../src/application/editor/operations/bond/index.ts","../src/application/editor/operations/CanvasLoad.ts","../src/application/editor/operations/descriptors.ts","../src/application/editor/operations/EnhancedFlagMove.ts","../src/application/editor/operations/ifThen.ts","../src/application/editor/operations/fragment.ts","../src/application/editor/operations/fragmentStereoAtom.ts","../src/application/editor/operations/FragmentStereoFlag.ts","../src/application/editor/operations/calcimplicitH.ts","../src/application/editor/operations/LoopMove.ts","../src/application/editor/operations/rgroup/RGroupAttr.ts","../src/application/editor/operations/rgroup/RGroupFragment.ts","../src/application/editor/operations/rxn/RxnArrowMove.ts","../src/application/editor/operations/rxn/RxnArrowResize.ts","../src/application/editor/operations/rxn/plus/RxnPlusMove.ts","../src/application/editor/operations/rxn/plus/index.ts","../src/application/editor/operations/rxn/index.ts","../src/application/editor/operations/simpleObject.ts","../src/application/editor/operations/sgroup/sgroupAtom.ts","../src/application/editor/operations/sgroup/SGroupAttr.ts","../src/application/editor/operations/sgroup/SGroupDataMove.ts","../src/application/editor/operations/sgroup/sgroupHierarchy.ts","../src/application/editor/operations/sgroup/index.ts","../src/application/editor/operations/Text/TextCreateDelete.ts","../src/application/editor/operations/Text/TextUpdate.ts","../src/application/editor/operations/Text/TextMove.ts","../src/application/editor/actions/action.ts","../src/application/editor/actions/aromaticFusing.ts","../src/application/editor/shared/closest.js","../src/application/editor/actions/utils.ts","../src/application/editor/actions/rgroup.ts","../src/application/editor/actions/sgroup.ts","../src/application/editor/actions/bond.ts","../src/application/editor/actions/atom.ts","../src/application/editor/actions/basic.ts","../src/application/editor/actions/chain.ts","../src/application/editor/actions/closelyFusing.ts","../src/application/editor/actions/fragment.ts","../src/application/editor/actions/erase.ts","../src/application/editor/actions/paste.ts","../src/application/editor/actions/reaction.ts","../src/application/editor/actions/rotate.ts","../src/application/editor/actions/simpleobject.ts","../src/application/editor/actions/template.ts","../src/application/editor/actions/text.ts","../src/application/editor/operations/highlight.ts","../src/application/editor/actions/highlight.ts","../src/application/editor/shared/constants.js","../src/application/editor/index.ts","../src/application/indigo.ts","../../../node_modules/events/events.js","../src/application/ketcher.ts","../src/application/ketcherBuilder.ts"],"sourcesContent":["/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { ElementLabel } from './element.types'\n\ntype ElementColorType = {\n  [key in ElementLabel]: string\n}\n\nexport const ElementColor: ElementColorType = {\n  H: '#000000',\n  He: '#89a1a1',\n  Li: '#bd77ed',\n  Be: '#8fbc00',\n  B: '#c18989',\n  C: '#000000',\n  N: '#304ff7',\n  O: '#ff0d0d',\n  F: '#78bc42',\n  Ne: '#80a2af',\n  Na: '#ab5cf2',\n  Mg: '#6fcd00',\n  Al: '#a99393',\n  Si: '#b29478',\n  P: '#ff8000',\n  S: '#c99a19',\n  Cl: '#1fd01f',\n  Ar: '#69acba',\n  K: '#8f40d4',\n  Ca: '#38e900',\n  Sc: '#999999',\n  Ti: '#979a9e',\n  V: '#99999e',\n  Cr: '#8a99c7',\n  Mn: '#9c7ac7',\n  Fe: '#e06633',\n  Co: '#d37e8e',\n  Ni: '#4ece4e',\n  Cu: '#c78033',\n  Zn: '#7d80b0',\n  Ga: '#bc8b8b',\n  Ge: '#668f8f',\n  As: '#b87ddd',\n  Se: '#e59100',\n  Br: '#a62929',\n  Kr: '#59b1c9',\n  Rb: '#702eb0',\n  Sr: '#00ff00',\n  Y: '#66afaf',\n  Zr: '#71abab',\n  Nb: '#67aeb4',\n  Mo: '#54b5b5',\n  Tc: '#3b9e9e',\n  Ru: '#248f8f',\n  Rh: '#0a7d8c',\n  Pd: '#006985',\n  Ag: '#9a9a9a',\n  Cd: '#b29764',\n  In: '#a67573',\n  Sn: '#668080',\n  Sb: '#9e63b5',\n  Te: '#d47a00',\n  I: '#940094',\n  Xe: '#429eb0',\n  Cs: '#57178f',\n  Ba: '#00c900',\n  La: '#5caed1',\n  Ce: '#9d9d7b',\n  Pr: '#8ca581',\n  Nd: '#84a984',\n  Pm: '#71b18a',\n  Sm: '#66b68e',\n  Eu: '#4ac298',\n  Gd: '#37cb9e',\n  Tb: '#28d1a4',\n  Dy: '#1bd7a8',\n  Ho: '#00e98f',\n  Er: '#00e675',\n  Tm: '#00d452',\n  Yb: '#00bf38',\n  Lu: '#00ab24',\n  Hf: '#47b3ec',\n  Ta: '#4da6ff',\n  W: '#2194d6',\n  Re: '#267dab',\n  Os: '#266696',\n  Ir: '#175487',\n  Pt: '#9898a3',\n  Au: '#c19e1c',\n  Hg: '#9797ac',\n  Tl: '#a6544d',\n  Pb: '#575961',\n  Bi: '#9e4fb5',\n  Po: '#ab5c00',\n  At: '#754f45',\n  Rn: '#428296',\n  Fr: '#420066',\n  Ra: '#007d00',\n  Ac: '#6aa2ec',\n  Th: '#00baff',\n  Pa: '#00a1ff',\n  U: '#008fff',\n  Np: '#0080ff',\n  Pu: '#006bff',\n  Am: '#545cf2',\n  Cm: '#785ce3',\n  Bk: '#8a4fe3',\n  Cf: '#a136d4',\n  Es: '#b31fd4',\n  // Need to fix colors for the elements below (c)\n  Fm: '#000000',\n  Md: '#000000',\n  No: '#000000',\n  Lr: '#000000',\n  Rf: '#47b3ec',\n  Db: '#4da6ff',\n  Sg: '#2194d6',\n  Bh: '#267dab',\n  Hs: '#266696',\n  Mt: '#175487',\n  Ds: '#9898a3',\n  Rg: '#c19e1c',\n  Cn: '#9797ac',\n  Nh: '#000000',\n  Fl: '#000000',\n  Mc: '#000000',\n  Lv: '#000000',\n  Ts: '#000000',\n  Og: '#000000'\n} as const\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport type { Element } from './element.types'\n\nconst elementsArray: Array<Element> = [\n  {\n    number: 1,\n    label: 'H',\n    period: 1,\n    group: 1,\n    title: 'Hydrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 1.00794\n  },\n  {\n    number: 2,\n    label: 'He',\n    period: 1,\n    group: 8,\n    title: 'Helium',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 4.0026022\n  },\n  {\n    number: 3,\n    label: 'Li',\n    period: 2,\n    group: 1,\n    title: 'Lithium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 6.94\n  },\n  {\n    number: 4,\n    label: 'Be',\n    period: 2,\n    group: 2,\n    title: 'Beryllium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 9.01218315\n  },\n  {\n    number: 5,\n    label: 'B',\n    period: 2,\n    group: 3,\n    title: 'Boron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 10.81\n  },\n  {\n    number: 6,\n    label: 'C',\n    period: 2,\n    group: 4,\n    title: 'Carbon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 12.011\n  },\n  {\n    number: 7,\n    label: 'N',\n    period: 2,\n    group: 5,\n    title: 'Nitrogen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 14.007\n  },\n  {\n    number: 8,\n    label: 'O',\n    period: 2,\n    group: 6,\n    leftH: true,\n    title: 'Oxygen',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 15.999\n  },\n  {\n    number: 9,\n    label: 'F',\n    period: 2,\n    group: 7,\n    leftH: true,\n    title: 'Fluorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 18.9984031636\n  },\n  {\n    number: 10,\n    label: 'Ne',\n    period: 2,\n    group: 8,\n    title: 'Neon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 20.17976\n  },\n  {\n    number: 11,\n    label: 'Na',\n    period: 3,\n    group: 1,\n    title: 'Sodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 22.989769282\n  },\n  {\n    number: 12,\n    label: 'Mg',\n    period: 3,\n    group: 2,\n    title: 'Magnesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 24.305\n  },\n  {\n    number: 13,\n    label: 'Al',\n    period: 3,\n    group: 3,\n    title: 'Aluminium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 26.98153857\n  },\n  {\n    number: 14,\n    label: 'Si',\n    period: 3,\n    group: 4,\n    title: 'Silicon',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 28.085\n  },\n  {\n    number: 15,\n    label: 'P',\n    period: 3,\n    group: 5,\n    title: 'Phosphorus',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 30.9737619985\n  },\n  {\n    number: 16,\n    label: 'S',\n    period: 3,\n    group: 6,\n    leftH: true,\n    title: 'Sulfur',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 32.06\n  },\n  {\n    number: 17,\n    label: 'Cl',\n    period: 3,\n    group: 7,\n    leftH: true,\n    title: 'Chlorine',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 35.45\n  },\n  {\n    number: 18,\n    label: 'Ar',\n    period: 3,\n    group: 8,\n    title: 'Argon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 39.9481\n  },\n  {\n    number: 19,\n    label: 'K',\n    period: 4,\n    group: 1,\n    title: 'Potassium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 39.09831\n  },\n  {\n    number: 20,\n    label: 'Ca',\n    period: 4,\n    group: 2,\n    title: 'Calcium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 40.0784\n  },\n  {\n    number: 21,\n    label: 'Sc',\n    period: 4,\n    group: 3,\n    title: 'Scandium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 44.9559085\n  },\n  {\n    number: 22,\n    label: 'Ti',\n    period: 4,\n    group: 4,\n    title: 'Titanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 47.8671\n  },\n  {\n    number: 23,\n    label: 'V',\n    period: 4,\n    group: 5,\n    title: 'Vanadium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 50.94151\n  },\n  {\n    number: 24,\n    label: 'Cr',\n    period: 4,\n    group: 6,\n    title: 'Chromium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 51.99616\n  },\n  {\n    number: 25,\n    label: 'Mn',\n    period: 4,\n    group: 7,\n    title: 'Manganese',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 54.9380443\n  },\n  {\n    number: 26,\n    label: 'Fe',\n    period: 4,\n    group: 8,\n    title: 'Iron',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 55.8452\n  },\n  {\n    number: 27,\n    label: 'Co',\n    period: 4,\n    group: 8,\n    title: 'Cobalt',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.9331944\n  },\n  {\n    number: 28,\n    label: 'Ni',\n    period: 4,\n    group: 8,\n    title: 'Nickel',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 58.69344\n  },\n  {\n    number: 29,\n    label: 'Cu',\n    period: 4,\n    group: 1,\n    title: 'Copper',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 63.5463\n  },\n  {\n    number: 30,\n    label: 'Zn',\n    period: 4,\n    group: 2,\n    title: 'Zinc',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 65.382\n  },\n  {\n    number: 31,\n    label: 'Ga',\n    period: 4,\n    group: 3,\n    title: 'Gallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 69.7231\n  },\n  {\n    number: 32,\n    label: 'Ge',\n    period: 4,\n    group: 4,\n    title: 'Germanium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 72.6308\n  },\n  {\n    number: 33,\n    label: 'As',\n    period: 4,\n    group: 5,\n    title: 'Arsenic',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 74.9215956\n  },\n  {\n    number: 34,\n    label: 'Se',\n    period: 4,\n    group: 6,\n    leftH: true,\n    title: 'Selenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'other-nonmetal',\n    mass: 78.9718\n  },\n  {\n    number: 35,\n    label: 'Br',\n    period: 4,\n    group: 7,\n    leftH: true,\n    title: 'Bromine',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 79.904\n  },\n  {\n    number: 36,\n    label: 'Kr',\n    period: 4,\n    group: 8,\n    title: 'Krypton',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 83.7982\n  },\n  {\n    number: 37,\n    label: 'Rb',\n    period: 5,\n    group: 1,\n    title: 'Rubidium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 85.46783\n  },\n  {\n    number: 38,\n    label: 'Sr',\n    period: 5,\n    group: 2,\n    title: 'Strontium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 87.621\n  },\n  {\n    number: 39,\n    label: 'Y',\n    period: 5,\n    group: 3,\n    title: 'Yttrium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 88.905842\n  },\n  {\n    number: 40,\n    label: 'Zr',\n    period: 5,\n    group: 4,\n    title: 'Zirconium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 91.2242\n  },\n  {\n    number: 41,\n    label: 'Nb',\n    period: 5,\n    group: 5,\n    title: 'Niobium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 92.906372\n  },\n  {\n    number: 42,\n    label: 'Mo',\n    period: 5,\n    group: 6,\n    title: 'Molybdenum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 95.951\n  },\n  {\n    number: 43,\n    label: 'Tc',\n    period: 5,\n    group: 7,\n    title: 'Technetium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 98\n  },\n  {\n    number: 44,\n    label: 'Ru',\n    period: 5,\n    group: 8,\n    title: 'Ruthenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 101.072\n  },\n  {\n    number: 45,\n    label: 'Rh',\n    period: 5,\n    group: 8,\n    title: 'Rhodium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 102.905502\n  },\n  {\n    number: 46,\n    label: 'Pd',\n    period: 5,\n    group: 8,\n    title: 'Palladium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 106.421\n  },\n  {\n    number: 47,\n    label: 'Ag',\n    period: 5,\n    group: 1,\n    title: 'Silver',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 107.86822\n  },\n  {\n    number: 48,\n    label: 'Cd',\n    period: 5,\n    group: 2,\n    title: 'Cadmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 112.4144\n  },\n  {\n    number: 49,\n    label: 'In', // 49\n    period: 5,\n    group: 3,\n    title: 'Indium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 114.8181\n  },\n  {\n    number: 50,\n    label: 'Sn',\n    period: 5,\n    group: 4,\n    title: 'Tin',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 118.7107\n  },\n  {\n    number: 51,\n    label: 'Sb',\n    period: 5,\n    group: 5,\n    title: 'Antimony',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 121.7601\n  },\n  {\n    number: 52,\n    label: 'Te',\n    period: 5,\n    group: 6,\n    title: 'Tellurium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'metalloid',\n    mass: 127.603\n  },\n  {\n    number: 53,\n    label: 'I',\n    period: 5,\n    group: 7,\n    leftH: true,\n    title: 'Iodine',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'halogen',\n    mass: 126.904473\n  },\n  {\n    number: 54,\n    label: 'Xe',\n    period: 5,\n    group: 8,\n    title: 'Xenon',\n    state: 'gas',\n    origin: 'primordial',\n    type: 'noble',\n    mass: 131.2936\n  },\n  {\n    number: 55,\n    label: 'Cs',\n    period: 6,\n    group: 1,\n    title: 'Caesium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkali',\n    mass: 132.905451966\n  },\n  {\n    number: 56,\n    label: 'Ba',\n    period: 6,\n    group: 2,\n    title: 'Barium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'alkaline-earth',\n    mass: 137.3277\n  },\n  {\n    number: 57,\n    label: 'La',\n    period: 6,\n    group: 3,\n    title: 'Lanthanum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 138.905477\n  },\n  {\n    number: 58,\n    label: 'Ce',\n    period: 6,\n    group: 3,\n    title: 'Cerium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.1161\n  },\n  {\n    number: 59,\n    label: 'Pr',\n    period: 6,\n    group: 3,\n    title: 'Praseodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 140.907662\n  },\n  {\n    number: 60,\n    label: 'Nd',\n    period: 6,\n    group: 3,\n    title: 'Neodymium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 144.2423\n  },\n  {\n    number: 61,\n    label: 'Pm',\n    period: 6,\n    group: 3,\n    title: 'Promethium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'lanthanide',\n    mass: 145\n  },\n  {\n    number: 62,\n    label: 'Sm',\n    period: 6,\n    group: 3,\n    title: 'Samarium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 150.362\n  },\n  {\n    number: 63,\n    label: 'Eu',\n    period: 6,\n    group: 3,\n    title: 'Europium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 151.9641\n  },\n  {\n    number: 64,\n    label: 'Gd',\n    period: 6,\n    group: 3,\n    title: 'Gadolinium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 157.253\n  },\n  {\n    number: 65,\n    label: 'Tb',\n    period: 6,\n    group: 3,\n    title: 'Terbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 158.925352\n  },\n  {\n    number: 66,\n    label: 'Dy',\n    period: 6,\n    group: 3,\n    title: 'Dysprosium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 162.5001\n  },\n  {\n    number: 67,\n    label: 'Ho',\n    period: 6,\n    group: 3,\n    title: 'Holmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 164.930332\n  },\n  {\n    number: 68,\n    label: 'Er',\n    period: 6,\n    group: 3,\n    title: 'Erbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 167.2593\n  },\n  {\n    number: 69,\n    label: 'Tm',\n    period: 6,\n    group: 3,\n    title: 'Thulium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 168.934222\n  },\n  {\n    number: 70,\n    label: 'Yb',\n    period: 6,\n    group: 3,\n    title: 'Ytterbium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 173.0451\n  },\n  {\n    number: 71,\n    label: 'Lu',\n    period: 6,\n    group: 3,\n    title: 'Lutetium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'lanthanide',\n    mass: 174.96681\n  },\n  {\n    number: 72,\n    label: 'Hf',\n    period: 6,\n    group: 4,\n    title: 'Hafnium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 178.492\n  },\n  {\n    number: 73,\n    label: 'Ta',\n    period: 6,\n    group: 5,\n    title: 'Tantalum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 180.947882\n  },\n  {\n    number: 74,\n    label: 'W',\n    period: 6,\n    group: 6,\n    title: 'Tungsten',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 183.841\n  },\n  {\n    number: 75,\n    label: 'Re',\n    period: 6,\n    group: 7,\n    title: 'Rhenium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 186.2071\n  },\n  {\n    number: 76,\n    label: 'Os',\n    period: 6,\n    group: 8,\n    title: 'Osmium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 190.233\n  },\n  {\n    number: 77,\n    label: 'Ir',\n    period: 6,\n    group: 8,\n    title: 'Iridium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 192.2173\n  },\n  {\n    number: 78,\n    label: 'Pt',\n    period: 6,\n    group: 8,\n    title: 'Platinum',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 195.0849\n  },\n  {\n    number: 79,\n    label: 'Au',\n    period: 6,\n    group: 1,\n    title: 'Gold',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 196.9665695\n  },\n  {\n    number: 80,\n    label: 'Hg',\n    period: 6,\n    group: 2,\n    title: 'Mercury',\n    state: 'liquid',\n    origin: 'primordial',\n    type: 'transition',\n    mass: 200.5923\n  },\n  {\n    number: 81,\n    label: 'Tl',\n    period: 6,\n    group: 3,\n    title: 'Thallium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 204.38\n  },\n  {\n    number: 82,\n    label: 'Pb',\n    period: 6,\n    group: 4,\n    title: 'Lead',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 207.21\n  },\n  {\n    number: 83,\n    label: 'Bi',\n    period: 6,\n    group: 5,\n    title: 'Bismuth',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'post-transition',\n    mass: 208.980401\n  },\n  {\n    number: 84,\n    label: 'Po',\n    period: 6,\n    group: 6,\n    title: 'Polonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'metalloid',\n    mass: 209\n  },\n  {\n    number: 85,\n    label: 'At',\n    period: 6,\n    group: 7,\n    title: 'Astatine',\n    state: 'solid',\n    origin: 'decay',\n    type: 'halogen',\n    mass: 210\n  },\n  {\n    number: 86,\n    label: 'Rn',\n    period: 6,\n    group: 8,\n    title: 'Radon',\n    state: 'gas',\n    origin: 'decay',\n    type: 'noble',\n    mass: 222\n  },\n  {\n    number: 87,\n    label: 'Fr',\n    period: 7,\n    group: 1,\n    title: 'Francium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkali',\n    mass: 223\n  },\n  {\n    number: 88,\n    label: 'Ra',\n    period: 7,\n    group: 2,\n    title: 'Radium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'alkaline-earth',\n    mass: 226\n  },\n  {\n    number: 89,\n    label: 'Ac',\n    period: 7,\n    group: 3,\n    title: 'Actinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'transition',\n    mass: 227\n  },\n  {\n    number: 90,\n    label: 'Th',\n    period: 7,\n    group: 3,\n    title: 'Thorium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 232.03774\n  },\n  {\n    number: 91,\n    label: 'Pa',\n    period: 7,\n    group: 3,\n    title: 'Protactinium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 231.035882\n  },\n  {\n    number: 92,\n    label: 'U',\n    period: 7,\n    group: 3,\n    title: 'Uranium',\n    state: 'solid',\n    origin: 'primordial',\n    type: 'actinide',\n    mass: 238.028913\n  },\n  {\n    number: 93,\n    label: 'Np',\n    period: 7,\n    group: 3,\n    title: 'Neptunium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 237\n  },\n  {\n    number: 94,\n    label: 'Pu',\n    period: 7,\n    group: 3,\n    title: 'Plutonium',\n    state: 'solid',\n    origin: 'decay',\n    type: 'actinide',\n    mass: 244\n  },\n  {\n    number: 95,\n    label: 'Am',\n    period: 7,\n    group: 3,\n    title: 'Americium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 243\n  },\n  {\n    number: 96,\n    label: 'Cm',\n    period: 7,\n    group: 3,\n    title: 'Curium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 97,\n    label: 'Bk',\n    period: 7,\n    group: 3,\n    title: 'Berkelium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 247\n  },\n  {\n    number: 98,\n    label: 'Cf',\n    period: 7,\n    group: 3,\n    title: 'Californium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 251\n  },\n  {\n    number: 99,\n    label: 'Es',\n    period: 7,\n    group: 3,\n    title: 'Einsteinium',\n    state: 'solid',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 252\n  },\n  {\n    number: 100,\n    label: 'Fm',\n    period: 7,\n    group: 3,\n    title: 'Fermium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 257\n  },\n  {\n    number: 101,\n    label: 'Md',\n    period: 7,\n    group: 3,\n    title: 'Mendelevium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 258\n  },\n  {\n    number: 102,\n    label: 'No',\n    period: 7,\n    group: 3,\n    title: 'Nobelium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 259\n  },\n  {\n    number: 103,\n    label: 'Lr',\n    period: 7,\n    group: 3,\n    title: 'Lawrencium',\n    origin: 'synthetic',\n    type: 'actinide',\n    mass: 266\n  },\n  {\n    number: 104,\n    label: 'Rf',\n    period: 7,\n    group: 4,\n    title: 'Rutherfordium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 267\n  },\n  {\n    number: 105,\n    label: 'Db',\n    period: 7,\n    group: 5,\n    title: 'Dubnium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 268\n  },\n  {\n    number: 106,\n    label: 'Sg',\n    period: 7,\n    group: 6,\n    title: 'Seaborgium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 107,\n    label: 'Bh',\n    period: 7,\n    group: 7,\n    title: 'Bohrium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 270\n  },\n  {\n    number: 108,\n    label: 'Hs',\n    period: 7,\n    group: 8,\n    title: 'Hassium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 269\n  },\n  {\n    number: 109,\n    label: 'Mt',\n    period: 7,\n    group: 8,\n    title: 'Meitnerium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 278\n  },\n  {\n    number: 110,\n    label: 'Ds',\n    period: 7,\n    group: 8,\n    title: 'Darmstadtium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 281\n  },\n  {\n    number: 111,\n    label: 'Rg',\n    period: 7,\n    group: 1,\n    title: 'Roentgenium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 282\n  },\n  {\n    number: 112,\n    label: 'Cn',\n    period: 7,\n    group: 2,\n    title: 'Copernicium',\n    origin: 'synthetic',\n    type: 'transition',\n    mass: 285\n  },\n  {\n    number: 113,\n    label: 'Nh',\n    period: 7,\n    group: 3,\n    title: 'Nihonium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 286\n  },\n  {\n    number: 114,\n    label: 'Fl',\n    period: 7,\n    group: 4,\n    title: 'Flerovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 115,\n    label: 'Mc',\n    period: 7,\n    group: 5,\n    title: 'Moscovium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 289\n  },\n  {\n    number: 116,\n    label: 'Lv',\n    period: 7,\n    group: 6,\n    title: 'Livermorium',\n    origin: 'synthetic',\n    type: 'post-transition',\n    mass: 293\n  },\n  {\n    number: 117,\n    label: 'Ts',\n    period: 7,\n    group: 7,\n    title: 'Tennessine',\n    origin: 'synthetic',\n    type: 'halogen',\n    mass: 294\n  },\n  {\n    number: 118,\n    label: 'Og',\n    period: 7,\n    group: 8,\n    title: 'Oganesson',\n    origin: 'synthetic',\n    type: 'noble',\n    mass: 294\n  }\n]\n\nconst elementsMap = elementsArray.reduce((acc, element) => {\n  acc.set(element.label, element)\n  acc.set(element.number, element)\n  return acc\n}, new Map<string | number, Element>())\n\nexport const Elements = {\n  get: (key: number | string): Element | undefined => elementsMap.get(key),\n  filter: (predicate: (element: Element) => boolean): Array<Element> => {\n    return elementsArray.filter(predicate)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport type GenItem = {\n  label: string\n  description?: string\n}\n\nexport type GenItemSet = {\n  items: GenItem[]\n  displayName?: string\n}\n\nexport type GenGroup = {\n  itemSets: GenItemSet[]\n  title: string\n}\n\nexport type GenericsType = {\n  [index: string]: GenGroup & { subGroups?: GenericsType }\n}\n\nexport const Generics: GenericsType = {\n  'atoms-gen': {\n    title: 'Atom Generics',\n    itemSets: [\n      {\n        displayName: 'any atom',\n        items: [\n          { label: 'A', description: 'Any atom except hydrogen' },\n          { label: 'AH', description: 'Any atom, including hydrogen' }\n        ]\n      },\n      {\n        displayName: 'except C or H',\n        items: [\n          {\n            label: 'Q',\n            description: 'Any heteroatom (any atom except C or H)'\n          },\n          { label: 'QH', description: 'Any atom except C' }\n        ]\n      },\n      {\n        displayName: 'any metal',\n        items: [\n          { label: 'M', description: 'Any metal' },\n          { label: 'MH', description: 'Any metal or hydrogen' }\n        ]\n      },\n      {\n        displayName: 'any halogen',\n        items: [\n          { label: 'X', description: 'Any halogen' },\n          { label: 'XH', description: 'Any halogen or hydrogen' }\n        ]\n      }\n    ]\n  },\n  'special-nodes': {\n    title: 'Special Nodes',\n    itemSets: [\n      {\n        items: [\n          { label: 'H+', description: 'Proton' },\n          { label: 'D', description: 'Deuterium' },\n          { label: 'T', description: 'Tritium' },\n          { label: 'R', description: 'Pseudoatom' },\n          { label: 'Pol', description: 'Polymer Bead' }\n        ]\n      }\n    ]\n  },\n\n  'group-gen': {\n    title: 'Group Generics',\n    itemSets: [\n      {\n        items: [\n          {\n            label: 'G',\n            description: 'Any group'\n          },\n          {\n            label: 'GH',\n            description: 'Any group or hydrogen'\n          }\n        ]\n      },\n      {\n        items: [\n          {\n            label: 'G*',\n            description: 'Any group with a ring closure'\n          },\n          {\n            label: 'GH*',\n            description: 'Any group of hydrogen with a ring closure'\n          }\n        ]\n      }\n    ],\n    subGroups: {\n      'group-acyclic': {\n        title: 'Acyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'ACY', description: 'Acyclic group' },\n              { label: 'ACH', description: 'Acyclic group or hydrogen' }\n            ]\n          }\n        ],\n        subGroups: {\n          'acyclic-carbo': {\n            title: 'Acyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'ABC', description: 'Carbocyclic' },\n                  { label: 'ABH', description: 'Carbocyclic of hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkynyl',\n                items: [\n                  { label: 'AYL', description: 'Alkynyl' },\n                  { label: 'AYH', description: 'Alkynyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkyl',\n                items: [\n                  { label: 'ALK', description: 'Alkyl' },\n                  { label: 'ALH', description: 'Alkyl or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'alkenyl',\n                items: [\n                  { label: 'AEL', description: 'Alkenyl' },\n                  { label: 'AEH', description: 'Alkenyl or hydrogen' }\n                ]\n              }\n            ]\n          },\n          'acyclic-hetero': {\n            title: 'Acyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'AHC', description: 'Heteroacyclic' },\n                  { label: 'AHH', description: 'Heterocyclic or hydrogen' }\n                ]\n              },\n              {\n                items: [\n                  { label: 'AOX', description: 'Alkoxy' },\n                  { label: 'AOH', description: 'Alkoxy or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      },\n      'group-cyclic': {\n        title: 'Cyclic',\n        itemSets: [\n          {\n            items: [\n              { label: 'CYC', description: 'Cyclic group' },\n              { label: 'CYH', description: 'Cyclic group or hydrogen' }\n            ]\n          },\n          {\n            displayName: 'no carbon',\n            items: [\n              {\n                label: 'CXX',\n                description: 'Cyclic group with no Carbon atoms'\n              },\n              {\n                label: 'CXH',\n                description: 'Cyclic group with no Carbon atoms or hydrogen'\n              }\n            ]\n          }\n        ],\n        subGroups: {\n          'cyclic-carbo': {\n            title: 'Cyclic Carbo',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CBC', description: 'Carbocyclic derivatives' },\n                  {\n                    label: 'CBH',\n                    description: 'Carbocyclic derivatives or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'atyl',\n                items: [\n                  { label: 'ARY', description: 'Any aryl group' },\n                  { label: 'ARH', description: 'Any aryl group or hydrogen' }\n                ]\n              },\n              {\n                displayName: 'cycloalkyl',\n                items: [\n                  { label: 'CAL', description: 'Any cycloalkyl group' },\n                  {\n                    label: 'CAH',\n                    description: 'Any cycloalkyl group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'cycloalkenyl',\n                items: [\n                  { label: 'CEL', description: 'Any cyloalkenyl group' },\n                  {\n                    label: 'CEH',\n                    description: 'Any cyloalkenyl group or hydrogen'\n                  }\n                ]\n              }\n            ]\n          },\n          'cyclic-hetero': {\n            title: 'Cyclic Hetero',\n            itemSets: [\n              {\n                items: [\n                  { label: 'CHC', description: 'Heterocyclic group' },\n                  {\n                    label: 'CHH',\n                    description: 'Heterocyclic group or hydrogen'\n                  }\n                ]\n              },\n              {\n                displayName: 'hetero aryl',\n                items: [\n                  { label: 'HAR', description: 'Heteroaryl group' },\n                  { label: 'HAH', description: 'Heteroaryl group or hydrogen' }\n                ]\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ElementLabel, Elements } from 'domain/constants'\n\nexport interface AtomListParams {\n  readonly notList: boolean\n  readonly ids: Array<number>\n}\n\nexport class AtomList {\n  notList: boolean\n  ids: Array<number>\n\n  constructor(params: AtomListParams) {\n    this.notList = params.notList\n    this.ids = params.ids\n  }\n\n  labelList() {\n    const labels: Array<ElementLabel> = []\n    for (const id of this.ids) {\n      const currenElement = Elements.get(id)\n      currenElement && labels.push(currenElement!.label)\n    }\n\n    return labels\n  }\n\n  label() {\n    let label = '[' + this.labelList().join(',') + ']'\n    if (this.notList) {\n      label = '!' + label\n    }\n    return label\n  }\n\n  equals(atomList: AtomList) {\n    return (\n      this.notList === atomList.notList &&\n      (this.ids || []).sort().toString() ===\n        (atomList.ids || []).sort().toString()\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport assert from 'assert'\n\nexport interface Point {\n  x?: number\n  y?: number\n  z?: number\n}\nexport class Vec2 {\n  static ZERO = new Vec2(0, 0)\n  static UNIT = new Vec2(1, 1)\n\n  x: number\n  y: number\n  z: number\n\n  constructor(point: Point)\n  constructor(x?: number, y?: number, z?: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 0) {\n      this.x = 0\n      this.y = 0\n      this.z = 0\n    } else if (arguments.length === 1) {\n      this.x = parseFloat(args[0].x || 0)\n      this.y = parseFloat(args[0].y || 0)\n      this.z = parseFloat(args[0].z || 0)\n    } else if (arguments.length === 2) {\n      this.x = parseFloat(args[0] || 0)\n      this.y = parseFloat(args[1] || 0)\n      this.z = 0\n    } else if (arguments.length === 3) {\n      this.x = parseFloat(args[0])\n      this.y = parseFloat(args[1])\n      this.z = parseFloat(args[2])\n    } else {\n      throw new Error('Vec2(): invalid arguments')\n    }\n  }\n\n  static dist(a: Vec2, b: Vec2): number {\n    return Vec2.diff(a, b).length()\n  }\n\n  static max(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.max(v1.x, v2.x),\n      Math.max(v1.y, v2.y),\n      Math.max(v1.z, v2.z)\n    )\n  }\n\n  static min(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(\n      Math.min(v1.x, v2.x),\n      Math.min(v1.y, v2.y),\n      Math.min(v1.z, v2.z)\n    )\n  }\n\n  static sum(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z)\n  }\n\n  static dot(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.x + v1.y * v2.y\n  }\n\n  static cross(v1: Vec2, v2: Vec2): number {\n    return v1.x * v2.y - v1.y * v2.x\n  }\n\n  static angle(v1: Vec2, v2: Vec2): number {\n    return Math.atan2(Vec2.cross(v1, v2), Vec2.dot(v1, v2))\n  }\n\n  static diff(v1: Vec2, v2: Vec2): Vec2 {\n    return new Vec2(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z)\n  }\n\n  // assume arguments v1, f1, v2, f2, v3, f3, etc.\n  // where v[i] are vectors and f[i] are corresponding coefficients\n  static lc(...args: Array<Vec2 | number>): Vec2 {\n    let v = new Vec2()\n    for (let i = 0; i < arguments.length / 2; ++i) {\n      v = v.addScaled(args[2 * i] as Vec2, args[2 * i + 1] as number)\n    }\n    return v\n  }\n\n  static lc2(v1: Vec2, f1: number, v2: Vec2, f2: number): Vec2 {\n    return new Vec2(\n      v1.x * f1 + v2.x * f2,\n      v1.y * f1 + v2.y * f2,\n      v1.z * f1 + v2.z * f2\n    )\n  }\n\n  static centre(v1: Vec2, v2: Vec2) {\n    return Vec2.lc2(v1, 0.5, v2, 0.5)\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  equals(v: Vec2): boolean {\n    return this.x === v.x && this.y === v.y && this.z === v.z\n  }\n\n  add(v: Vec2): Vec2 {\n    return new Vec2(this.x + v.x, this.y + v.y, this.z + v.z)\n  }\n\n  add_(v: Vec2): void {\n    this.x += v.x\n    this.y += v.y\n    this.z += v.z\n  }\n\n  get_xy0(): Vec2 {\n    return new Vec2(this.x, this.y)\n  }\n\n  sub(v: Vec2): Vec2 {\n    return new Vec2(this.x - v.x, this.y - v.y, this.z - v.z)\n  }\n\n  scaled(s: number): Vec2 {\n    return new Vec2(this.x * s, this.y * s, this.z * s)\n  }\n\n  negated(): Vec2 {\n    return new Vec2(-this.x, -this.y, -this.z)\n  }\n\n  yComplement(y1: number): Vec2 {\n    y1 = y1 || 0\n    return new Vec2(this.x, y1 - this.y, this.z)\n  }\n\n  addScaled(v: Vec2, f: number): Vec2 {\n    return new Vec2(this.x + v.x * f, this.y + v.y * f, this.z + v.z * f)\n  }\n\n  normalized(): Vec2 {\n    return this.scaled(1 / this.length())\n  }\n\n  normalize(): boolean {\n    const l = this.length()\n\n    if (l < 0.000001) return false\n\n    this.x /= l\n    this.y /= l\n\n    return true\n  }\n\n  turnLeft(): Vec2 {\n    return new Vec2(-this.y, this.x, this.z)\n  }\n\n  coordStr(): string {\n    return this.x.toString() + ' , ' + this.y.toString()\n  }\n\n  toString(): string {\n    return '(' + this.x.toFixed(2) + ',' + this.y.toFixed(2) + ')'\n  }\n\n  max(v: Vec2): Vec2 {\n    assert(v != null)\n\n    return Vec2.max(this, v)\n  }\n\n  min(v: Vec2): Vec2 {\n    return Vec2.min(this, v)\n  }\n\n  ceil(): Vec2 {\n    return new Vec2(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z))\n  }\n\n  floor(): Vec2 {\n    return new Vec2(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z))\n  }\n\n  rotate(angle: number) {\n    const sin = Math.sin(angle)\n    const cos = Math.cos(angle)\n\n    return this.rotateSC(sin, cos)\n  }\n\n  rotateSC(sin: number, cos: number): Vec2 {\n    assert(sin === 0 || !!sin)\n    assert(cos === 0 || !!cos)\n\n    return new Vec2(\n      this.x * cos - this.y * sin,\n      this.x * sin + this.y * cos,\n      this.z\n    )\n  }\n\n  oxAngle(): number {\n    return Math.atan2(this.y, this.x)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pile<TValue = any> extends Set<TValue> {\n  // TODO: it's used only in dfs.js in one place in some strange way.\n  // Should be removed after dfs.js refactoring\n  find(predicate: (item: TValue) => boolean) {\n    for (const item of this) {\n      if (predicate(item)) return item\n    }\n\n    return null\n  }\n\n  equals(setB: Pile): boolean {\n    return this.isSuperset(setB) && setB.isSuperset(this)\n  }\n\n  isSuperset(subset: Pile): boolean {\n    for (const item of subset) {\n      if (!this.has(item)) return false\n    }\n\n    return true\n  }\n\n  filter(expression: (arg: TValue) => boolean): Pile<TValue> {\n    return new Pile(Array.from(this).filter(expression))\n  }\n\n  union(setB: Pile): Pile<TValue> {\n    const union = new Pile(this)\n\n    for (const item of setB) union.add(item)\n\n    return union\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomList, AtomListParams } from './atomList'\nimport { Point, Vec2 } from './vec2'\n\nimport { Elements } from 'domain/constants'\nimport { Pile } from './pile'\n\nfunction getValueOrDefault<T>(value: T | undefined, defaultValue: T): T {\n  return typeof value !== 'undefined' ? value : defaultValue\n}\n\nfunction isCorrectPseudo(label) {\n  return (\n    !Elements.get(label) && label !== 'L' && label !== 'L#' && label !== 'R#'\n  )\n}\n\nfunction getPseudo(label: string) {\n  return isCorrectPseudo(label) ? label : ''\n}\n\nexport function radicalElectrons(radical: any) {\n  radical -= 0\n  if (radical === Atom.PATTERN.RADICAL.DOUPLET) return 1\n  else if (\n    radical === Atom.PATTERN.RADICAL.SINGLET ||\n    radical === Atom.PATTERN.RADICAL.TRIPLET\n  ) {\n    return 2\n  } else {\n    return 0\n  }\n}\n\nexport enum StereoLabel {\n  Abs = 'abs',\n  And = '&',\n  Or = 'or'\n}\n\nexport interface AtomAttributes {\n  stereoParity?: number\n  stereoLabel?: string | null\n  exactChangeFlag?: number\n  rxnFragmentType?: number\n  invRet?: number\n  aam?: number\n  hCount?: number\n  unsaturatedAtom?: number\n  substitutionCount?: number\n  ringBondCount?: number\n  explicitValence?: number\n  attpnt?: any\n  rglabel?: string | null\n  charge?: number\n  radical?: number\n  isotope?: number\n  alias?: string | null\n  pseudo?: string\n  atomList?: AtomListParams | null\n  label: string\n  fragment?: number\n  pp?: Point\n  implicitH?: number\n}\n\nexport class Atom {\n  static PATTERN = {\n    RADICAL: {\n      NONE: 0,\n      SINGLET: 1,\n      DOUPLET: 2,\n      TRIPLET: 3\n    },\n    STEREO_PARITY: {\n      NONE: 0,\n      ODD: 1,\n      EVEN: 2,\n      EITHER: 3\n    }\n  }\n\n  // TODO: rename\n  static attrlist = {\n    alias: null,\n    label: 'C',\n    isotope: 0,\n    radical: 0,\n    charge: 0,\n    explicitValence: -1,\n    ringBondCount: 0,\n    substitutionCount: 0,\n    unsaturatedAtom: 0,\n    hCount: 0,\n    atomList: null,\n    invRet: 0,\n    exactChangeFlag: 0,\n    rglabel: null,\n    attpnt: null,\n    aam: 0,\n    // enhanced stereo\n    stereoLabel: null,\n    stereoParity: 0\n  }\n\n  label: string\n  fragment: number\n  atomList: AtomList | null\n  attpnt: any\n  isotope: number\n  hCount: number\n  radical: number\n  charge: number\n  explicitValence: number\n  ringBondCount: number\n  unsaturatedAtom: number\n  substitutionCount: number\n  valence: number\n  implicitH: number\n  pp: Vec2\n  neighbors: Array<number>\n  sgs: Pile<any>\n  badConn: boolean\n  alias: string | null\n  rglabel: string | null\n  aam: number\n  invRet: number\n  exactChangeFlag: number\n  rxnFragmentType: number\n  stereoLabel?: string | null\n  stereoParity: number\n  hasImplicitH?: boolean\n  pseudo!: string\n\n  constructor(attributes: AtomAttributes) {\n    this.label = attributes.label\n    this.fragment = getValueOrDefault(attributes.fragment, -1)\n    this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias)\n    this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope)\n    this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical)\n    this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge)\n    this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel)\n    this.attpnt = getValueOrDefault(attributes.attpnt, Atom.attrlist.attpnt)\n    this.explicitValence = getValueOrDefault(\n      attributes.explicitValence,\n      Atom.attrlist.explicitValence\n    )\n\n    this.valence = 0\n    this.implicitH = attributes.implicitH || 0 // implicitH is not an attribute\n    this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2()\n\n    // sgs should only be set when an atom is added to an s-group by an appropriate method,\n    //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\n    // TODO: make a consistency check on atom/s-group assignments\n    this.sgs = new Pile()\n\n    // query\n    this.ringBondCount = getValueOrDefault(\n      attributes.ringBondCount,\n      Atom.attrlist.ringBondCount\n    )\n    this.substitutionCount = getValueOrDefault(\n      attributes.substitutionCount,\n      Atom.attrlist.substitutionCount\n    )\n    this.unsaturatedAtom = getValueOrDefault(\n      attributes.unsaturatedAtom,\n      Atom.attrlist.unsaturatedAtom\n    )\n    this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount)\n\n    // reaction\n    this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam)\n    this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet)\n    this.exactChangeFlag = getValueOrDefault(\n      attributes.exactChangeFlag,\n      Atom.attrlist.exactChangeFlag\n    )\n    this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1)\n\n    // stereo\n    this.stereoLabel = getValueOrDefault(\n      attributes.stereoLabel,\n      Atom.attrlist.stereoLabel\n    )\n    this.stereoParity = getValueOrDefault(\n      attributes.stereoParity,\n      Atom.attrlist.stereoParity\n    )\n\n    this.atomList = attributes.atomList\n      ? new AtomList(attributes.atomList)\n      : null\n    this.neighbors = [] // set of half-bonds having this atom as their origin\n    this.badConn = false\n\n    Object.defineProperty(this, 'pseudo', {\n      enumerable: true,\n      get: function () {\n        return getPseudo(this.label)\n      },\n      set: function (value) {\n        if (isCorrectPseudo(value)) {\n          this.label = value\n        }\n      }\n    })\n  }\n\n  static getAttrHash(atom: Atom) {\n    const attrs: any = {}\n    for (const attr in Atom.attrlist) {\n      if (typeof atom[attr] !== 'undefined') attrs[attr] = atom[attr]\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Atom.attrlist) {\n      return Atom.attrlist[attr]\n    }\n  }\n\n  clone(fidMap: Map<number, number>): Atom {\n    const ret = new Atom(this)\n    if (fidMap && fidMap.has(this.fragment)) {\n      ret.fragment = fidMap.get(this.fragment)!\n    }\n    return ret\n  }\n\n  isQuery(): boolean {\n    return (\n      this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount\n    )\n  }\n\n  pureHydrogen(): boolean {\n    return this.label === 'H' && this.isotope === 0\n  }\n\n  isPlainCarbon(): boolean {\n    return (\n      this.label === 'C' &&\n      this.isotope === 0 &&\n      this.radical === 0 &&\n      this.charge === 0 &&\n      this.explicitValence < 0 &&\n      this.ringBondCount === 0 &&\n      this.substitutionCount === 0 &&\n      this.unsaturatedAtom === 0 &&\n      this.hCount === 0 &&\n      !this.atomList\n    )\n  }\n\n  isPseudo(): boolean {\n    // TODO: handle reaxys generics separately\n    return !this.atomList && !this.rglabel && !Elements.get(this.label)\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.invRet ||\n      this.exactChangeFlag ||\n      this.attpnt !== null ||\n      this.aam\n    )\n  }\n\n  calcValence(conn: number): boolean {\n    const label = this.label\n    const charge = this.charge\n    if (this.isQuery()) {\n      this.implicitH = 0\n      return true\n    }\n    const element = Elements.get(label)\n    if (!element) {\n      this.implicitH = 0\n      return true\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n    let valence = conn\n    let hyd = 0\n    const absCharge = Math.abs(charge)\n    if (groupno === 1) {\n      if (\n        label === 'H' ||\n        label === 'Li' ||\n        label === 'Na' ||\n        label === 'K' ||\n        label === 'Rb' ||\n        label === 'Cs' ||\n        label === 'Fr'\n      ) {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      }\n    } else if (groupno === 2) {\n      if (conn + rad + absCharge === 2 || conn + rad + absCharge === 0) {\n        valence = 2\n      } else hyd = -1\n    } else if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      } else if (label === 'Tl') {\n        if (charge === -1) {\n          if (rad + conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === -2) {\n          if (rad + conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (rad + conn + absCharge <= 1) {\n          valence = 1\n          hyd = 1 - rad - conn - absCharge\n        } else {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 4) {\n      if (label === 'C' || label === 'Si' || label === 'Ge') {\n        valence = 4\n        hyd = 4 - rad - conn - absCharge\n      } else if (label === 'Sn' || label === 'Pb') {\n        if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else {\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) {\n          valence = 4\n          hyd = 4 - rad - conn\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (label === 'N' || rad + conn + absCharge <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          // ELEM_P && rad + conn + absCharge > 3\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      } else if (label === 'Bi' || label === 'Sb' || label === 'As') {\n        if (charge === 1) {\n          if (rad + conn <= 2 && label !== 'As') {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else {\n            valence = 4\n            hyd = 4 - rad - conn\n          }\n        } else if (charge === 2) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else if (rad + conn <= 3) {\n          valence = 3\n          hyd = 3 - rad - conn - absCharge\n        } else {\n          valence = 5\n          hyd = 5 - rad - conn - absCharge\n        }\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) {\n          valence = 3\n          hyd = 3 - rad - conn\n        } else {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        }\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) {\n          if (conn <= 3) {\n            valence = 3\n            hyd = 3 - rad - conn\n          } else {\n            valence = 5\n            hyd = 5 - rad - conn\n          }\n        } else if (conn + rad + absCharge <= 2) {\n          valence = 2\n          hyd = 2 - rad - conn - absCharge\n        } else if (conn + rad + absCharge <= 4) {\n          // See examples in PubChem\n          // [S] : CID 16684216\n          // [Se]: CID 5242252\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 4\n          hyd = 4 - rad - conn - absCharge\n        } else {\n          // See examples in PubChem\n          // [S] : CID 46937044\n          // [Se]: CID 59786\n          // [Po]: no example, just following ISIS/Draw logic here\n          valence = 6\n          hyd = 6 - rad - conn - absCharge\n        }\n      } else if (label === 'Te') {\n        if (charge === -1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          }\n        } else if (charge === 0 || charge === 2) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn - absCharge\n          } else if (conn <= 4) {\n            valence = 4\n            hyd = 4 - rad - conn - absCharge\n          } else if (charge === 0 && conn <= 6) {\n            valence = 6\n            hyd = 6 - rad - conn - absCharge\n          } else {\n            hyd = -1\n          }\n        }\n      }\n    } else if (groupno === 7) {\n      if (label === 'F') {\n        valence = 1\n        hyd = 1 - rad - conn - absCharge\n      } else if (\n        label === 'Cl' ||\n        label === 'Br' ||\n        label === 'I' ||\n        label === 'At'\n      ) {\n        if (charge === 1) {\n          if (conn <= 2) {\n            valence = 2\n            hyd = 2 - rad - conn\n          } else if (conn === 3 || conn === 5 || conn >= 7) {\n            hyd = -1\n          }\n        } else if (charge === 0) {\n          if (conn <= 1) {\n            valence = 1\n            hyd = 1 - rad - conn\n            // While the halogens can have valence 3, they can not have\n            // hydrogens in that case.\n          } else if (conn === 2 || conn === 4 || conn === 6) {\n            if (rad === 1) {\n              valence = conn\n              hyd = 0\n            } else {\n              hyd = -1 // will throw an error in the end\n            }\n          } else if (conn > 7) {\n            hyd = -1 // will throw an error in the end\n          }\n        }\n      }\n    } else if (groupno === 8) {\n      if (conn + rad + absCharge === 0) valence = 1\n      else hyd = -1\n    }\n\n    this.valence = valence\n    this.implicitH = hyd\n    if (this.implicitH < 0) {\n      this.valence = conn\n      this.implicitH = 0\n      this.badConn = true\n      return false\n    }\n    return true\n  }\n\n  calcValenceMinusHyd(conn: number): number {\n    const charge = this.charge\n    const label = this.label\n    const element = Elements.get(this.label)\n    if (!element) {\n      // query atom, skip\n      this.implicitH = 0\n      return 0\n    }\n\n    const groupno = element.group\n    const rad = radicalElectrons(this.radical)\n\n    if (groupno === 3) {\n      if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\n        if (charge === -1) {\n          if (rad + conn <= 4) return rad + conn\n        }\n      }\n    } else if (groupno === 5) {\n      if (label === 'N' || label === 'P') {\n        if (charge === 1) return rad + conn\n        if (charge === 2) return rad + conn\n      } else if (label === 'Sb' || label === 'Bi' || label === 'As') {\n        if (charge === 1) return rad + conn\n        else if (charge === 2) return rad + conn\n      }\n    } else if (groupno === 6) {\n      if (label === 'O') {\n        if (charge >= 1) return rad + conn\n      } else if (label === 'S' || label === 'Se' || label === 'Po') {\n        if (charge === 1) return rad + conn\n      }\n    } else if (groupno === 7) {\n      if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\n        if (charge === 1) return rad + conn\n      }\n    }\n\n    return rad + conn + Math.abs(charge)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\n\nexport interface BondAttributes {\n  reactingCenterStatus?: number\n  topology?: number\n  stereo?: number\n  xxx?: string\n  type: number\n  end: number\n  begin: number\n}\n\nexport class Bond {\n  static PATTERN = {\n    TYPE: {\n      SINGLE: 1,\n      DOUBLE: 2,\n      TRIPLE: 3,\n      AROMATIC: 4,\n      SINGLE_OR_DOUBLE: 5,\n      SINGLE_OR_AROMATIC: 6,\n      DOUBLE_OR_AROMATIC: 7,\n      ANY: 8,\n      DATIVE: 9,\n      HYDROGEN: 10\n    },\n\n    STEREO: {\n      NONE: 0,\n      UP: 1,\n      EITHER: 4,\n      DOWN: 6,\n      CIS_TRANS: 3\n    },\n\n    TOPOLOGY: {\n      EITHER: 0,\n      RING: 1,\n      CHAIN: 2\n    },\n\n    REACTING_CENTER: {\n      NOT_CENTER: -1,\n      UNMARKED: 0,\n      CENTER: 1,\n      UNCHANGED: 2,\n      MADE_OR_BROKEN: 4,\n      ORDER_CHANGED: 8,\n      MADE_OR_BROKEN_AND_CHANGED: 12\n    }\n  }\n\n  static attrlist = {\n    type: Bond.PATTERN.TYPE.SINGLE,\n    stereo: Bond.PATTERN.STEREO.NONE,\n    topology: Bond.PATTERN.TOPOLOGY.EITHER,\n    reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED\n  }\n\n  begin: number\n  end: number\n  readonly type: number\n  readonly xxx: string\n  readonly stereo: number\n  readonly topology: number\n  readonly reactingCenterStatus: number\n  len: number\n  sb: number\n  sa: number\n  hb1?: number\n  hb2?: number\n  angle: number\n  center: Vec2\n\n  constructor(attributes: BondAttributes) {\n    this.begin = attributes.begin\n    this.end = attributes.end\n    this.type = attributes.type\n    this.xxx = attributes.xxx || ''\n    this.stereo = Bond.PATTERN.STEREO.NONE\n    this.topology = Bond.PATTERN.TOPOLOGY.EITHER\n    this.reactingCenterStatus = 0\n    this.len = 0\n    this.sb = 0\n    this.sa = 0\n    this.angle = 0\n\n    if (attributes.stereo) this.stereo = attributes.stereo\n    if (attributes.topology) this.topology = attributes.topology\n    if (attributes.reactingCenterStatus) {\n      this.reactingCenterStatus = attributes.reactingCenterStatus\n    }\n\n    this.center = new Vec2()\n  }\n\n  static getAttrHash(bond: Bond) {\n    const attrs = {}\n    for (const attr in Bond.attrlist) {\n      if (bond[attr] || attr === 'stereo') {\n        attrs[attr] = bond[attr]\n      }\n    }\n    return attrs\n  }\n\n  static attrGetDefault(attr: string) {\n    if (attr in Bond.attrlist) {\n      return Bond.attrlist[attr]\n    }\n  }\n\n  hasRxnProps(): boolean {\n    return !!this.reactingCenterStatus\n  }\n\n  getCenter(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin).pp\n    const p2 = struct.atoms.get(this.end).pp\n    return Vec2.lc2(p1, 0.5, p2, 0.5)\n  }\n\n  getDir(struct: any): Vec2 {\n    const p1 = struct.atoms.get(this.begin)!.pp\n    const p2 = struct.atoms.get(this.end)!.pp\n    return p2.sub(p1).normalized()\n  }\n\n  clone(aidMap?: Map<number, number> | null): Bond {\n    const cp = new Bond(this)\n    if (aidMap) {\n      cp.begin = aidMap.get(cp.begin)!\n      cp.end = aidMap.get(cp.end)!\n    }\n    return cp\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nimport { Bond } from './bond'\nimport { StereoLabel } from './atom'\nimport { Struct } from './struct'\n\nexport enum StereoFlag {\n  Mixed = 'MIXED',\n  Abs = 'ABS',\n  And = 'AND',\n  Or = 'OR'\n}\n\nfunction calcStereoFlag(\n  struct: Struct,\n  stereoAids: Array<number>\n): StereoFlag | undefined {\n  if (!stereoAids || stereoAids.length === 0) return undefined\n  const filteredStereoAtoms = stereoAids\n    .map((aid) => struct.atoms.get(aid))\n    .filter((atom) => atom?.stereoLabel)\n  if (!filteredStereoAtoms.length) return undefined\n\n  const atom = filteredStereoAtoms[0]!\n  const stereoLabel = atom.stereoLabel! // {string | null} \"<abs|and|or>-<group>\"\n\n  const hasAnotherLabel = filteredStereoAtoms.some(\n    (atom) => atom?.stereoLabel !== stereoLabel\n  )\n\n  let stereoFlag: StereoFlag\n  if (hasAnotherLabel) {\n    stereoFlag = StereoFlag.Mixed\n  } else {\n    const label = stereoLabel.match(/\\D+/g)?.[0]\n    switch (label) {\n      case StereoLabel.Abs: {\n        stereoFlag = StereoFlag.Abs\n        break\n      }\n      case StereoLabel.And: {\n        stereoFlag = StereoFlag.And\n        break\n      }\n      case StereoLabel.Or: {\n        stereoFlag = StereoFlag.Or\n        break\n      }\n      default: {\n        throw new Error(`Unsupported stereo label: ${label}.`)\n      }\n    }\n  }\n  return stereoFlag\n}\n\nexport class Fragment {\n  #enhancedStereoFlag?: StereoFlag\n  stereoFlagPosition?: Vec2\n  #stereoAtoms: Array<number>\n\n  get stereoAtoms(): Array<number> {\n    return [...this.#stereoAtoms]\n  }\n\n  get enhancedStereoFlag() {\n    return this.#enhancedStereoFlag\n  }\n\n  constructor(stereoAtoms: Array<number> = [], stereoFlagPosition?: Point) {\n    if (stereoFlagPosition) {\n      this.stereoFlagPosition = new Vec2(stereoFlagPosition)\n    }\n\n    this.#stereoAtoms = stereoAtoms\n  }\n\n  static getDefaultStereoFlagPosition(\n    struct: Struct,\n    fragmentId: number\n  ): Vec2 | undefined {\n    const fragment = struct.getFragment(fragmentId)\n    if (!fragment) return undefined\n    const bb = fragment.getCoordBoundingBox()\n    return new Vec2(bb.max.x, bb.min.y - 1)\n  }\n\n  clone(aidMap: Map<number, number>) {\n    const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid)!)\n    const fr = new Fragment(stereoAtoms, this.stereoFlagPosition)\n    fr.#enhancedStereoFlag = this.#enhancedStereoFlag\n    return fr\n  }\n\n  updateStereoFlag(struct: Struct) {\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n    return this.#enhancedStereoFlag\n  }\n\n  // TODO: split to 'add' and 'remove methods\n  updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean) {\n    if (isAdd && !this.#stereoAtoms.includes(aid)) this.#stereoAtoms.push(aid)\n    if (\n      !isAdd &&\n      (struct.atoms.get(aid)?.fragment !== frId ||\n        !Array.from(struct.bonds.values())\n          .filter(\n            (bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE\n          )\n          .some((bond) => bond.begin === aid))\n    ) {\n      this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid)\n    }\n\n    this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms)\n  }\n\n  addStereoAtom(atomId: number): boolean {\n    if (!this.#stereoAtoms.includes(atomId)) {\n      this.stereoAtoms.push(atomId)\n      return true\n    }\n    return false\n  }\n\n  deleteStereoAtom(\n    struct: Struct,\n    fragmentId: number,\n    atomId: number\n  ): boolean {\n    if (\n      struct.atoms.get(atomId)?.fragment !== fragmentId ||\n      !Array.from(struct.bonds.values())\n        .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\n        .some((bond) => bond.begin === atomId)\n    ) {\n      this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId)\n      return true\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\n\nexport interface ScaleOptions {\n  scale: number\n}\n\nfunction scaled2obj(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(1 / options.scale)\n}\n\nfunction obj2scaled(v: Vec2, options: ScaleOptions): Vec2 {\n  return v.scaled(options.scale)\n}\n\nexport const Scale = {\n  scaled2obj,\n  obj2scaled\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Neighbor, Struct } from 'domain/entities'\n\nfunction isCorrectStereoCenter(\n  bond: Bond,\n  beginNeighs: Array<Neighbor> | undefined,\n  endNeighs: Array<Neighbor> | undefined,\n  struct: Struct\n) {\n  const beginAtom = struct.atoms.get(bond.begin)\n\n  let EndAtomNeigh: number | undefined = NaN\n\n  if (endNeighs?.length === 2) {\n    EndAtomNeigh =\n      endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid\n  }\n\n  if (bond.stereo > 0) {\n    if (\n      endNeighs?.length === 1 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0\n    ) {\n      return false\n    }\n\n    if (\n      endNeighs?.length === 2 &&\n      beginNeighs?.length === 2 &&\n      Number(beginAtom?.implicitH) % 2 === 0 &&\n      struct.atomGetNeighbors(EndAtomNeigh)?.length === 1\n    ) {\n      return false\n    }\n\n    if (beginNeighs?.length === 1) {\n      return false\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const StereoValidator = {\n  isCorrectStereoCenter\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class FunctionalGroupsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: FunctionalGroupsProvider\n  functionalGroupsList: Struct[]\n  constructor() {\n    this.functionalGroupsList = []\n  }\n\n  public static getInstance(): FunctionalGroupsProvider {\n    if (!FunctionalGroupsProvider.instance) {\n      FunctionalGroupsProvider.instance = new FunctionalGroupsProvider()\n    }\n    return FunctionalGroupsProvider.instance\n  }\n\n  public getFunctionalGroupsList() {\n    return this.functionalGroupsList\n  }\n\n  public setFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = list\n  }\n\n  public addToFunctionalGroupsList(list: Struct[]): void {\n    this.functionalGroupsList = [...this.functionalGroupsList, ...list]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Struct } from '../entities'\n\nexport class SaltsAndSolventsProvider {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: SaltsAndSolventsProvider\n  saltsAndSolventsList: Struct[]\n  constructor() {\n    this.saltsAndSolventsList = []\n  }\n\n  public static getInstance(): SaltsAndSolventsProvider {\n    if (!SaltsAndSolventsProvider.instance) {\n      SaltsAndSolventsProvider.instance = new SaltsAndSolventsProvider()\n    }\n    return SaltsAndSolventsProvider.instance\n  }\n\n  public getSaltsAndSolventsList() {\n    return this.saltsAndSolventsList\n  }\n\n  public setSaltsAndSolventsList(list: Struct[]): void {\n    this.saltsAndSolventsList = list\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\nexport class Box2Abs {\n  readonly p0: Vec2\n  readonly p1: Vec2\n\n  constructor()\n  constructor(p: Vec2)\n  constructor(p0: Vec2, p1: Vec2)\n  constructor(x0: number, y0: number, x1: number, y1: number)\n  constructor(...args: Array<any>) {\n    if (args.length === 1 && 'min' in args[0] && 'max' in args[0]) {\n      this.p0 = args[0].min\n      this.p1 = args[0].max\n    }\n\n    if (args.length === 2) {\n      this.p0 = args[0]\n      this.p1 = args[1]\n    } else if (args.length === 4) {\n      this.p0 = new Vec2(args[0], args[1])\n      this.p1 = new Vec2(args[2], args[3])\n    } else if (args.length === 0) {\n      this.p0 = new Vec2()\n      this.p1 = new Vec2()\n    } else {\n      throw new Error(\n        'Box2Abs constructor only accepts 4 numbers or 2 vectors or no args!'\n      )\n    }\n  }\n\n  toString(): string {\n    return this.p0.toString() + ' ' + this.p1.toString()\n  }\n\n  clone(): Box2Abs {\n    return new Box2Abs(this.p0, this.p1)\n  }\n\n  extend(lp: Vec2, rb: Vec2): Box2Abs {\n    rb = rb || lp\n    return new Box2Abs(this.p0.sub(lp), this.p1.add(rb))\n  }\n\n  include(p: Vec2): Box2Abs {\n    assert(p != null)\n\n    return new Box2Abs(this.p0.min(p), this.p1.max(p))\n  }\n\n  contains(p: Vec2, ext = 0.0): boolean {\n    assert(p != null)\n\n    return (\n      p.x >= this.p0.x - ext &&\n      p.x <= this.p1.x + ext &&\n      p.y >= this.p0.y - ext &&\n      p.y <= this.p1.y + ext\n    )\n  }\n\n  translate(d: Vec2): Box2Abs {\n    return new Box2Abs(this.p0.add(d), this.p1.add(d))\n  }\n\n  transform(f: (p: Vec2, options: any) => Vec2, options: any): Box2Abs {\n    assert(typeof f === 'function')\n\n    return new Box2Abs(f(this.p0, options), f(this.p1, options))\n  }\n\n  sz(): Vec2 {\n    return this.p1.sub(this.p0)\n  }\n\n  centre(): Vec2 {\n    return Vec2.centre(this.p0, this.p1)\n  }\n\n  pos() {\n    return this.p0\n  }\n\n  static fromRelBox(relBox: any): Box2Abs {\n    return new Box2Abs(\n      relBox.x,\n      relBox.y,\n      relBox.x + relBox.width,\n      relBox.y + relBox.height\n    )\n  }\n\n  static union(b1: Box2Abs, b2: Box2Abs): Box2Abs {\n    return new Box2Abs(Vec2.min(b1.p0, b2.p0), Vec2.max(b1.p1, b2.p1))\n  }\n\n  static segmentIntersection(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    const dc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x)\n    const dd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x)\n    const da = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x)\n    const db = (c.x - b.x) * (d.y - b.y) - (c.y - b.y) * (d.x - b.x)\n\n    return dc * dd <= 0 && da * db <= 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom } from './atom'\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Pile } from './pile'\nimport { Struct } from './struct'\nimport { SaltsAndSolventsProvider } from '../helpers'\nimport { Vec2 } from './vec2'\n\nexport class SGroupBracketParams {\n  readonly c: Vec2\n  readonly d: Vec2\n  readonly n: Vec2\n  readonly w: number\n  readonly h: number\n\n  constructor(c: Vec2, d: Vec2, w: number, h: number) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n}\n\nexport class SGroup {\n  static TYPES = {\n    SUP: 'SUP',\n    MUL: 'MUL',\n    SRU: 'SRU',\n    MON: 'MON',\n    MER: 'MER',\n    COP: 'COP',\n    CRO: 'CRO',\n    MOD: 'MOD',\n    GRA: 'GRA',\n    COM: 'COM',\n    MIX: 'MIX',\n    FOR: 'FOR',\n    DAT: 'DAT',\n    ANY: 'ANY',\n    GEN: 'GEN'\n  }\n\n  type: string\n  id: number\n  label: number\n  bracketBox: any\n  bracketDir: Vec2\n  areas: any\n  hover: boolean\n  hovering: any\n  selected: boolean\n  selectionPlate: any\n  atoms: any\n  atomSet: any\n  parentAtomSet: any\n  patoms?: any\n  allAtoms: any\n  bonds: any\n  xBonds: any\n  neiAtoms: any\n  pp: Vec2 | null\n  data: any\n  firstSgroupAtom: any\n\n  constructor(type: string) {\n    this.type = type\n    this.id = -1\n    this.label = -1\n    this.bracketBox = null\n    this.bracketDir = new Vec2(1, 0)\n    this.areas = []\n\n    this.hover = false\n    this.hovering = null\n    this.selected = false\n    this.selectionPlate = null\n\n    this.atoms = []\n    this.patoms = []\n    this.bonds = []\n    this.xBonds = []\n    this.neiAtoms = []\n    this.pp = null\n    this.data = {\n      mul: 1, // multiplication count for MUL group\n      connectivity: 'ht', // head-to-head, head-to-tail or either-unknown\n      name: '',\n      subscript: 'n',\n      expanded: undefined,\n      // data s-group fields\n      attached: false,\n      absolute: true,\n      showUnits: false,\n      nCharsToDisplay: -1,\n      tagChar: '',\n      daspPos: 1,\n      fieldType: 'F',\n      fieldName: '',\n      fieldValue: '',\n      units: '',\n      query: '',\n      queryOp: ''\n    }\n  }\n\n  // TODO: these methods should be overridden\n  //      and should only accept valid attributes for each S-group type.\n  //      The attributes should be accessed via these methods only and not directly through this.data.\n  // stub\n  getAttr(attr: string): any {\n    return this.data[attr]\n  }\n\n  // TODO: should be group-specific\n  getAttrs(): any {\n    const attrs = {}\n    Object.keys(this.data).forEach((attr) => {\n      attrs[attr] = this.data[attr]\n    })\n    return attrs\n  }\n\n  // stub\n  setAttr(attr: string, value: any): any {\n    const oldValue = this.data[attr]\n    this.data[attr] = value\n    return oldValue\n  }\n\n  // stub\n  checkAttr(attr: string, value: any): boolean {\n    return this.data[attr] === value\n  }\n\n  updateOffset(offset: Vec2): void {\n    this.pp = Vec2.sum(this.bracketBox.p1, offset)\n  }\n\n  calculatePP(struct: Struct): void {\n    let topLeftPoint\n\n    if (this.data.context === 'Atom' || this.data.context === 'Bond') {\n      const contentBoxes: Array<any> = []\n      let contentBB: Box2Abs | null = null\n      const direction = new Vec2(1, 0)\n\n      this.atoms.forEach((aid) => {\n        const atom = struct.atoms.get(aid)\n        const pos = new Vec2(atom!.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        const bba = new Box2Abs(pos, pos).extend(ext, ext)\n        contentBoxes.push(bba)\n      })\n      contentBoxes.forEach((bba) => {\n        let bbb: Box2Abs | null = null\n        ;[bba.p0.x, bba.p1.x].forEach((x) => {\n          ;[bba.p0.y, bba.p1.y].forEach((y) => {\n            const v = new Vec2(x, y)\n            const p = new Vec2(\n              Vec2.dot(v, direction),\n              Vec2.dot(v, direction.rotateSC(1, 0))\n            )\n            bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n          })\n        })\n        contentBB = !contentBB ? bbb : Box2Abs.union(contentBB, bbb!)\n      })\n\n      topLeftPoint = contentBB!.p0\n    } else {\n      topLeftPoint = this.bracketBox.p1.add(new Vec2(0.5, 0.5))\n    }\n\n    const sgroups = Array.from(struct.sgroups.values())\n    for (let i = 0; i < struct.sgroups.size; ++i) {\n      if (!descriptorIntersects(sgroups as [], topLeftPoint)) break\n\n      topLeftPoint = topLeftPoint.add(new Vec2(0, 0.5))\n    }\n\n    // TODO: the code below is a temporary solution that will be removed after the implementation of the internal format\n    // TODO: in schema.json required fields [\"context\", \"FieldValue\"] in sgroups type DAT must be returned\n    if (this.data.fieldName === 'INDIGO_CIP_DESC') {\n      if (this.atoms.length === 1) {\n        const sAtom = this.atoms[0]\n        const sAtomPP = struct.atoms.get(sAtom)?.pp\n\n        if (sAtomPP) {\n          topLeftPoint = sAtomPP\n        }\n      } else {\n        topLeftPoint = SGroup.getMassCentre(struct, this.atoms)\n      }\n    }\n\n    this.pp = topLeftPoint\n  }\n\n  static getOffset(sgroup: SGroup): null | Vec2 {\n    if (!sgroup?.pp) return null\n    return Vec2.diff(sgroup.pp, sgroup.bracketBox.p1)\n  }\n\n  static isSaltOrSolvent(moleculeName: string): boolean {\n    const saltsAndSolventsProvider = SaltsAndSolventsProvider.getInstance()\n    const saltsAndSolvents = saltsAndSolventsProvider.getSaltsAndSolventsList()\n    return saltsAndSolvents.some(\n      ({ name, abbreviation }) =>\n        name === moleculeName || moleculeName === abbreviation\n    )\n  }\n\n  static isAtomInSaltOrSolvent(\n    atomId: number,\n    sgroupsOnCanvas: SGroup[]\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name)\n    )\n    return onlySaltsOrSolvents.some(({ atoms }) =>\n      atoms.some((atomIdInSaltOrSolvent) => atomIdInSaltOrSolvent === atomId)\n    )\n  }\n\n  static isBondInSaltOrSolvent(\n    bondId: number,\n    sgroupsOnCanvas: SGroup[]\n  ): boolean {\n    const onlySaltsOrSolvents = sgroupsOnCanvas.filter((sgroup) =>\n      this.isSaltOrSolvent(sgroup.data.name)\n    )\n    return onlySaltsOrSolvents.some(({ bonds }) =>\n      bonds.some((bondIdInSaltOrSolvent) => bondIdInSaltOrSolvent === bondId)\n    )\n  }\n\n  static filterAtoms(atoms: any, map: any) {\n    const newAtoms: Array<any> = []\n    for (let i = 0; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      if (typeof map[aid] !== 'number') newAtoms.push(aid)\n      else if (map[aid] >= 0) newAtoms.push(map[aid])\n      else newAtoms.push(-1)\n    }\n    return newAtoms\n  }\n\n  static removeNegative(atoms: any) {\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < atoms.length; ++j) {\n      if (atoms[j] >= 0) newAtoms.push(atoms[j])\n    }\n    return newAtoms\n  }\n\n  static filter(_mol, sg, atomMap) {\n    sg.atoms = SGroup.removeNegative(SGroup.filterAtoms(sg.atoms, atomMap))\n  }\n\n  static clone(sgroup: SGroup, aidMap: Map<number, number>): SGroup {\n    const cp = new SGroup(sgroup.type)\n\n    Object.keys(sgroup.data).forEach((field) => {\n      cp.data[field] = sgroup.data[field]\n    })\n\n    cp.atoms = sgroup.atoms.map((elem) => aidMap.get(elem))\n    cp.pp = sgroup.pp\n    cp.bracketBox = sgroup.bracketBox\n    cp.patoms = null\n    cp.bonds = null\n    cp.allAtoms = sgroup.allAtoms\n    cp.data.expanded = sgroup.data.expanded\n    return cp\n  }\n\n  static addAtom(sgroup: SGroup, aid: number): void {\n    sgroup.atoms.push(aid)\n  }\n\n  static removeAtom(sgroup: SGroup, aid: number): void {\n    for (let i = 0; i < sgroup.atoms.length; ++i) {\n      if (sgroup.atoms[i] === aid) {\n        sgroup.atoms.splice(i, 1)\n        return\n      }\n    }\n  }\n\n  static getCrossBonds(\n    mol: any,\n    parentAtomSet: Pile<number>\n  ): { [key: number]: Array<Bond> } {\n    const crossBonds: { [key: number]: Array<Bond> } = {}\n    mol.bonds.forEach((bond, bid) => {\n      if (parentAtomSet.has(bond.begin) && !parentAtomSet.has(bond.end)) {\n        if (!crossBonds[bond.begin]) {\n          crossBonds[bond.begin] = []\n        }\n        crossBonds[bond.begin].push(bid)\n      } else if (\n        parentAtomSet.has(bond.end) &&\n        !parentAtomSet.has(bond.begin)\n      ) {\n        if (!crossBonds[bond.end]) {\n          crossBonds[bond.end] = []\n        }\n        crossBonds[bond.end].push(bid)\n      }\n    })\n    return crossBonds\n  }\n\n  static bracketPos(\n    sGroup,\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> }\n  ): void {\n    const atoms = sGroup.atoms\n    const crossBonds = crossBondsPerAtom\n      ? Object.values(crossBondsPerAtom).flat()\n      : null\n    if (!crossBonds || crossBonds.length !== 2) {\n      sGroup.bracketDir = new Vec2(1, 0)\n    } else {\n      const p1 = mol.bonds.get(crossBonds[0]).getCenter(mol)\n      const p2 = mol.bonds.get(crossBonds[1]).getCenter(mol)\n      sGroup.bracketDir = Vec2.diff(p2, p1).normalized()\n    }\n    const d = sGroup.bracketDir\n\n    let braketBox: Box2Abs | null = null\n    const contentBoxes: Array<any> = []\n    atoms.forEach((aid) => {\n      const atom = mol.atoms.get(aid)\n      const pos = new Vec2(atom.pp)\n      const ext = new Vec2(0.05 * 3, 0.05 * 3)\n      const bba = new Box2Abs(pos, pos).extend(ext, ext)\n      contentBoxes.push(bba)\n    })\n    contentBoxes.forEach((bba) => {\n      let bbb: Box2Abs | null = null\n      ;[bba.p0.x, bba.p1.x].forEach((x) => {\n        ;[bba.p0.y, bba.p1.y].forEach((y) => {\n          const v = new Vec2(x, y)\n          const p = new Vec2(Vec2.dot(v, d), Vec2.dot(v, d.rotateSC(1, 0)))\n          bbb = !bbb ? new Box2Abs(p, p) : bbb!.include(p)\n        })\n      })\n      braketBox = !braketBox ? bbb : Box2Abs.union(braketBox, bbb!)\n    })\n    const vext = new Vec2(0.2, 0.4)\n    if (braketBox) braketBox = (braketBox as Box2Abs).extend(vext, vext)\n    sGroup.bracketBox = braketBox\n  }\n\n  static getBracketParameters(\n    mol,\n    crossBondsPerAtom: { [key: number]: Array<Bond> },\n    atomSet: Pile<number>,\n    bb,\n    d,\n    n\n  ): Array<any> {\n    const brackets: Array<any> = []\n    const crossBondsPerAtomValues = Object.values(crossBondsPerAtom)\n    const crossBonds = crossBondsPerAtomValues.flat()\n    if (crossBonds.length < 2) {\n      ;(function () {\n        d = d || new Vec2(1, 0)\n        n = n || d.rotateSC(1, 0)\n        const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n        const cl = Vec2.lc2(d, bb.p0.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const cr = Vec2.lc2(d, bb.p1.x, n, 0.5 * (bb.p0.y + bb.p1.y))\n        const bracketHeight = bb.sz().y\n\n        brackets.push(\n          new SGroupBracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n          new SGroupBracketParams(cr, d, bracketWidth, bracketHeight)\n        )\n      })()\n    } else if (\n      crossBonds.length === 2 &&\n      crossBondsPerAtomValues.length === 2\n    ) {\n      ;(function () {\n        const b1 = mol.bonds.get(crossBonds[0])\n        const b2 = mol.bonds.get(crossBonds[1])\n        const cl0 = b1.getCenter(mol)\n        const cr0 = b2.getCenter(mol)\n        const dr = Vec2.diff(cr0, cl0).normalized()\n        const dl = dr.negated()\n\n        const bracketWidth = 0.25\n        const bracketHeight = 1.5\n        brackets.push(\n          new SGroupBracketParams(\n            cl0.addScaled(dl, 0),\n            dl,\n            bracketWidth,\n            bracketHeight\n          ),\n          new SGroupBracketParams(\n            cr0.addScaled(dr, 0),\n            dr,\n            bracketWidth,\n            bracketHeight\n          )\n        )\n      })()\n    } else {\n      ;(function () {\n        for (let i = 0; i < crossBonds.length; ++i) {\n          const b = mol.bonds.get(crossBonds[i])\n          const c = b.getCenter(mol)\n          const d = atomSet.has(b.begin)\n            ? b.getDir(mol)\n            : b.getDir(mol).negated()\n          brackets.push(new SGroupBracketParams(c, d, 0.2, 1.0))\n        }\n      })()\n    }\n    return brackets\n  }\n\n  static getObjBBox(atoms, mol): Box2Abs {\n    const a0 = mol.atoms.get(atoms[0]).pp\n    let bb = new Box2Abs(a0, a0)\n    for (let i = 1; i < atoms.length; ++i) {\n      const aid = atoms[i]\n      const atom = mol.atoms.get(aid)\n      const p = atom.pp\n      bb = bb.include(p)\n    }\n    return bb\n  }\n\n  static getAtoms(mol, sg): Array<any> {\n    if (!sg.allAtoms) return sg.atoms\n    const atoms: Array<any> = []\n    mol.atoms.forEach((_atom, aid) => {\n      atoms.push(aid)\n    })\n    return atoms\n  }\n\n  static getBonds(mol, sg): Array<any> {\n    const atoms = SGroup.getAtoms(mol, sg)\n    const bonds: Array<any> = []\n    mol.bonds.forEach((bond, bid) => {\n      if (atoms.indexOf(bond.begin) >= 0 && atoms.indexOf(bond.end) >= 0) {\n        bonds.push(bid)\n      }\n    })\n    return bonds\n  }\n\n  static prepareMulForSaving(sgroup, mol): void {\n    sgroup.atoms.sort((a, b) => a - b)\n    sgroup.atomSet = new Pile(sgroup.atoms)\n    sgroup.parentAtomSet = new Pile(sgroup.atomSet)\n    const inBonds: Array<any> = []\n    const xBonds: Array<any> = []\n\n    mol.bonds.forEach((bond, bid) => {\n      if (\n        sgroup.parentAtomSet.has(bond.begin) &&\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        inBonds.push(bid)\n      } else if (\n        sgroup.parentAtomSet.has(bond.begin) ||\n        sgroup.parentAtomSet.has(bond.end)\n      ) {\n        xBonds.push(bid)\n      }\n    })\n\n    if (xBonds.length !== 0 && xBonds.length !== 2) {\n      throw Error('Unsupported cross-bonds number')\n    }\n\n    let xAtom1 = -1\n    let xAtom2 = -1\n    let crossBond = null\n    if (xBonds.length === 2) {\n      const bond1 = mol.bonds.get(xBonds[0])\n      xAtom1 = sgroup.parentAtomSet.has(bond1.begin) ? bond1.begin : bond1.end\n\n      const bond2 = mol.bonds.get(xBonds[1])\n      xAtom2 = sgroup.parentAtomSet.has(bond2.begin) ? bond2.begin : bond2.end\n      crossBond = bond2\n    }\n\n    let tailAtom = xAtom2\n\n    const newAtoms: Array<any> = []\n    for (let j = 0; j < sgroup.data.mul - 1; j++) {\n      const amap = {}\n      sgroup.atoms.forEach((aid) => {\n        const atom = mol.atoms.get(aid)\n        const aid2 = mol.atoms.add(new Atom(atom))\n        newAtoms.push(aid2)\n        sgroup.atomSet.add(aid2)\n        amap[aid] = aid2\n      })\n      inBonds.forEach((bid) => {\n        const bond = mol.bonds.get(bid)\n        const newBond = new Bond(bond)\n        newBond.begin = amap[newBond.begin]\n        newBond.end = amap[newBond.end]\n        mol.bonds.add(newBond)\n      })\n      if (crossBond !== null) {\n        const newCrossBond = new Bond(crossBond)\n        newCrossBond.begin = tailAtom\n        newCrossBond.end = amap[xAtom1]\n        mol.bonds.add(newCrossBond)\n        tailAtom = amap[xAtom2]\n      }\n    }\n    if (tailAtom >= 0) {\n      const xBond2 = mol.bonds.get(xBonds[1])\n      if (xBond2.begin === xAtom2) xBond2.begin = tailAtom\n      else xBond2.end = tailAtom\n    }\n    sgroup.bonds = xBonds\n\n    newAtoms.forEach((aid) => {\n      mol.sGroupForest\n        .getPathToRoot(sgroup.id)\n        .reverse()\n        .forEach((sgid) => {\n          mol.atomAddToSGroup(sgid, aid)\n        })\n    })\n  }\n\n  static getMassCentre(mol, atoms): Vec2 {\n    let c = new Vec2() // mass centre\n    for (let i = 0; i < atoms.length; ++i) {\n      c = c.addScaled(mol.atoms.get(atoms[i]).pp, 1.0 / atoms.length)\n    }\n    return c\n  }\n}\n\nfunction descriptorIntersects(sgroups: [], topLeftPoint: Vec2): boolean {\n  return sgroups.some((sg: SGroup) => {\n    if (!sg.pp) return false\n\n    const sgBottomRightPoint = sg.pp.add(new Vec2(0.5, 0.5))\n    const bottomRightPoint = topLeftPoint.add(new Vec2(0.5, 0.5))\n\n    return Box2Abs.segmentIntersection(\n      sg.pp,\n      sgBottomRightPoint,\n      topLeftPoint,\n      bottomRightPoint\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { FunctionalGroupsProvider } from '../helpers'\nimport { SGroup } from './sgroup'\nimport { Struct } from './struct'\nimport assert from 'assert'\n\nexport class FunctionalGroup {\n  #sgroup: SGroup\n\n  constructor(sgroup: SGroup) {\n    assert(sgroup != null)\n\n    this.#sgroup = sgroup\n  }\n\n  get name(): string {\n    return this.#sgroup.data.name\n  }\n\n  get relatedSGroupId(): number {\n    return this.#sgroup.id\n  }\n\n  get isExpanded(): boolean {\n    return this.#sgroup.data.expanded\n  }\n\n  get relatedSGroup(): SGroup {\n    return this.#sgroup\n  }\n\n  static isFunctionalGroup(sgroup): boolean {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const functionalGroups = provider.getFunctionalGroupsList()\n    const {\n      data: { name },\n      type\n    } = sgroup\n    return (\n      type === 'SUP' &&\n      (functionalGroups.some((type) => type.name === name) ||\n        SGroup.isSaltOrSolvent(name))\n    )\n  }\n\n  static getFunctionalGroupByName(searchName: string): Struct | null {\n    const provider = FunctionalGroupsProvider.getInstance()\n    const functionalGroups = provider.getFunctionalGroupsList()\n    const foundGroup = functionalGroups.find(({ name, abbreviation }) => {\n      return name === searchName || abbreviation === searchName\n    })\n    return foundGroup || null\n  }\n\n  static atomsInFunctionalGroup(functionalGroups, atom): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return atom\n    }\n    return null\n  }\n\n  static bondsInFunctionalGroup(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    if (functionalGroups.size === 0) {\n      return null\n    }\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return bond\n    }\n    return null\n  }\n\n  static findFunctionalGroupByAtom(functionalGroups, atom): number | null {\n    for (const fg of functionalGroups.values()) {\n      if (fg.relatedSGroup.atoms.includes(atom)) return fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static findFunctionalGroupByBond(\n    molecule,\n    functionalGroups,\n    bond\n  ): number | null {\n    for (const fg of functionalGroups.values()) {\n      const bonds = SGroup.getBonds(molecule, fg.relatedSGroup)\n      if (bonds.includes(bond)) return fg.relatedSGroupId\n    }\n    return null\n  }\n\n  static clone(functionalGroup: FunctionalGroup): FunctionalGroup {\n    return new FunctionalGroup(functionalGroup.#sgroup)\n  }\n\n  // Checks, if S-Group is standalone or attached to some other structure\n  static isAttachedSGroup(sgroup, molecule) {\n    const { bonds } = molecule\n    const isAttachmentBond = ({ begin, end }) =>\n      (sgroup.atoms.includes(begin) && !sgroup.atoms.includes(end)) ||\n      (sgroup.atoms.includes(end) && !sgroup.atoms.includes(begin))\n    for (const bond of bonds.values()) {\n      if (isAttachmentBond(bond)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * This function determines, if an atom is used for attachment to other structure.\n   * For example, having sgroup CF3, which looks like\n   *              F\n   *              |\n   *            F-C-F\n   *              |\n   *         other struct\n   * C – is an attachment point\n   */\n  static isAttachmentPointAtom(atomId: number, molecule: Struct): boolean {\n    const { sgroups, bonds } = molecule\n    const isAtomInSameFunctionalGroup = (otherAtomId, sgroup) =>\n      sgroup.atoms.includes(otherAtomId)\n    for (const sgroup of sgroups.values()) {\n      const isFunctionalGroup = FunctionalGroup.isFunctionalGroup(sgroup)\n      const isSGroupFound = sgroup.atoms.includes(atomId)\n      if (!isFunctionalGroup || !isSGroupFound) {\n        continue\n      }\n      for (const bond of bonds.values()) {\n        const isBondBeginInSGroupAndBondEndOutside =\n          bond.begin === atomId &&\n          !isAtomInSameFunctionalGroup(bond.end, sgroup)\n        const isBondEndInSGroupAndBondBeginOutside =\n          bond.end === atomId &&\n          !isAtomInSameFunctionalGroup(bond.begin, sgroup)\n        const isAttachmentBond =\n          isBondBeginInSGroupAndBondEndOutside ||\n          isBondEndInSGroupAndBondBeginOutside\n        if (isAttachmentBond) {\n          return true\n        }\n      }\n      // if atom in S-Group, which is not attached to any structure, then\n      // atoms[0] is considered as attachment point\n      if (!this.isAttachedSGroup(sgroup, molecule)) {\n        return sgroup.atoms[0] === atomId\n      }\n    }\n    return false\n  }\n\n  static isFirstAtomInFunctionalGroup(sgroups, aid): boolean {\n    for (const sg of sgroups.values()) {\n      if (FunctionalGroup.isFunctionalGroup(sg) && aid === sg.atoms[0]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static isAtomInContractedFunctionalGroup(\n    atom,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroups: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroups.push(sg.item.id)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroups.push(sg.id)\n        }\n      })\n    }\n    return contractedFunctionalGroups.some((sg) => atom.sgs.has(sg))\n  }\n\n  static isBondInContractedFunctionalGroup(\n    bond,\n    sgroups,\n    functionalGroups,\n    sgroupsFromReStruct: boolean\n  ): boolean {\n    const contractedFunctionalGroupsAtoms: number[] = []\n    if (sgroupsFromReStruct) {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(\n            sg.item.id,\n            functionalGroups\n          )\n        ) {\n          contractedFunctionalGroupsAtoms.push(...sg.item.atoms)\n        }\n      })\n    } else {\n      sgroups.forEach((sg) => {\n        if (\n          FunctionalGroup.isContractedFunctionalGroup(sg.id, functionalGroups)\n        ) {\n          contractedFunctionalGroupsAtoms.push(...sg.atoms)\n        }\n      })\n    }\n    return (\n      contractedFunctionalGroupsAtoms.includes(bond.begin) &&\n      contractedFunctionalGroupsAtoms.includes(bond.end)\n    )\n  }\n\n  static isContractedFunctionalGroup(sgroupId, functionalGroups): boolean {\n    let isFunctionalGroup = false\n    let expanded = false\n    functionalGroups.forEach((fg) => {\n      if (fg.relatedSGroupId === sgroupId) {\n        isFunctionalGroup = true\n        expanded = fg.isExpanded\n      }\n    })\n    return !expanded && isFunctionalGroup\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from './vec2'\nimport assert from 'assert'\n\n/** @internal */\nexport class HalfBond {\n  begin: number\n  end: number\n  bid: number\n  dir: Vec2\n  norm: Vec2\n  ang: number\n  p: Vec2\n  loop: number\n  contra: number\n  next: number\n  leftSin: number\n  leftCos: number\n  leftNeighbor: number\n  rightSin: number\n  rightCos: number\n  rightNeighbor: number\n\n  constructor(begin: number, end: number, bid: number) {\n    assert(arguments.length === 3, 'Invalid parameter number.')\n\n    this.begin = begin\n    this.end = end\n    this.bid = bid\n\n    // rendering properties\n    this.dir = new Vec2() // direction\n    this.norm = new Vec2() // left normal\n    this.ang = 0 // angle to (1,0), used for sorting the bonds\n    this.p = new Vec2() // corrected origin position\n    this.loop = -1 // left loop id if the half-bond is in a loop, otherwise -1\n    this.contra = -1 // the half bond contrary to this one\n    this.next = -1 // the half-bond next ot this one in CCW order\n    this.leftSin = 0\n    this.leftCos = 0\n    this.leftNeighbor = 0\n    this.rightSin = 0\n    this.rightCos = 0\n    this.rightNeighbor = 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond } from './bond'\nimport { Struct } from './struct'\n\nexport class Loop {\n  hbs: number[]\n  dblBonds: number\n  aromatic: boolean\n  convex: boolean\n\n  constructor(hbs: Array<number>, struct: Struct, isConvex: boolean) {\n    this.hbs = hbs // set of half-bonds involved\n    this.dblBonds = 0 // number of double bonds in the loop\n    this.aromatic = true\n    this.convex = isConvex || false\n\n    hbs.forEach((hb) => {\n      const bond: Bond = struct.bonds.get(struct.halfBonds.get(hb)!.bid)!\n      if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) this.aromatic = false\n      if (bond.type === Bond.PATTERN.TYPE.DOUBLE) this.dblBonds++\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { Pool } from './pool'\n\nexport interface RGroupAttributes {\n  index?: number\n  ifthen?: number\n  resth?: boolean\n  range?: string\n}\nexport class RGroup {\n  frags: Pile<number>\n  resth: boolean\n  range: string\n  ifthen: number\n  index: number\n\n  constructor(atrributes?: RGroupAttributes) {\n    this.frags = new Pile<number>()\n    this.resth = atrributes?.resth || false\n    this.range = atrributes?.range || ''\n    this.ifthen = atrributes?.ifthen || 0\n    this.index = atrributes?.index || -1\n  }\n\n  static findRGroupByFragment(rgroups: Pool<RGroup>, frid: number) {\n    return rgroups.find((_rgid, rgroup) => rgroup.frags.has(frid))\n  }\n\n  getAttrs(): RGroupAttributes {\n    return {\n      resth: this.resth,\n      range: this.range,\n      ifthen: this.ifthen,\n      index: this.index\n    }\n  }\n\n  clone(fidMap?: Map<number, number> | null): RGroup {\n    const ret = new RGroup(this)\n    this.frags.forEach((fid) => {\n      ret.frags.add(fidMap ? fidMap.get(fid)! : fid)\n    })\n    return ret\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum RxnArrowMode {\n  OpenAngle = 'open-angle',\n  FilledTriangle = 'filled-triangle',\n  FilledBow = 'filled-bow',\n  DashedOpenAngle = 'dashed-open-angle',\n  Failed = 'failed',\n  BothEndsFilledTriangle = 'both-ends-filled-triangle',\n  EquilibriumFilledTriangle = 'equilibrium-filled-triangle',\n  EquilibriumFilledHalfBow = 'equilibrium-filled-half-bow',\n  EquilibriumOpenAngle = 'equilibrium-open-angle',\n  UnbalancedEquilibriumFilledHalfBow = 'unbalanced-equilibrium-filled-half-bow',\n  UnbalancedEquilibriumOpenHalfAngle = 'unbalanced-equilibrium-open-half-angle',\n  UnbalancedEquilibriumLargeFilledHalfBow = 'unbalanced-equilibrium-large-filled-half-bow',\n  UnbalancedEquilibriumFilledHalfTriangle = 'unbalanced-equilibrium-filled-half-triangle',\n  EllipticalArcFilledBow = 'elliptical-arc-arrow-filled-bow',\n  EllipticalArcFilledTriangle = 'elliptical-arc-arrow-filled-triangle',\n  EllipticalArcOpenAngle = 'elliptical-arc-arrow-open-angle',\n  EllipticalArcOpenHalfAngle = 'elliptical-arc-arrow-open-half-angle'\n}\n\nexport interface RxnArrowAttributes {\n  mode: RxnArrowMode\n  pos?: Array<Point>\n  height?: number\n}\n\nexport class RxnArrow {\n  mode: RxnArrowMode\n  pos: Array<Vec2>\n  height?: number\n\n  static isElliptical(arrow) {\n    return [\n      RxnArrowMode.EllipticalArcFilledBow,\n      RxnArrowMode.EllipticalArcFilledTriangle,\n      RxnArrowMode.EllipticalArcOpenHalfAngle,\n      RxnArrowMode.EllipticalArcOpenAngle\n    ].includes(arrow.mode)\n  }\n\n  constructor(attributes: RxnArrowAttributes) {\n    this.pos = []\n\n    if (attributes.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n    this.mode = attributes.mode\n    const defaultHeight = 2\n\n    if (RxnArrow.isElliptical(this)) {\n      this.height = attributes.height ?? defaultHeight\n    }\n  }\n\n  clone() {\n    return new RxnArrow(this)\n  }\n\n  center(): Vec2 {\n    return Vec2.centre(this.pos[0], this.pos[1])\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport interface RxnPlusAttributes {\n  pp?: Point\n}\n\nexport class RxnPlus {\n  pp: Vec2\n\n  constructor(attributes?: RxnPlusAttributes) {\n    this.pp = attributes?.pp ? new Vec2(attributes.pp) : new Vec2()\n  }\n\n  clone() {\n    return new RxnPlus(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile } from './pile'\nimport { SGroup } from './sgroup'\nimport assert from 'assert'\n\nexport class SGroupForest {\n  /** node id -> parent id */\n  parent: Map<number, number>\n  /** node id -> list of child ids */\n  children: Map<number, number[]>\n  atomSets: Map<number, any>\n\n  constructor() {\n    this.parent = new Map()\n    this.children = new Map()\n\n    this.children.set(-1, []) // extra root node\n    this.atomSets = new Map()\n  }\n\n  /** returns an array or s-group ids in the order of breadth-first search */\n  getSGroupsBFS(): number[] {\n    const order: number[] = []\n    const queue = Array.from(this.children.get(-1) as Array<number>)\n    while (queue.length > 0) {\n      const id = queue.shift()\n      if (typeof id !== 'number') {\n        break\n      }\n      const children = this.children.get(id)\n      if (typeof children === 'undefined') {\n        break\n      }\n\n      children.forEach((id) => {\n        queue.push(id)\n      })\n\n      order.push(id)\n    }\n\n    return order\n  }\n\n  getAtomSetRelations(newId: any, atoms: any) {\n    // find the lowest superset in the hierarchy\n    const isStrictSuperset = new Map()\n    const isSubset = new Map()\n\n    this.atomSets.delete(newId)\n\n    this.atomSets.forEach((atomSet, id) => {\n      isSubset.set(id, atomSet.isSuperset(atoms))\n      isStrictSuperset.set(\n        id,\n        atoms.isSuperset(atomSet) && !atomSet.equals(atoms)\n      )\n    })\n\n    const parents = Array.from(this.atomSets.keys()).filter((sgid) => {\n      if (!isSubset.get(sgid)) {\n        return false\n      }\n      const childs = this.children.get(sgid)\n      return childs && childs.findIndex((childId) => isSubset.get(childId)) < 0\n    })\n\n    const children = Array.from(this.atomSets.keys()).filter(\n      (id) =>\n        isStrictSuperset.get(id) && !isStrictSuperset.get(this.parent.get(id))\n    )\n\n    return {\n      children,\n      parent: parents.length === 0 ? -1 : parents[0]\n    }\n  }\n\n  getPathToRoot(sgid): number[] {\n    const path: number[] = []\n    for (let id = sgid; id >= 0; id = this.parent.get(id)) {\n      path.push(id)\n    }\n    return path\n  }\n\n  insert({ id, atoms }, parent?: number, children?: number[]) {\n    assert(!this.parent.has(id), 'sgid already present in the forest')\n    assert(!this.children.has(id), 'sgid already present in the forest')\n\n    if (!parent || !children) {\n      // if these are not provided, deduce automatically\n      const guess = this.getAtomSetRelations(id, new Pile(atoms))\n      parent = guess.parent\n      children = guess.children\n    }\n\n    // TODO: make children Map<int, Pile> instead of Map<int, []>?\n    children.forEach((childId) => {\n      this.resetParentLink(childId, id)\n    })\n    this.children.set(\n      id,\n      children.filter((id) => this.parent.get(id))\n    )\n    this.parent.set(id, parent)\n    this.children.get(parent)?.push(id)\n    this.atomSets.set(id, new Pile(atoms))\n\n    return { parent, children }\n  }\n\n  private resetParentLink(childId, id) {\n    const parentId = this.parent.get(childId)\n    if (typeof parentId === 'undefined') {\n      return\n    }\n\n    const childs = this.children.get(parentId)\n    if (!childs) {\n      return\n    }\n\n    const childIndex = childs.indexOf(childId)\n    childs.splice(childIndex, 1)\n    this.parent.set(childId, id)\n  }\n\n  remove(id) {\n    assert(this.parent.has(id), 'sgid is not in the forest')\n    assert(this.children.has(id), 'sgid is not in the forest')\n\n    const parentId = this.parent.get(id) as any\n    const childs = this.children.get(parentId) as any\n    this.children.get(id)?.forEach((childId) => {\n      this.parent.set(childId, parentId)\n      this.children.get(parentId)?.push(childId)\n    })\n\n    const i = childs.indexOf(id)\n    childs.splice(i, 1)\n\n    this.children.delete(id)\n    this.parent.delete(id)\n    this.atomSets.delete(id)\n  }\n}\n\nexport function checkOverlapping(struct, atoms) {\n  const sgroups = atoms.reduce((res, aid) => {\n    const atom = struct.atoms.get(aid)\n    return res.union(atom.sgs)\n  }, new Pile())\n\n  return Array.from(sgroups).some((sid) => {\n    const sg = struct.sgroups.get(sid)\n    if (sg.type === 'DAT') return false\n    const sgAtoms = SGroup.getAtoms(struct, sg)\n\n    return sgAtoms.length < atoms.length\n      ? sgAtoms.findIndex((aid) => atoms.indexOf(aid) === -1) >= 0\n      : atoms.findIndex((aid) => sgAtoms.indexOf(aid) === -1) >= 0\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Point, Vec2 } from './vec2'\n\nexport enum SimpleObjectMode {\n  ellipse = 'ellipse',\n  rectangle = 'rectangle',\n  line = 'line'\n}\n\nexport interface SimpleObjectAttributes {\n  mode: SimpleObjectMode\n  pos?: Array<Point>\n}\n\nexport class SimpleObject {\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n\n  constructor(attributes?: SimpleObjectAttributes) {\n    this.pos = []\n\n    if (attributes?.pos) {\n      for (let i = 0; i < attributes.pos.length; i++) {\n        const currentP = attributes.pos[i]\n        this.pos[i] = currentP ? new Vec2(attributes.pos[i]) : new Vec2()\n      }\n    }\n\n    this.mode = attributes?.mode || SimpleObjectMode.line\n  }\n\n  clone(): SimpleObject {\n    return new SimpleObject(this)\n  }\n\n  center(): Vec2 {\n    switch (this.mode) {\n      case SimpleObjectMode.rectangle: {\n        return Vec2.centre(this.pos[0], this.pos[1])\n      }\n      default:\n        return this.pos[0]\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport class Pool<TValue = any> extends Map<number, TValue> {\n  private nextId = 0\n\n  add(item: TValue): number {\n    const id = this.nextId++\n    super.set(id, item)\n    return id\n  }\n\n  newId(): number {\n    return this.nextId++\n  }\n\n  keyOf(item: TValue): number | null {\n    for (const [key, value] of this.entries()) {\n      if (value === item) return key\n    }\n\n    return null\n  }\n\n  find(predicate: (key: number, value: TValue) => boolean): number | null {\n    for (const [key, value] of this.entries()) {\n      if (predicate(key, value)) return key\n    }\n\n    return null\n  }\n\n  filter(predicate: (key: number, value: TValue) => boolean): Pool<TValue> {\n    return new Pool<TValue>(\n      Array.from(this).filter(([key, value]) => predicate(key, value))\n    )\n  }\n\n  some(predicate: (value: TValue) => boolean): boolean {\n    for (const value of this.values()) {\n      if (predicate(value)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, radicalElectrons } from './atom'\n\nimport { Bond } from './bond'\nimport { Box2Abs } from './box2Abs'\nimport { Elements } from 'domain/constants'\nimport { Fragment } from './fragment'\nimport { FunctionalGroup } from './functionalGroup'\nimport { HalfBond } from './halfBond'\nimport { Loop } from './loop'\nimport { Pile } from './pile'\nimport { Pool } from './pool'\nimport { RGroup } from './rgroup'\nimport { RxnArrow } from './rxnArrow'\nimport { RxnPlus } from './rxnPlus'\nimport { SGroup } from './sgroup'\nimport { SGroupForest } from './sgroupForest'\nimport { SimpleObject } from './simpleObject'\nimport { Text } from './text'\nimport { Vec2 } from './vec2'\nimport { Highlight } from './highlight'\n\nexport type Neighbor = {\n  aid: number\n  bid: number\n}\n\nfunction arrayAddIfMissing(array, item) {\n  for (let i = 0; i < array.length; ++i) {\n    if (array[i] === item) return false\n  }\n  array.push(item)\n  return true\n}\n\nexport class Struct {\n  atoms: Pool<Atom>\n  bonds: Pool<Bond>\n  sgroups: Pool<SGroup>\n  halfBonds: Pool<HalfBond>\n  loops: Pool<Loop>\n  isReaction: boolean\n  rxnArrows: Pool<RxnArrow>\n  rxnPluses: Pool<RxnPlus>\n  frags: Pool<Fragment | null>\n  rgroups: Pool<RGroup>\n  name: string\n  abbreviation?: string\n  sGroupForest: SGroupForest\n  simpleObjects: Pool<SimpleObject>\n  texts: Pool<Text>\n  functionalGroups: Pool<FunctionalGroup>\n  highlights: Pool<Highlight>\n\n  constructor() {\n    this.atoms = new Pool<Atom>()\n    this.bonds = new Pool<Bond>()\n    this.sgroups = new Pool<SGroup>()\n    this.halfBonds = new Pool<HalfBond>()\n    this.loops = new Pool<Loop>()\n    this.isReaction = false\n    this.rxnArrows = new Pool<RxnArrow>()\n    this.rxnPluses = new Pool<RxnPlus>()\n    this.frags = new Pool<Fragment>()\n    this.rgroups = new Pool<RGroup>()\n    this.name = ''\n    this.abbreviation = ''\n    this.sGroupForest = new SGroupForest()\n    this.simpleObjects = new Pool<SimpleObject>()\n    this.texts = new Pool<Text>()\n    this.functionalGroups = new Pool<FunctionalGroup>()\n    this.highlights = new Pool<Highlight>()\n  }\n\n  hasRxnProps(): boolean {\n    return !!(\n      this.atoms.find((_aid, atom) => atom.hasRxnProps()) ||\n      this.bonds.find((_bid, bond) => bond.hasRxnProps())\n    )\n  }\n\n  hasRxnArrow(): boolean {\n    return this.rxnArrows.size >= 1\n  }\n\n  hasRxnPluses(): boolean {\n    return this.rxnPluses.size > 0\n  }\n\n  isRxn(): boolean {\n    return this.hasRxnArrow() || this.hasRxnPluses()\n  }\n\n  isBlank(): boolean {\n    return (\n      this.atoms.size === 0 &&\n      this.rxnArrows.size === 0 &&\n      this.rxnPluses.size === 0 &&\n      this.simpleObjects.size === 0 &&\n      this.texts.size === 0\n    )\n  }\n\n  clone(\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    return this.mergeInto(\n      new Struct(),\n      atomSet,\n      bondSet,\n      dropRxnSymbols,\n      false,\n      aidMap,\n      simpleObjectsSet,\n      textsSet\n    )\n  }\n\n  getScaffold(): Struct {\n    const atomSet = new Pile<number>()\n    this.atoms.forEach((_atom, aid) => {\n      atomSet.add(aid)\n    })\n\n    this.rgroups.forEach((rg) => {\n      rg.frags.forEach((_fnum, fid) => {\n        this.atoms.forEach((atom, aid) => {\n          if (atom.fragment === fid) atomSet.delete(aid)\n        })\n      })\n    })\n\n    return this.clone(atomSet)\n  }\n\n  getFragmentIds(fid: number): Pile<number> {\n    const atomSet = new Pile<number>()\n\n    this.atoms.forEach((atom, aid) => {\n      if (atom.fragment === fid) atomSet.add(aid)\n    })\n\n    return atomSet\n  }\n\n  getFragment(fid: number): Struct {\n    return this.clone(this.getFragmentIds(fid), null, true)\n  }\n\n  mergeInto(\n    cp: Struct,\n    atomSet?: Pile<number> | null,\n    bondSet?: Pile<number> | null,\n    dropRxnSymbols?: boolean,\n    keepAllRGroups?: boolean,\n    aidMap?: Map<number, number> | null,\n    simpleObjectsSet?: Pile<number> | null,\n    textsSet?: Pile<number> | null\n  ): Struct {\n    atomSet = atomSet || new Pile<number>(this.atoms.keys())\n    bondSet = bondSet || new Pile<number>(this.bonds.keys())\n    simpleObjectsSet =\n      simpleObjectsSet || new Pile<number>(this.simpleObjects.keys())\n    textsSet = textsSet || new Pile<number>(this.texts.keys())\n    aidMap = aidMap || new Map()\n\n    bondSet = bondSet.filter((bid) => {\n      const bond = this.bonds.get(bid)!\n      return atomSet!.has(bond.begin) && atomSet!.has(bond.end)\n    })\n\n    const fidMask = new Pile()\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid)) fidMask.add(atom.fragment)\n    })\n\n    const fidMap = new Map()\n    this.frags.forEach((_frag, fid) => {\n      if (fidMask.has(fid)) fidMap.set(fid, cp.frags.add(null))\n    })\n\n    const rgroupsIds: Array<number> = []\n    this.rgroups.forEach((rgroup, rgid) => {\n      let keepGroup = keepAllRGroups\n      if (!keepGroup) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) keepGroup = true\n        })\n\n        if (!keepGroup) return\n      }\n\n      const rg = cp.rgroups.get(rgid)\n      if (rg) {\n        rgroup.frags.forEach((_fnum, fid) => {\n          rgroupsIds.push(fid)\n          if (fidMask.has(fid)) rg.frags.add(fidMap.get(fid))\n        })\n      } else {\n        cp.rgroups.set(rgid, rgroup.clone(fidMap))\n      }\n    })\n\n    // atoms in not RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) === -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n    // atoms in RGroup\n    this.atoms.forEach((atom, aid) => {\n      if (atomSet!.has(aid) && rgroupsIds.indexOf(atom.fragment) !== -1) {\n        aidMap!.set(aid, cp.atoms.add(atom.clone(fidMap)))\n      }\n    })\n\n    fidMap.forEach((newfid, oldfid) => {\n      const fragment = this.frags.get(oldfid)\n\n      // TODO: delete type check\n      if (fragment && fragment instanceof Fragment) {\n        cp.frags.set(newfid, this.frags.get(oldfid)!.clone(aidMap!)) // clone Fragments\n      }\n    })\n\n    const bidMap = new Map()\n    this.bonds.forEach((bond, bid) => {\n      if (bondSet!.has(bid)) bidMap.set(bid, cp.bonds.add(bond.clone(aidMap!)))\n    })\n\n    this.sgroups.forEach((sg) => {\n      if (sg.atoms.some((aid) => !atomSet!.has(aid))) return\n\n      sg = SGroup.clone(sg, aidMap!)\n      const id = cp.sgroups.add(sg)\n      sg.id = id\n\n      sg.atoms.forEach((aid) => {\n        const atom = cp.atoms.get(aid)\n        if (atom) {\n          atom.sgs.add(id)\n        }\n      })\n\n      if (sg.type === 'DAT') cp.sGroupForest.insert(sg, -1, [])\n      else cp.sGroupForest.insert(sg)\n    })\n\n    this.functionalGroups.forEach((fg) => {\n      fg = FunctionalGroup.clone(fg)\n      cp.functionalGroups.add(fg)\n    })\n\n    simpleObjectsSet.forEach((soid) => {\n      cp.simpleObjects.add(this.simpleObjects.get(soid)!.clone())\n    })\n\n    textsSet.forEach((id) => {\n      cp.texts.add(this.texts.get(id)!.clone())\n    })\n\n    if (!dropRxnSymbols) {\n      cp.isReaction = this.isReaction\n      this.rxnArrows.forEach((item) => {\n        cp.rxnArrows.add(item.clone())\n      })\n      this.rxnPluses.forEach((item) => {\n        cp.rxnPluses.add(item.clone())\n      })\n    }\n\n    cp.name = this.name\n\n    return cp\n  }\n\n  // NB: this updates the structure without modifying the corresponding ReStruct.\n  //  To be applied to standalone structures only.\n  prepareLoopStructure() {\n    this.initHalfBonds()\n    this.initNeighbors()\n    this.updateHalfBonds(Array.from(this.atoms.keys()))\n    this.sortNeighbors(Array.from(this.atoms.keys()))\n    this.findLoops()\n  }\n\n  atomAddToSGroup(sgid, aid) {\n    // TODO: [MK] make sure the addition does not break the hierarchy?\n    SGroup.addAtom(this.sgroups.get(sgid)!, aid)\n    this.atoms.get(aid)!.sgs.add(sgid)\n  }\n\n  calcConn(atom) {\n    let conn = 0\n    for (let i = 0; i < atom.neighbors.length; ++i) {\n      const hb = this.halfBonds.get(atom.neighbors[i])!\n      const bond = this.bonds.get(hb.bid)!\n      switch (bond.type) {\n        case Bond.PATTERN.TYPE.SINGLE:\n          conn += 1\n          break\n        case Bond.PATTERN.TYPE.DOUBLE:\n          conn += 2\n          break\n        case Bond.PATTERN.TYPE.TRIPLE:\n          conn += 3\n          break\n        case Bond.PATTERN.TYPE.DATIVE:\n          break\n        case Bond.PATTERN.TYPE.HYDROGEN:\n          break\n        case Bond.PATTERN.TYPE.AROMATIC:\n          if (atom.neighbors.length === 1) return [-1, true]\n          return [atom.neighbors.length, true]\n        default:\n          return [-1, false]\n      }\n    }\n    return [conn, false]\n  }\n\n  findBondId(begin, end) {\n    return this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.begin === end && bond.end === begin)\n    )\n  }\n\n  initNeighbors() {\n    this.atoms.forEach((atom) => {\n      atom.neighbors = []\n    })\n\n    this.bonds.forEach((bond) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n      a1.neighbors.push(bond.hb1!)\n      a2.neighbors.push(bond.hb2!)\n    })\n  }\n\n  bondInitHalfBonds(bid, bond?: Bond) {\n    bond = bond || this.bonds.get(bid)!\n    bond.hb1 = 2 * bid\n    bond.hb2 = 2 * bid + 1 // eslint-disable-line no-mixed-operators\n    this.halfBonds.set(bond.hb1, new HalfBond(bond.begin, bond.end, bid))\n    this.halfBonds.set(bond.hb2, new HalfBond(bond.end, bond.begin, bid))\n    const hb1 = this.halfBonds.get(bond.hb1)!\n    const hb2 = this.halfBonds.get(bond.hb2)!\n    hb1.contra = bond.hb2\n    hb2.contra = bond.hb1\n  }\n\n  halfBondUpdate(halfBondId: number) {\n    const halfBond = this.halfBonds.get(halfBondId)!\n    const startCoords = this.atoms.get(halfBond.begin)!.pp\n    const endCoords = this.atoms.get(halfBond.end)!.pp\n    const coordsDifference = Vec2.diff(endCoords, startCoords).normalized()\n    halfBond.dir =\n      Vec2.dist(endCoords, startCoords) > 1e-4\n        ? coordsDifference\n        : new Vec2(1, 0)\n    halfBond.norm = halfBond.dir.turnLeft()\n    halfBond.ang = halfBond.dir.oxAngle()\n    if (halfBond.loop < 0) halfBond.loop = -1\n  }\n\n  initHalfBonds() {\n    this.halfBonds.clear()\n    this.bonds.forEach((bond, bid) => {\n      this.bondInitHalfBonds(bid, bond)\n    })\n  }\n\n  setHbNext(hbid, next) {\n    this.halfBonds.get(this.halfBonds.get(hbid)!.contra)!.next = next\n  }\n\n  halfBondSetAngle(hbid, left) {\n    const hb = this.halfBonds.get(hbid)!\n    const hbl = this.halfBonds.get(left)!\n\n    hbl.rightCos = Vec2.dot(hbl.dir, hb.dir)\n    hb.leftCos = Vec2.dot(hbl.dir, hb.dir)\n\n    hbl.rightSin = Vec2.cross(hbl.dir, hb.dir)\n    hb.leftSin = Vec2.cross(hbl.dir, hb.dir)\n\n    hb.leftNeighbor = left\n    hbl.rightNeighbor = hbid\n  }\n\n  atomAddNeighbor(hbid) {\n    const hb = this.halfBonds.get(hbid)!\n    const atom = this.atoms.get(hb.begin)!\n\n    let i\n    for (i = 0; i < atom.neighbors.length; ++i) {\n      if (this.halfBonds.get(atom.neighbors[i])!.ang > hb.ang) break\n    }\n    atom.neighbors.splice(i, 0, hbid)\n    const ir = atom.neighbors[(i + 1) % atom.neighbors.length]\n    const il =\n      atom.neighbors[(i + atom.neighbors.length - 1) % atom.neighbors.length]\n    this.setHbNext(il, hbid)\n    this.setHbNext(hbid, ir)\n    this.halfBondSetAngle(hbid, il)\n    this.halfBondSetAngle(ir, hbid)\n  }\n\n  atomSortNeighbors(aid) {\n    const atom = this.atoms.get(aid)!\n    const halfBonds = this.halfBonds\n\n    atom.neighbors\n      .sort((nei, nei2) => halfBonds.get(nei)!.ang - halfBonds.get(nei2)!.ang)\n      .forEach((nei, i) => {\n        const nextNei = atom.neighbors[(i + 1) % atom.neighbors.length]\n        this.halfBonds.get(this.halfBonds.get(nei)!.contra)!.next = nextNei\n        this.halfBondSetAngle(nextNei, nei)\n      })\n  }\n\n  sortNeighbors(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        this.atomSortNeighbors(aid)\n      })\n    }\n  }\n\n  atomUpdateHalfBonds(atomId: number) {\n    this.atoms.get(atomId)!.neighbors.forEach((hbid) => {\n      this.halfBondUpdate(hbid)\n      this.halfBondUpdate(this.halfBonds.get(hbid)!.contra)\n    })\n  }\n\n  updateHalfBonds(list) {\n    if (!list) {\n      this.atoms.forEach((_atom, atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    } else {\n      list.forEach((atomId) => {\n        this.atomUpdateHalfBonds(atomId)\n      })\n    }\n  }\n\n  sGroupsRecalcCrossBonds() {\n    this.sgroups.forEach((sg) => {\n      sg.xBonds = []\n      sg.neiAtoms = []\n    })\n\n    this.bonds.forEach((bond, bid) => {\n      const a1 = this.atoms.get(bond.begin)!\n      const a2 = this.atoms.get(bond.end)!\n\n      a1.sgs.forEach((sgid) => {\n        if (!a2.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.end)\n        }\n      })\n\n      a2.sgs.forEach((sgid) => {\n        if (!a1.sgs.has(sgid)) {\n          const sg = this.sgroups.get(sgid)!\n          sg.xBonds.push(bid)\n          arrayAddIfMissing(sg.neiAtoms, bond.begin)\n        }\n      })\n    })\n  }\n\n  sGroupDelete(sgid: number) {\n    this.sgroups.get(sgid)!.atoms.forEach((atom) => {\n      this.atoms.get(atom)!.sgs.delete(sgid)\n    })\n\n    this.sGroupForest.remove(sgid)\n    this.sgroups.delete(sgid)\n  }\n\n  atomSetPos(id: number, pp: Vec2): void {\n    const item = this.atoms.get(id)!\n    item.pp = pp\n  }\n\n  rxnPlusSetPos(id: number, pp: Vec2): void {\n    const item = this.rxnPluses.get(id)!\n    item.pp = pp\n  }\n\n  rxnArrowSetPos(id: number, pos: Array<Vec2>): void {\n    const item = this.rxnArrows.get(id)\n    if (item) {\n      item.pos = pos\n    }\n  }\n\n  simpleObjectSetPos(id: number, pos: Array<Vec2>) {\n    const item = this.simpleObjects.get(id)!\n    item.pos = pos\n  }\n\n  textSetPosition(id: number, position: Vec2): void {\n    const item = this.texts.get(id)\n\n    if (item) {\n      item.position = position\n    }\n  }\n\n  getCoordBoundingBox(atomSet?: Pile<number>) {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: pp,\n          max: pp\n        }\n      } else {\n        if (pp instanceof Array) {\n          pp.forEach((vec) => {\n            bb.min = Vec2.min(bb.min, vec)\n            bb.max = Vec2.max(bb.max, vec)\n          })\n        } else {\n          bb.min = Vec2.min(bb.min, pp)\n          bb.max = Vec2.max(bb.max, pp)\n        }\n      }\n    }\n\n    const global = !atomSet || atomSet.size === 0\n\n    this.atoms.forEach((atom, aid) => {\n      if (global || atomSet!.has(aid)) extend(atom.pp)\n    })\n    if (global) {\n      this.rxnPluses.forEach((item) => {\n        extend(item.pp)\n      })\n      this.rxnArrows.forEach((item) => {\n        extend(item.pos)\n      })\n      this.simpleObjects.forEach((item) => {\n        extend(item.pos)\n      })\n      this.texts.forEach((item) => {\n        extend(item.position)\n      })\n    }\n    if (!bb && global) {\n      bb = {\n        min: new Vec2(0, 0),\n        max: new Vec2(1, 1)\n      }\n    }\n    return bb\n  }\n\n  getCoordBoundingBoxObj() {\n    let bb: any = null\n    function extend(pp) {\n      if (!bb) {\n        bb = {\n          min: new Vec2(pp),\n          max: new Vec2(pp)\n        }\n      } else {\n        bb.min = Vec2.min(bb.min, pp)\n        bb.max = Vec2.max(bb.max, pp)\n      }\n    }\n\n    this.atoms.forEach((atom) => {\n      extend(atom.pp)\n    })\n    return bb\n  }\n\n  getBondLengthData() {\n    let totalLength = 0\n    let cnt = 0\n    this.bonds.forEach((bond) => {\n      totalLength += Vec2.dist(\n        this.atoms.get(bond.begin)!.pp,\n        this.atoms.get(bond.end)!.pp\n      )\n      cnt++\n    })\n    return { cnt, totalLength }\n  }\n\n  getAvgBondLength(): number {\n    const bld = this.getBondLengthData()\n    return bld.cnt > 0 ? bld.totalLength / bld.cnt : -1\n  }\n\n  getAvgClosestAtomDistance(): number {\n    let totalDist = 0\n    let minDist\n    let dist = 0\n    const keys = Array.from(this.atoms.keys())\n    let k\n    let j\n    for (k = 0; k < keys.length; ++k) {\n      minDist = -1\n      for (j = 0; j < keys.length; ++j) {\n        if (j === k) continue // eslint-disable-line no-continue\n        dist = Vec2.dist(\n          this.atoms.get(keys[j])!.pp,\n          this.atoms.get(keys[k])!.pp\n        )\n        if (minDist < 0 || minDist > dist) minDist = dist\n      }\n      totalDist += minDist\n    }\n\n    return keys.length > 0 ? totalDist / keys.length : -1\n  }\n\n  checkBondExists(begin: number, end: number): boolean {\n    const key = this.bonds.find(\n      (_bid, bond) =>\n        (bond.begin === begin && bond.end === end) ||\n        (bond.end === begin && bond.begin === end)\n    )\n\n    return key !== undefined\n  }\n\n  findConnectedComponent(firstaid: number): Pile<number> {\n    const list = [firstaid]\n    const ids = new Pile<number>()\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)!\n      atom.neighbors.forEach((nei) => {\n        const neiId = this.halfBonds.get(nei)!.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  findConnectedComponents(discardExistingFragments?: boolean) {\n    // NB: this is a hack\n    // TODO: need to maintain half-bond and neighbor structure permanently\n    if (!this.halfBonds.size) {\n      this.initHalfBonds()\n      this.initNeighbors()\n      this.updateHalfBonds(Array.from(this.atoms.keys()))\n      this.sortNeighbors(Array.from(this.atoms.keys()))\n    }\n\n    let addedAtoms = new Pile<number>()\n\n    const components: Array<any> = []\n    this.atoms.forEach((atom, aid) => {\n      if (\n        (discardExistingFragments || atom.fragment < 0) &&\n        !addedAtoms.has(aid)\n      ) {\n        const component = this.findConnectedComponent(aid)\n        components.push(component)\n        addedAtoms = addedAtoms.union(component)\n      }\n    })\n\n    return components\n  }\n\n  markFragment(idSet: Pile<number>) {\n    const frag = new Fragment()\n    const fid = this.frags.add(frag)\n\n    idSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)!\n      if (atom.stereoLabel) frag.updateStereoAtom(this, aid, fid, true)\n      atom.fragment = fid\n    })\n  }\n\n  markFragments() {\n    const components = this.findConnectedComponents()\n    components.forEach((comp) => {\n      this.markFragment(comp)\n    })\n  }\n\n  scale(scale: number) {\n    if (scale === 1) return\n\n    this.atoms.forEach((atom) => {\n      atom.pp = atom.pp.scaled(scale)\n    })\n\n    this.rxnPluses.forEach((item) => {\n      item.pp = item.pp.scaled(scale)\n    })\n\n    this.rxnArrows.forEach((item) => {\n      item.pos = item.pos.map((p) => p.scaled(scale))\n    })\n\n    this.sgroups.forEach((item) => {\n      item.pp = item.pp ? item.pp.scaled(scale) : null\n    })\n\n    this.texts.forEach((item) => {\n      // Scale text only for reactions - i.e file contains reaction arrows\n      const isReactionStruct = this.rxnArrows.size\n      if (isReactionStruct) {\n        item.pos = item.pos.map((p) => p.scaled(scale))\n        item.position = item.position.scaled(scale)\n      }\n    })\n  }\n\n  rescale() {\n    let avg = this.getAvgBondLength()\n    if (avg < 0 && !this.isReaction) {\n      // TODO [MK] this doesn't work well for reactions as the distances between\n      // the atoms in different components are generally larger than those between atoms of a single component\n      // (KETCHER-341)\n      avg = this.getAvgClosestAtomDistance()\n    }\n    if (avg < 1e-3) avg = 1\n\n    const scale = 1 / avg\n    this.scale(scale)\n  }\n\n  loopHasSelfIntersections(hbs: Array<number>) {\n    for (let i = 0; i < hbs.length; ++i) {\n      const hbi = this.halfBonds.get(hbs[i])!\n      const ai = this.atoms.get(hbi.begin)!.pp\n      const bi = this.atoms.get(hbi.end)!.pp\n      const set = new Pile([hbi.begin, hbi.end])\n\n      for (let j = i + 2; j < hbs.length; ++j) {\n        const hbj = this.halfBonds.get(hbs[j])!\n        if (set.has(hbj.begin) || set.has(hbj.end)) continue // skip edges sharing an atom\n\n        const aj = this.atoms.get(hbj.begin)!.pp\n        const bj = this.atoms.get(hbj.end)!.pp\n\n        if (Box2Abs.segmentIntersection(ai, bi, aj, bj)) return true\n      }\n    }\n\n    return false\n  }\n\n  // partition a cycle into simple cycles\n  // TODO: [MK] rewrite the detection algorithm to only find simple ones right away?\n  partitionLoop(loop: any) {\n    // eslint-disable-line max-statements\n    const subloops: Array<any> = []\n    let continueFlag = true\n    while (continueFlag) {\n      const atomToHalfBond = {} // map from every atom in the loop to the index of the first half-bond starting from that atom in the uniqHb array\n      continueFlag = false\n\n      for (let l = 0; l < loop.length; ++l) {\n        const hbid = loop[l]\n        const aid1 = this.halfBonds.get(hbid)!.begin\n        const aid2 = this.halfBonds.get(hbid)!.end\n        if (aid2 in atomToHalfBond) {\n          // subloop found\n          const s = atomToHalfBond[aid2] // where the subloop begins\n          const subloop = loop.slice(s, l + 1)\n          subloops.push(subloop)\n          if (l < loop.length) {\n            // remove half-bonds corresponding to the subloop\n            loop.splice(s, l - s + 1)\n          }\n          continueFlag = true\n          break\n        }\n        atomToHalfBond[aid1] = l\n      }\n      if (!continueFlag) subloops.push(loop) // we're done, no more subloops found\n    }\n    return subloops\n  }\n\n  halfBondAngle(hbid1: number, hbid2: number): number {\n    const hba = this.halfBonds.get(hbid1)!\n    const hbb = this.halfBonds.get(hbid2)!\n    return Math.atan2(Vec2.cross(hba.dir, hbb.dir), Vec2.dot(hba.dir, hbb.dir))\n  }\n\n  loopIsConvex(loop: Array<any>): boolean {\n    return loop.every((item, k, loopArr) => {\n      const angle = this.halfBondAngle(item, loopArr[(k + 1) % loopArr.length])\n      return angle <= 0\n    })\n  }\n\n  // check whether a loop is on the inner or outer side of the polygon\n  //  by measuring the total angle between bonds\n  loopIsInner(loop: Array<any>): boolean {\n    let totalAngle = 2 * Math.PI\n    loop.forEach((hbida, k, loopArr) => {\n      const hbidb = loopArr[(k + 1) % loopArr.length]\n      const hbb = this.halfBonds.get(hbidb)!\n      const angle = this.halfBondAngle(hbida, hbidb)\n      totalAngle += hbb.contra === hbida ? Math.PI : angle // back and forth along the same edge\n    })\n    return Math.abs(totalAngle) < Math.PI\n  }\n\n  findLoops() {\n    const newLoops: Array<any> = []\n    const bondsToMark = new Pile<number>()\n\n    /*\n      Starting from each half-bond not known to be in a loop yet,\n      follow the 'next' links until the initial half-bond is reached or\n      the length of the sequence exceeds the number of half-bonds available.\n      In a planar graph, as long as every bond is a part of some \"loop\" -\n      either an outer or an inner one - every iteration either yields a loop\n      or doesn't start at all. Thus this has linear complexity in the number\n      of bonds for planar graphs.\n   */\n\n    let hbIdNext, c, loop\n    this.halfBonds.forEach((hb, hbId) => {\n      if (hb.loop !== -1) return\n\n      for (\n        hbIdNext = hbId, c = 0, loop = [];\n        c <= this.halfBonds.size;\n        hbIdNext = this.halfBonds.get(hbIdNext)!.next, ++c\n      ) {\n        if (!(c > 0 && hbIdNext === hbId)) {\n          loop.push(hbIdNext)\n          continue // eslint-disable-line no-continue\n        }\n\n        // loop found\n        const subloops = this.partitionLoop(loop)\n        subloops.forEach((loop) => {\n          let loopId\n          if (this.loopIsInner(loop) && !this.loopHasSelfIntersections(loop)) {\n            /*\n                        loop is internal\n                        use lowest half-bond id in the loop as the loop id\n                        this ensures that the loop gets the same id if it is discarded and then recreated,\n                        which in turn is required to enable redrawing while dragging, as actions store item id's\n                     */\n            loopId = Math.min(...loop)\n            this.loops.set(\n              loopId,\n              new Loop(loop, this, this.loopIsConvex(loop))\n            )\n          } else {\n            loopId = -2\n          }\n\n          loop.forEach((hbid) => {\n            this.halfBonds.get(hbid)!.loop = loopId\n            bondsToMark.add(this.halfBonds.get(hbid)!.bid)\n          })\n\n          if (loopId >= 0) newLoops.push(loopId)\n        })\n        break\n      }\n    })\n\n    return {\n      newLoops,\n      bondsToMark: Array.from(bondsToMark)\n    }\n  }\n\n  calcImplicitHydrogen(aid: number) {\n    const atom = this.atoms.get(aid)!\n    const [conn, isAromatic] = this.calcConn(atom)\n    let correctConn = conn\n    atom.badConn = false\n\n    if (isAromatic) {\n      if (atom.label === 'C' && atom.charge === 0) {\n        if (conn === 3) {\n          atom.implicitH = -radicalElectrons(atom.radical)\n          return\n        }\n        if (conn === 2) {\n          atom.implicitH = 1 - radicalElectrons(atom.radical)\n          return\n        }\n      } else if (\n        (atom.label === 'O' && atom.charge === 0) ||\n        (atom.label === 'N' && atom.charge === 0 && conn === 3) ||\n        (atom.label === 'N' && atom.charge === 1 && conn === 3) ||\n        (atom.label === 'S' && atom.charge === 0 && conn === 3)\n      ) {\n        atom.implicitH = 0\n        return\n      } else if (!atom.hasImplicitH) {\n        correctConn++\n      }\n    }\n\n    if (correctConn < 0 || atom.isQuery()) {\n      atom.implicitH = 0\n      return\n    }\n\n    if (atom.explicitValence >= 0) {\n      const elem = Elements.get(atom.label)\n      atom.implicitH = elem\n        ? atom.explicitValence - atom.calcValenceMinusHyd(correctConn)\n        : 0\n      if (atom.implicitH < 0) {\n        atom.implicitH = 0\n        atom.badConn = true\n      }\n    } else {\n      atom.calcValence(correctConn)\n    }\n  }\n\n  setImplicitHydrogen(list?: Array<number>) {\n    this.sgroups.forEach((item) => {\n      if (item.data.fieldName === 'MRV_IMPLICIT_H') {\n        this.atoms.get(item.atoms[0])!.hasImplicitH = true\n      }\n    })\n\n    if (!list) {\n      this.atoms.forEach((_atom, aid) => {\n        this.calcImplicitHydrogen(aid)\n      })\n    } else {\n      list.forEach((aid) => {\n        if (this.atoms.get(aid)) {\n          this.calcImplicitHydrogen(aid)\n        }\n      })\n    }\n  }\n\n  atomGetNeighbors(aid: number): Array<Neighbor> | undefined {\n    return this.atoms.get(aid)?.neighbors.map((nei) => {\n      const hb = this.halfBonds.get(nei)!\n      return {\n        aid: hb.end,\n        bid: hb.bid\n      }\n    })\n  }\n\n  getComponents() {\n    // eslint-disable-line max-statements\n    /* saver */\n    const connectedComponents = this.findConnectedComponents(true)\n    const barriers: Array<any> = []\n    let arrowPos: number | null = null\n\n    this.rxnArrows.forEach((item) => {\n      // there's just one arrow\n      arrowPos = item.center().x\n    })\n\n    this.rxnPluses.forEach((item) => {\n      barriers.push(item.pp.x)\n    })\n\n    if (arrowPos !== null) barriers.push(arrowPos)\n\n    barriers.sort((a, b) => a - b)\n\n    const components: Array<any> = []\n\n    connectedComponents.forEach((component) => {\n      const bb = this.getCoordBoundingBox(component)\n      const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n      let j = 0\n\n      while (c.x > barriers[j]) ++j\n\n      components[j] = components[j] || new Pile()\n      components[j] = components[j].union(component)\n    })\n\n    const submolTexts: Array<string> = []\n    const reactants: Array<any> = []\n    const products: Array<any> = []\n\n    components.forEach((component) => {\n      if (!component) {\n        submolTexts.push('')\n        return\n      }\n\n      const rxnFragmentType = this.defineRxnFragmentTypeForAtomset(\n        component,\n        arrowPos || 0\n      )\n\n      if (rxnFragmentType === 1) reactants.push(component)\n      else products.push(component)\n    })\n\n    return {\n      reactants,\n      products\n    }\n  }\n\n  defineRxnFragmentTypeForAtomset(atomset: Pile<number>, arrowpos: number) {\n    const bb = this.getCoordBoundingBox(atomset)\n    const c = Vec2.lc2(bb.min, 0.5, bb.max, 0.5)\n    return c.x < arrowpos ? 1 : 2\n  }\n\n  getBondFragment(bid: number) {\n    const aid = this.bonds.get(bid)?.begin\n    return aid && this.atoms.get(aid)?.fragment\n  }\n\n  bindSGroupsToFunctionalGroups() {\n    this.sgroups.forEach((sgroup) => {\n      if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n        this.functionalGroups.add(new FunctionalGroup(sgroup))\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2, Point } from './vec2'\n\n// TODO: move to infrastructure\nexport enum TextCommand {\n  Bold = 'BOLD',\n  Italic = 'ITALIC',\n  Subscript = 'SUBSCRIPT',\n  Superscript = 'SUPERSCRIPT',\n  FontSize = 'CUSTOM_FONT_SIZE'\n}\n\nexport interface TextAttributes {\n  // TODO: add Interface for content type\n  content: string\n  position: Point\n  pos: Array<Point>\n}\n\nfunction preparePositions(positions?: Array<Point>) {\n  if (!positions || !positions.length) {\n    return [new Vec2(), new Vec2(), new Vec2(), new Vec2()]\n  }\n\n  return positions.map((position) => new Vec2(position))\n}\n\nexport class Text {\n  content: string\n  position: Vec2\n  pos: Array<Vec2>\n\n  constructor(attributes?: TextAttributes) {\n    this.pos = preparePositions(attributes?.pos)\n    this.content = attributes?.content || ''\n    this.position = attributes?.position\n      ? new Vec2(attributes.position)\n      : new Vec2()\n  }\n\n  setPos(coords: Array<Vec2>): void {\n    this.pos = coords || []\n  }\n\n  clone(): Text {\n    return new Text(this)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport interface HighlightAttributes {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n}\n\nexport class Highlight {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n\n  constructor(attributes: HighlightAttributes) {\n    const { atoms, bonds, color } = attributes\n    this.color = color\n    this.atoms = atoms\n    this.bonds = bonds\n  }\n}\n","/****************************************************************************\n * Copyright 2022 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { cloneDeepWith, cloneDeep } from 'lodash'\n\nconst customizer = (value: any) => {\n  if (typeof value === 'object' && value.y) {\n    const clonedValue = cloneDeep(value)\n    clonedValue.y = -clonedValue.y\n    return clonedValue\n  }\n}\n\nexport const getNodeWithInvertedYCoord = (node: object) =>\n  cloneDeepWith(node, customizer)\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function arrowToKet(arrowNode) {\n  return {\n    type: 'arrow',\n    data: getNodeWithInvertedYCoord(arrowNode.data)\n  }\n}\n\nexport function plusToKet(plusNode) {\n  const coord = plusNode.center\n  return {\n    type: 'plus',\n    location: [coord.x, -coord.y, coord.z],\n    prop: plusNode.data\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport function ifDef<TValue = any>(\n  target: any,\n  key: string,\n  value: TValue,\n  defaultValue?: TValue\n) {\n  if (\n    value !== undefined &&\n    value !== null &&\n    value !== defaultValue &&\n    !(Array.isArray(value) && value.length === 0)\n  ) {\n    target[key] = value\n  }\n}\n","export function tfx<TValue extends number | string>(value: TValue): string {\n  let parsedValue: number\n  if (typeof value === 'number') {\n    parsedValue = value\n  } else {\n    parsedValue = parseFloat(value)\n  }\n  return parsedValue.toFixed(8)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport EventEmitter from 'events'\n\nexport enum KetcherAsyncEvents {\n  LOADING = 'LOADING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE'\n}\n\nexport const runAsyncAction = async <T = any>(\n  action: () => Promise<T>,\n  eventEmitter: EventEmitter\n): Promise<T | undefined> => {\n  eventEmitter.emit(KetcherAsyncEvents.LOADING)\n  try {\n    const res = await action()\n    eventEmitter.emit(KetcherAsyncEvents.SUCCESS)\n    return res\n  } catch {\n    eventEmitter.emit(KetcherAsyncEvents.FAILURE)\n    return undefined\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\n\nexport function headerToKet(struct: Struct): any {\n  const header = {}\n\n  ifDef(header, 'moleculeName', struct.name, '')\n  ifDef(header, 'creatorProgram', null, '')\n  ifDef(header, 'comment', null, '')\n\n  return Object.keys(header).length !== 0 ? header : null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\n\nfunction fromRlabel(rg) {\n  const res: Array<any> = []\n  let rgi\n  let val\n  for (rgi = 0; rgi < 32; rgi++) {\n    if (rg & (1 << rgi)) {\n      val = rgi + 1\n      res.push(val) // push the string\n    }\n  }\n  return res\n}\n\nexport function moleculeToKet(struct: Struct): any {\n  const body: any = {\n    atoms: Array.from(struct.atoms.values()).map((atom) => {\n      if (atom.label === 'R#') return rglabelToKet(atom)\n      if (atom.label === 'L#') return atomListToKet(atom)\n      return atomToKet(atom)\n    })\n  }\n\n  if (struct.bonds.size !== 0) {\n    body.bonds = Array.from(struct.bonds.values()).map(bondToKet)\n  }\n\n  if (struct.sgroups.size !== 0) {\n    body.sgroups = Array.from(struct.sgroups.values()).map((sGroup) =>\n      sgroupToKet(struct, sGroup)\n    )\n  }\n\n  const fragment = struct.frags.get(0)\n  if (fragment) {\n    ifDef(body, 'stereoFlagPosition', fragment.stereoFlagPosition, null)\n  }\n  return {\n    type: 'molecule',\n    ...body\n  }\n}\n\nfunction atomToKet(source) {\n  const result = {}\n  ifDef(result, 'label', source.label)\n  ifDef(result, 'alias', source.alias)\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'charge', source.charge, 0)\n  ifDef(result, 'explicitValence', source.explicitValence, -1)\n  ifDef(result, 'isotope', source.isotope, 0)\n  ifDef(result, 'radical', source.radical, 0)\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  // stereo\n  ifDef(result, 'stereoLabel', source.stereoLabel, null)\n  ifDef(result, 'stereoParity', source.stereoCare, 0)\n  ifDef(result, 'weight', source.weight, 0)\n  // query\n  ifDef(result, 'ringBondCount', source.ringBondCount, 0)\n  ifDef(result, 'substitutionCount', source.substitutionCount, 0)\n  ifDef(result, 'unsaturatedAtom', !!source.unsaturatedAtom, false)\n  ifDef(result, 'hCount', source.hCount, 0)\n  // reaction\n  ifDef(result, 'mapping', parseInt(source.aam), 0)\n  ifDef(result, 'invRet', source.invRet, 0)\n  ifDef(result, 'exactChangeFlag', !!source.exactChangeFlag, false)\n  return result\n}\n\nfunction rglabelToKet(source) {\n  const result = {\n    type: 'rg-label'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n\n  const refsToRGroups = fromRlabel(source.rglabel).map(\n    (rgnumber) => `rg-${rgnumber}`\n  )\n  ifDef(result, '$refs', refsToRGroups)\n\n  return result\n}\n\nfunction atomListToKet(source) {\n  const result = {\n    type: 'atom-list'\n  }\n  ifDef(result, 'location', [source.pp.x, -source.pp.y, source.pp.z])\n  ifDef(result, 'attachmentPoints', source.attpnt, 0)\n  ifDef(result, 'elements', source.atomList.labelList())\n  ifDef(result, 'notList', source.atomList.notList, false)\n  return result\n}\n\nfunction bondToKet(source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', [source.begin, source.end])\n  ifDef(result, 'stereo', source.stereo, 0)\n  ifDef(result, 'topology', source.topology, 0)\n  ifDef(result, 'center', source.reactingCenterStatus, 0)\n\n  return result\n}\n\nfunction sgroupToKet(struct, source) {\n  const result = {}\n\n  ifDef(result, 'type', source.type)\n  ifDef(result, 'atoms', source.atoms)\n\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(result, 'mul', source.data.mul || 1)\n      break\n    }\n    case 'SRU': {\n      ifDef(result, 'subscript', source.data.subscript || 'n')\n      ifDef(\n        result,\n        'connectivity',\n        source.data.connectivity.toUpperCase() || 'ht'\n      )\n      break\n    }\n    case 'SUP': {\n      ifDef(result, 'name', source.data.name || '')\n      ifDef(result, 'expanded', source.data.expanded)\n      ifDef(result, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      const data = source.data\n      ifDef(result, 'placement', data.absolute, true)\n      ifDef(result, 'display', data.attached, false)\n      ifDef(result, 'context', data.context)\n      ifDef(result, 'fieldName', data.fieldName)\n      ifDef(result, 'fieldData', data.fieldValue)\n      ifDef(result, 'bonds', SGroup.getBonds(struct, source))\n      break\n    }\n    default:\n      break\n  }\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, SGroup, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport { ifDef } from 'utilities'\n\nexport function toRlabel(values) {\n  let res = 0\n  values.forEach((val) => {\n    const rgi = val - 1\n    res |= 1 << rgi\n  })\n  return res\n}\n\nexport function moleculeToStruct(ketItem: any): Struct {\n  const struct = new Struct()\n  ketItem.atoms.forEach((atom) => {\n    if (atom.type === 'rg-label') struct.atoms.add(rglabelToStruct(atom))\n    if (atom.type === 'atom-list') struct.atoms.add(atomListToStruct(atom))\n    if (!atom.type) struct.atoms.add(atomToStruct(atom))\n  })\n\n  if (ketItem.bonds) {\n    ketItem.bonds.forEach((bond) => struct.bonds.add(bondToStruct(bond)))\n  }\n\n  if (ketItem.sgroups) {\n    ketItem.sgroups.forEach((sgroup) =>\n      struct.sgroups.add(sgroupToStruct(sgroup))\n    )\n  }\n\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.markFragments()\n  struct.bindSGroupsToFunctionalGroups()\n\n  return struct\n}\n\nexport function atomToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'label', source.label)\n  ifDef(params, 'alias', source.alias)\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'charge', source.charge)\n  ifDef(params, 'explicitValence', source.explicitValence)\n  ifDef(params, 'isotope', source.isotope)\n  ifDef(params, 'radical', source.radical)\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  // stereo\n  ifDef(params, 'stereoLabel', source.stereoLabel)\n  ifDef(params, 'stereoParity', source.stereoParity)\n  ifDef(params, 'weight', source.weight)\n  // query\n  ifDef(params, 'ringBondCount', source.ringBondCount)\n  ifDef(params, 'substitutionCount', source.substitutionCount)\n  ifDef(params, 'unsaturatedAtom', Number(Boolean(source.unsaturatedAtom)))\n  ifDef(params, 'hCount', source.hCount)\n  // reaction\n  ifDef(params, 'aam', source.mapping)\n  ifDef(params, 'invRet', source.invRet)\n  ifDef(params, 'exactChangeFlag', Number(Boolean(source.exactChangeFlag)))\n  return new Atom(params)\n}\n\nexport function rglabelToStruct(source) {\n  const params: any = {}\n  params.label = 'R#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const rglabel = toRlabel(source.$refs.map((el) => parseInt(el.slice(3))))\n  ifDef(params, 'rglabel', rglabel)\n  return new Atom(params)\n}\n\nexport function atomListToStruct(source) {\n  const params: any = {}\n  params.label = 'L#'\n  ifDef(params, 'pp', {\n    x: source.location[0],\n    y: -source.location[1],\n    z: source.location[2] || 0.0\n  })\n  ifDef(params, 'attpnt', source.attachmentPoints)\n  const ids = source.elements\n    .map((el) => Elements.get(el)?.number)\n    .filter((id) => id)\n  ifDef(params, 'atomList', {\n    ids,\n    notList: source.notList\n  })\n  return new Atom(params)\n}\n\nexport function bondToStruct(source) {\n  const params: any = {}\n\n  ifDef(params, 'type', source.type)\n  ifDef(params, 'topology', source.topology)\n  ifDef(params, 'reactingCenterStatus', source.center)\n  ifDef(params, 'stereo', source.stereo)\n  // if (params.stereo)\n  // \tparams.stereo = params.stereo > 1 ? params.stereo * 2 : params.stereo;\n  // params.xxx = 0;\n  ifDef(params, 'begin', source.atoms[0])\n  ifDef(params, 'end', source.atoms[1])\n\n  return new Bond(params)\n}\n\nexport function sgroupToStruct(source) {\n  const sgroup = new SGroup(source.type)\n  ifDef(sgroup, 'atoms', source.atoms)\n  switch (source.type) {\n    case 'GEN':\n      break\n    case 'MUL': {\n      ifDef(sgroup.data, 'mul', source.mul)\n      break\n    }\n    case 'SRU': {\n      ifDef(sgroup.data, 'subscript', source.subscript)\n      ifDef(sgroup.data, 'connectivity', source.connectivity.toLowerCase())\n      break\n    }\n    case 'SUP': {\n      ifDef(sgroup.data, 'name', source.name)\n      ifDef(sgroup.data, 'expanded', source.expanded)\n      ifDef(sgroup, 'id', source.id)\n      break\n    }\n    case 'DAT': {\n      ifDef(sgroup.data, 'absolute', source.placement)\n      ifDef(sgroup.data, 'attached', source.display)\n      ifDef(sgroup.data, 'context', source.context)\n      ifDef(sgroup.data, 'fieldName', source.fieldName)\n      ifDef(sgroup.data, 'fieldValue', source.fieldData)\n      break\n    }\n    default:\n      break\n  }\n  return sgroup\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { Pile, SGroup, Struct, Vec2 } from 'domain/entities'\n\nexport function prepareStructForKet(struct: Struct) {\n  const ketNodes: any = []\n\n  const rgFrags = new Set() // skip this when writing molecules\n  for (const [rgnumber, rgroup] of struct.rgroups.entries()) {\n    // RGroups writing\n    rgroup.frags.forEach((frid) => rgFrags.add(frid))\n\n    const fragsAtoms = Array.from(rgroup.frags.values()).reduce(\n      (res, frid) => res.union(struct.getFragmentIds(frid)),\n      new Pile()\n    )\n\n    ketNodes.push({\n      type: 'rgroup',\n      fragment: struct.clone(fragsAtoms),\n      center: getFragmentCenter(struct, fragsAtoms),\n      data: { rgnumber, rgroup }\n    })\n  }\n\n  Array.from(struct.frags.keys())\n    .filter((fid) => !rgFrags.has(fid))\n    .forEach((fid) => {\n      const fragAtoms = struct.getFragmentIds(fid)\n      ketNodes.push({\n        type: 'molecule',\n        fragment: struct.clone(fragAtoms),\n        center: getFragmentCenter(struct, fragAtoms)\n      })\n    })\n\n  struct.rxnArrows.forEach((item) => {\n    ketNodes.push({\n      type: 'arrow',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos,\n        height: item.height\n      }\n    })\n  })\n\n  struct.rxnPluses.forEach((item) => {\n    ketNodes.push({\n      type: 'plus',\n      center: item.pp,\n      data: {}\n    })\n  })\n\n  struct.simpleObjects.forEach((item) => {\n    ketNodes.push({\n      type: 'simpleObject',\n      center: item.pos[0],\n      data: {\n        mode: item.mode,\n        pos: item.pos\n      }\n    })\n  })\n\n  struct.texts.forEach((item) => {\n    ketNodes.push({\n      type: 'text',\n      center: item.position,\n      data: {\n        content: item.content,\n        position: item.position,\n        pos: item.pos\n      }\n    })\n  })\n\n  ketNodes.forEach((ketNode) => {\n    if (ketNode.fragment) {\n      const sgroups: SGroup[] = Array.from(ketNode.fragment.sgroups.values())\n      const filteredSGroups = sgroups.filter((sg: SGroup) =>\n        sg.atoms.every((atom) => atom !== undefined)\n      )\n      const filteredSGroupsMap = new Map()\n      filteredSGroups.forEach((sg, index) => {\n        filteredSGroupsMap.set(index, sg)\n      })\n      ketNode.fragment.sgroups = filteredSGroupsMap\n    }\n  })\n\n  // TODO: check if this sorting operation is needed\n  // return ketNodes.sort((a, b) => a.center.x - b.center.x)\n  return ketNodes\n}\n\nfunction getFragmentCenter(struct, atomSet) {\n  const bb = struct.getCoordBoundingBox(atomSet)\n  return Vec2.centre(bb.min, bb.max)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct } from 'domain/entities'\nimport { ifDef } from 'utilities'\nimport { moleculeToKet } from './moleculeToKet'\n\nexport function rgroupToKet(struct: Struct, data) {\n  const body = {\n    rlogic: rgroupLogicToKet(data.rgnumber, data.rgroup),\n    ...moleculeToKet(struct)\n  }\n\n  return {\n    ...body,\n    type: 'rgroup'\n  }\n}\n\nfunction rgroupLogicToKet(rgnumber, rglogic) {\n  const result = {}\n\n  ifDef(result, 'number', rgnumber)\n  ifDef(result, 'range', rglogic.range, '')\n  ifDef(result, 'resth', rglogic.resth, false)\n  ifDef(result, 'ifthen', rglogic.ifthen, 0)\n\n  return result\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroup, Struct } from 'domain/entities'\n\nimport { ifDef } from 'utilities'\nimport { moleculeToStruct } from './moleculeToStruct'\n\nexport function rgroupToStruct(ketItem): Struct {\n  const struct = moleculeToStruct(ketItem)\n  const rgroup = rgroupLogicToStruct(ketItem.rlogic)\n  struct.frags.forEach((_value: any, key) => {\n    rgroup.frags.add(key)\n  })\n  if (ketItem.rlogic) struct.rgroups.set(ketItem.rlogic.number, rgroup)\n  return struct\n}\n\nexport function rgroupLogicToStruct(rglogic) {\n  const params = {}\n  ifDef(params, 'range', rglogic.range)\n  ifDef(params, 'resth', rglogic.resth)\n  ifDef(params, 'ifthen', rglogic.ifthen)\n\n  return new RGroup(params)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnPlus, Struct } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function rxnToStruct(ketItem: any, struct: Struct): Struct {\n  if (ketItem.type === 'arrow') {\n    struct.rxnArrows.add(new RxnArrow(getNodeWithInvertedYCoord(ketItem.data)))\n  } else {\n    struct.rxnPluses.add(\n      new RxnPlus({\n        pp: {\n          x: ketItem.location[0],\n          y: -ketItem.location[1],\n          z: ketItem.location[2]\n        }\n      })\n    )\n  }\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToKet(simpleObjectNode) {\n  return {\n    type: 'simpleObject',\n    data: getNodeWithInvertedYCoord(simpleObjectNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Struct, Vec2 } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function simpleObjectToStruct(ketItem: any, struct: Struct): Struct {\n  const object =\n    ketItem.data.mode === 'circle' ? circleToEllipse(ketItem) : ketItem.data\n  struct.simpleObjects.add(new SimpleObject(getNodeWithInvertedYCoord(object)))\n  return struct\n}\n\n/**\n * @deprecated TODO to remove after release 2.3\n * As circle has been migrated to ellipses here is function for converting old files data with circles to ellipse type\n * @param ketItem\n */\nfunction circleToEllipse(ketItem) {\n  const radius = Vec2.dist(ketItem.data.pos[1], ketItem.data.pos[0])\n  const pos0 = ketItem.data.pos[0]\n  return {\n    mode: SimpleObjectMode.ellipse,\n    pos: [\n      {\n        x: pos0.x - Math.abs(radius),\n        y: pos0.y - Math.abs(radius),\n        z: pos0.z - Math.abs(radius)\n      },\n      {\n        x: pos0.x + Math.abs(radius),\n        y: pos0.y + Math.abs(radius),\n        z: pos0.z + Math.abs(radius)\n      }\n    ]\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToKet(textNode) {\n  return {\n    type: 'text',\n    data: getNodeWithInvertedYCoord(textNode.data)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Text } from 'domain/entities'\nimport { getNodeWithInvertedYCoord } from '../helpers'\n\nexport function textToStruct(ketItem: any, struct: Struct) {\n  const object = getNodeWithInvertedYCoord(ketItem.data)\n  struct.texts.add(new Text(object))\n\n  return struct\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Ajv from 'ajv'\nimport schema from './schema.json'\n\nexport function validate(ket: any): boolean {\n  const ajv = new Ajv()\n  const validate = ajv.compile(schema)\n  return validate(ket)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Struct, Vec2 } from 'domain/entities'\nimport { arrowToKet, plusToKet } from './toKet/rxnToKet'\n\nimport { Serializer } from '../serializers.types'\nimport { headerToKet } from './toKet/headerToKet'\nimport { moleculeToKet } from './toKet/moleculeToKet'\nimport { moleculeToStruct } from './fromKet/moleculeToStruct'\nimport { prepareStructForKet } from './toKet/prepare'\nimport { rgroupToKet } from './toKet/rgroupToKet'\nimport { rgroupToStruct } from './fromKet/rgroupToStruct'\nimport { rxnToStruct } from './fromKet/rxnToStruct'\nimport { simpleObjectToKet } from './toKet/simpleObjectToKet'\nimport { simpleObjectToStruct } from './fromKet/simpleObjectToStruct'\nimport { textToKet } from './toKet/textToKet'\nimport { textToStruct } from './fromKet/textToStruct'\nimport { validate } from './validate'\n\nfunction parseNode(node: any, struct: any) {\n  const type = node.type\n  switch (type) {\n    case 'arrow': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'plus': {\n      rxnToStruct(node, struct)\n      break\n    }\n    case 'simpleObject': {\n      simpleObjectToStruct(node, struct)\n      break\n    }\n    case 'molecule': {\n      const currentStruct = moleculeToStruct(node)\n      if (node.stereoFlagPosition) {\n        const fragment = currentStruct.frags.get(0)!\n        fragment.stereoFlagPosition = new Vec2(node.stereoFlagPosition)\n      }\n\n      currentStruct.mergeInto(struct)\n      break\n    }\n    case 'rgroup': {\n      rgroupToStruct(node).mergeInto(struct)\n      break\n    }\n    case 'text': {\n      textToStruct(node, struct)\n      break\n    }\n    default:\n      break\n  }\n}\nexport class KetSerializer implements Serializer<Struct> {\n  deserialize(content: string): Struct {\n    const resultingStruct = new Struct()\n    const ket = JSON.parse(content)\n    if (!validate(ket)) {\n      throw new Error('Cannot deserialize input JSON.')\n    }\n    const nodes = ket.root.nodes\n    Object.keys(nodes).forEach((i) => {\n      if (nodes[i].type) parseNode(nodes[i], resultingStruct)\n      else if (nodes[i].$ref) parseNode(ket[nodes[i].$ref], resultingStruct)\n    })\n    resultingStruct.name = ket.header ? ket.header.moleculeName : null\n\n    return resultingStruct\n  }\n\n  serialize(struct: Struct): string {\n    const result: any = {\n      root: {\n        nodes: []\n      }\n    }\n\n    const header = headerToKet(struct)\n    if (header) result.header = header\n\n    const ketNodes = prepareStructForKet(struct)\n\n    let moleculeId = 0\n    ketNodes.forEach((item) => {\n      switch (item.type) {\n        case 'molecule': {\n          result.root.nodes.push({ $ref: `mol${moleculeId}` })\n          result[`mol${moleculeId++}`] = moleculeToKet(item.fragment)\n          break\n        }\n        case 'rgroup': {\n          result.root.nodes.push({ $ref: `rg${item.data!.rgnumber}` })\n          result[`rg${item.data!.rgnumber}`] = rgroupToKet(\n            item.fragment,\n            item.data\n          )\n          break\n        }\n        case 'plus': {\n          result.root.nodes.push(plusToKet(item))\n          break\n        }\n        case 'arrow': {\n          result.root.nodes.push(arrowToKet(item))\n          break\n        }\n        case 'simpleObject': {\n          result.root.nodes.push(simpleObjectToKet(item))\n          break\n        }\n        case 'text': {\n          result.root.nodes.push(textToKet(item))\n          break\n        }\n        default:\n          break\n      }\n    })\n\n    return JSON.stringify(result, null, 4)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\nimport {\n  Bond,\n  RxnArrow,\n  RxnPlus,\n  Struct,\n  Vec2,\n  RGroup,\n  Fragment\n} from 'domain/entities'\n\nfunction paddedNum(number, width, precision) {\n  number = parseFloat(number)\n\n  const numStr = number.toFixed(precision || 0).replace(',', '.') // Really need to replace?\n  if (numStr.length > width) throw new Error('number does not fit')\n\n  return numStr.padStart(width)\n}\n\nfunction parseDecimalInt(str) {\n  /* reader */\n  const val = parseInt(str, 10)\n\n  return isNaN(val) ? 0 : val // eslint-disable-line\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nfunction partitionLineFixed(\n  /* string */ str,\n  /* int */ itemLength,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let shift = 0; shift < str.length; shift += itemLength) {\n    res.push(str.slice(shift, shift + itemLength))\n    if (withspace) shift++\n  }\n  return res\n}\n\nconst fmtInfo = {\n  bondTypeMap: {\n    1: Bond.PATTERN.TYPE.SINGLE,\n    2: Bond.PATTERN.TYPE.DOUBLE,\n    3: Bond.PATTERN.TYPE.TRIPLE,\n    4: Bond.PATTERN.TYPE.AROMATIC,\n    5: Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE,\n    6: Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC,\n    7: Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC,\n    8: Bond.PATTERN.TYPE.ANY,\n    9: Bond.PATTERN.TYPE.DATIVE,\n    10: Bond.PATTERN.TYPE.HYDROGEN\n  },\n  bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    4: Bond.PATTERN.STEREO.EITHER,\n    6: Bond.PATTERN.STEREO.DOWN,\n    3: Bond.PATTERN.STEREO.CIS_TRANS\n  },\n  v30bondStereoMap: {\n    0: Bond.PATTERN.STEREO.NONE,\n    1: Bond.PATTERN.STEREO.UP,\n    2: Bond.PATTERN.STEREO.EITHER,\n    3: Bond.PATTERN.STEREO.DOWN\n  },\n  bondTopologyMap: {\n    0: Bond.PATTERN.TOPOLOGY.EITHER,\n    1: Bond.PATTERN.TOPOLOGY.RING,\n    2: Bond.PATTERN.TOPOLOGY.CHAIN\n  },\n  countsLinePartition: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6],\n  atomLinePartition: [10, 10, 10, 1, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n  bondLinePartition: [3, 3, 3, 3, 3, 3, 3],\n  atomListHeaderPartition: [3, 1, 1, 4, 1, 1],\n  atomListHeaderLength: 11, // = atomListHeaderPartition.reduce(function(a,b) { return a + b; }, 0)\n  atomListHeaderItemLength: 4,\n  chargeMap: [0, +3, +2, +1, 0, -1, -2, -3],\n  valenceMap: [undefined, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0],\n  implicitHydrogenMap: [undefined, 0, 1, 2, 3, 4],\n  v30atomPropMap: {\n    CHG: 'charge',\n    RAD: 'radical',\n    MASS: 'isotope',\n    VAL: 'explicitValence',\n    HCOUNT: 'hCount',\n    INVRET: 'invRet',\n    SUBST: 'substitutionCount',\n    UNSAT: 'unsaturatedAtom',\n    RBCNT: 'ringBondCount'\n  },\n  rxnItemsPartition: [3, 3, 3]\n}\n\nconst FRAGMENT = {\n  NONE: 0,\n  REACTANT: 1,\n  PRODUCT: 2,\n  AGENT: 3\n}\n\nconst SHOULD_RESCALE_MOLECULES = true\n\nfunction rxnMerge(\n  mols,\n  nReactants,\n  nProducts,\n  nAgents,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ret = new Struct()\n  const bbReact = []\n  const bbAgent = []\n  const bbProd = []\n  const molReact = []\n  const molAgent = []\n  const molProd = []\n  let j\n  const bondLengthData = { cnt: 0, totalLength: 0 }\n  for (j = 0; j < mols.length; ++j) {\n    var mol = mols[j]\n    const bondLengthDataMol = mol.getBondLengthData()\n    bondLengthData.cnt += bondLengthDataMol.cnt\n    bondLengthData.totalLength += bondLengthDataMol.totalLength\n  }\n  if (SHOULD_RESCALE_MOLECULES) {\n    const avgBondLength =\n      1 /\n      (bondLengthData.cnt === 0\n        ? 1\n        : bondLengthData.totalLength / bondLengthData.cnt)\n    for (j = 0; j < mols.length; ++j) {\n      mol = mols[j]\n      mol.scale(avgBondLength)\n    }\n  }\n\n  for (j = 0; j < mols.length; ++j) {\n    mol = mols[j]\n    const bb = mol.getCoordBoundingBoxObj()\n    if (!bb) continue // eslint-disable-line no-continue\n\n    var fragmentType =\n      j < nReactants\n        ? FRAGMENT.REACTANT // eslint-disable-line no-nested-ternary\n        : j < nReactants + nProducts\n        ? FRAGMENT.PRODUCT\n        : FRAGMENT.AGENT\n    if (fragmentType === FRAGMENT.REACTANT) {\n      bbReact.push(bb)\n      molReact.push(mol)\n    } else if (fragmentType === FRAGMENT.AGENT) {\n      bbAgent.push(bb)\n      molAgent.push(mol)\n    } else if (fragmentType === FRAGMENT.PRODUCT) {\n      bbProd.push(bb)\n      molProd.push(mol)\n    }\n\n    mol.atoms.forEach((atom) => {\n      atom.rxnFragmentType = fragmentType\n    })\n  }\n\n  function shiftMol(ret, mol, bb, xorig, over) {\n    // eslint-disable-line max-params\n    const d = new Vec2(\n      xorig - bb.min.x,\n      over ? 1 - bb.min.y : -(bb.min.y + bb.max.y) / 2\n    )\n    mol.atoms.forEach((atom) => {\n      atom.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n\n    mol.sgroups.forEach((item) => {\n      if (item.pp) item.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    })\n    bb.min.add_(d) // eslint-disable-line no-underscore-dangle\n    bb.max.add_(d) // eslint-disable-line no-underscore-dangle\n    mol.mergeInto(ret)\n    return bb.max.x - bb.min.x\n  }\n\n  if (shouldReactionRelayout) {\n    // reaction fragment layout\n    let xorig = 0\n    for (j = 0; j < molReact.length; ++j) {\n      xorig += shiftMol(ret, molReact[j], bbReact[j], xorig, false) + 2.0\n    }\n    xorig += 2.0\n    for (j = 0; j < molAgent.length; ++j) {\n      xorig += shiftMol(ret, molAgent[j], bbAgent[j], xorig, true) + 2.0\n    }\n    xorig += 2.0\n\n    for (j = 0; j < molProd.length; ++j) {\n      xorig += shiftMol(ret, molProd[j], bbProd[j], xorig, false) + 2.0\n    }\n  } else {\n    for (j = 0; j < molReact.length; ++j) molReact[j].mergeInto(ret)\n    for (j = 0; j < molAgent.length; ++j) molAgent[j].mergeInto(ret)\n    for (j = 0; j < molProd.length; ++j) molProd[j].mergeInto(ret)\n  }\n\n  let bb1\n  let bb2\n  let x\n  let y\n  let bbReactAll = null\n  let bbProdAll = null\n  for (j = 0; j < bbReact.length - 1; ++j) {\n    bb1 = bbReact[j]\n    bb2 = bbReact[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbReact.length; ++j) {\n    if (j === 0) {\n      bbReactAll = {}\n      bbReactAll.max = new Vec2(bbReact[j].max)\n      bbReactAll.min = new Vec2(bbReact[j].min)\n    } else {\n      bbReactAll.max = Vec2.max(bbReactAll.max, bbReact[j].max)\n      bbReactAll.min = Vec2.min(bbReactAll.min, bbReact[j].min)\n    }\n  }\n  for (j = 0; j < bbProd.length - 1; ++j) {\n    bb1 = bbProd[j]\n    bb2 = bbProd[j + 1]\n\n    x = (bb1.max.x + bb2.min.x) / 2\n    y = (bb1.max.y + bb1.min.y + bb2.max.y + bb2.min.y) / 4\n\n    ret.rxnPluses.add(new RxnPlus({ pp: new Vec2(x, y) }))\n  }\n  for (j = 0; j < bbProd.length; ++j) {\n    if (j === 0) {\n      bbProdAll = {}\n      bbProdAll.max = new Vec2(bbProd[j].max)\n      bbProdAll.min = new Vec2(bbProd[j].min)\n    } else {\n      bbProdAll.max = Vec2.max(bbProdAll.max, bbProd[j].max)\n      bbProdAll.min = Vec2.min(bbProdAll.min, bbProd[j].min)\n    }\n  }\n  bb1 = bbReactAll\n  bb2 = bbProdAll\n  const defaultArrowLength = 2\n\n  if (!bb1 && !bb2) {\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [new Vec2(0, 0), new Vec2(defaultArrowLength, 0)]\n      })\n    )\n  } else {\n    let v1 = bb1 ? new Vec2(bb1.max.x, (bb1.max.y + bb1.min.y) / 2) : null\n    let v2 = bb2 ? new Vec2(bb2.min.x, (bb2.max.y + bb2.min.y) / 2) : null\n    const defaultOffset = 3\n    if (!v1) v1 = new Vec2(v2.x - defaultOffset, v2.y)\n    if (!v2) v2 = new Vec2(v1.x + defaultOffset, v1.y)\n    const arrowCenter = Vec2.lc2(v1, 0.5, v2, 0.5)\n    const arrowStart = new Vec2(\n      arrowCenter.x - 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    const arrowEnd = new Vec2(\n      arrowCenter.x + 0.5 * defaultArrowLength,\n      arrowCenter.y,\n      arrowCenter.z\n    )\n    ret.rxnArrows.add(\n      new RxnArrow({\n        mode: 'open-angle',\n        pos: [arrowStart, arrowEnd]\n      })\n    )\n  }\n  ret.isReaction = true\n  return ret\n}\n\nfunction rgMerge(scaffold, rgroups) /* Struct */ {\n  /* reader */\n  const ret = new Struct()\n\n  scaffold.mergeInto(ret, null, null, false, true)\n\n  Object.keys(rgroups).forEach((id) => {\n    const rgid = parseInt(id, 10)\n\n    for (let j = 0; j < rgroups[rgid].length; ++j) {\n      const ctab = rgroups[rgid][j]\n      ctab.rgroups.set(rgid, new RGroup())\n      const frag = new Fragment()\n      const frid = ctab.frags.add(frag)\n      ctab.rgroups.get(rgid).frags.add(frid)\n      ctab.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      ctab.mergeInto(ret)\n    }\n  })\n\n  return ret\n}\n\nexport default {\n  fmtInfo,\n  paddedNum,\n  parseDecimalInt,\n  partitionLine,\n  partitionLineFixed,\n  rxnMerge,\n  rgMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pool, SGroup, Vec2 } from 'domain/entities'\n\nimport utils from './utils'\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Pool }\n */\nfunction readKeyValuePairs(str, valueString) {\n  const ret = new Pool()\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n\n  for (let i = 0; i < count; ++i) {\n    const key = utils.parseDecimalInt(partition[2 * i + 1]) - 1\n    const value = valueString\n      ? partition[2 * i + 2].trim()\n      : utils.parseDecimalInt(partition[2 * i + 2])\n\n    ret.set(key, value)\n  }\n\n  return ret\n}\n\n/**\n * @param str { string }\n * @param valueString { boolean }\n * @returns { Array }\n */\nfunction readKeyMultiValuePairs(str, valueString) {\n  /* reader */\n  const ret = []\n  const partition = utils.partitionLineFixed(str, 3, true)\n  const count = utils.parseDecimalInt(partition[0])\n  for (let i = 0; i < count; ++i) {\n    ret.push([\n      /* eslint-disable no-mixed-operators */\n      utils.parseDecimalInt(partition[2 * i + 1]) - 1,\n      valueString\n        ? partition[2 * i + 2].trim()\n        : utils.parseDecimalInt(partition[2 * i + 2])\n      /* eslint-enable no-mixed-operators */\n    ])\n  }\n  return ret\n}\n\nfunction postLoadMul(sgroup, mol, atomMap) {\n  // eslint-disable-line max-statements\n  sgroup.data.mul = sgroup.data.subscript - 0\n  const atomReductionMap = {}\n\n  sgroup.atoms = SGroup.filterAtoms(sgroup.atoms, atomMap)\n  sgroup.patoms = SGroup.filterAtoms(sgroup.patoms, atomMap)\n\n  // mark repetitions for removal\n  for (let k = 1; k < sgroup.data.mul; ++k) {\n    for (let m = 0; m < sgroup.patoms.length; ++m) {\n      const raid = sgroup.atoms[k * sgroup.patoms.length + m] // eslint-disable-line no-mixed-operators\n      if (raid < 0) continue // eslint-disable-line no-continue\n      if (sgroup.patoms[m] < 0) throw new Error('parent atom missing')\n      atomReductionMap[raid] = sgroup.patoms[m] // \"merge\" atom in parent\n    }\n  }\n  sgroup.patoms = SGroup.removeNegative(sgroup.patoms)\n\n  const patomsMap = identityMap(sgroup.patoms)\n\n  const bondsToRemove = []\n  mol.bonds.forEach((bond, bid) => {\n    const beginIn = bond.begin in atomReductionMap\n    const endIn = bond.end in atomReductionMap\n    // if both adjacent atoms of a bond are to be merged, remove it\n    /* eslint-disable no-mixed-operators */\n    if (\n      (beginIn && endIn) ||\n      (beginIn && bond.end in patomsMap) ||\n      (endIn && bond.begin in patomsMap)\n    ) {\n      bondsToRemove.push(bid)\n    }\n    /* eslint-enable no-mixed-operators */\n    // if just one atom is merged, modify the bond accordingly\n    else if (beginIn) bond.begin = atomReductionMap[bond.begin]\n    else if (endIn) bond.end = atomReductionMap[bond.end]\n  }, sgroup)\n\n  // apply removal lists\n  for (let b = 0; b < bondsToRemove.length; ++b) {\n    mol.bonds.delete(bondsToRemove[b])\n  }\n  for (const a in atomReductionMap) {\n    mol.atoms.delete(+a)\n    atomMap[a] = -1\n  }\n  sgroup.atoms = sgroup.patoms\n  sgroup.patoms = null\n}\n\nfunction postLoadSru(sgroup) {\n  sgroup.data.connectivity = (sgroup.data.connectivity || 'EU')\n    .trim()\n    .toLowerCase()\n}\n\nfunction postLoadSup(sgroup) {\n  sgroup.data.name = (sgroup.data.subscript || '').trim()\n  sgroup.data.subscript = ''\n}\n\nfunction postLoadGen(sgroup, mol, atomMap) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction postLoadDat(sgroup, mol) {\n  if (!sgroup.data.absolute) {\n    sgroup.pp = sgroup.pp.add(SGroup.getMassCentre(mol, sgroup.atoms))\n  }\n}\n\nfunction postLoadMon(sgroup) {\n  // TODO: Implement after adding MON type support\n}\n\nfunction postLoadMer(sgroup) {\n  // TODO: Implement after adding MER type support\n}\n\nfunction postLoadCop(sgroup) {\n  // TODO: Implement after adding COP type support\n}\n\nfunction postLoadCro(sgroup) {\n  // TODO: Implement after adding CRO type support\n}\n\nfunction postLoadMod(sgroup) {\n  // TODO: Implement after adding MOD type support\n}\n\nfunction postLoadGra(sgroup) {\n  // TODO: Implement after adding GRA type support\n}\n\nfunction postLoadCom(sgroup) {\n  // TODO: Implement after adding COM type support\n}\n\nfunction postLoadMix(sgroup) {\n  // TODO: Implement after adding MIX type support\n}\n\nfunction postLoadFor(sgroup) {\n  // TODO: Implement after adding FOR type support\n}\n\nfunction postLoadAny(sgroup) {\n  // TODO: Implement after adding ANY type support\n}\n\nfunction loadSGroup(mol, sg, atomMap) {\n  const postLoadMap = {\n    SUP: postLoadSup,\n    MUL: postLoadMul,\n    SRU: postLoadSru,\n    MON: postLoadMon,\n    MER: postLoadMer,\n    COP: postLoadCop,\n    CRO: postLoadCro,\n    MOD: postLoadMod,\n    GRA: postLoadGra,\n    COM: postLoadCom,\n    MIX: postLoadMix,\n    FOR: postLoadFor,\n    DAT: postLoadDat,\n    ANY: postLoadAny,\n    GEN: postLoadGen\n  }\n\n  // add the group to the molecule\n  sg.id = mol.sgroups.add(sg)\n\n  // apply type-specific post-processing\n  postLoadMap[sg.type](sg, mol, atomMap)\n  // mark atoms in the group as belonging to it\n  for (let s = 0; s < sg.atoms.length; ++s) {\n    if (mol.atoms.has(sg.atoms[s])) mol.atoms.get(sg.atoms[s]).sgs.add(sg.id)\n  }\n\n  if (sg.type === 'DAT') mol.sGroupForest.insert(sg, -1, [])\n  else mol.sGroupForest.insert(sg)\n\n  return sg.id\n}\n\nfunction initSGroup(sGroups, propData) {\n  /* reader */\n  const kv = readKeyValuePairs(propData, true)\n  for (const [key, type] of kv) {\n    const sg = new SGroup(type)\n    sg.number = key\n    sGroups[key] = sg\n  }\n}\n\nfunction applySGroupProp(sGroups, propName, propData, numeric, core) {\n  // eslint-disable-line max-params\n  const kv = readKeyValuePairs(propData, !numeric)\n  // \"core\" properties are stored directly in an sgroup, not in sgroup.data\n  for (const key of kv.keys()) {\n    ;(core ? sGroups[key] : sGroups[key].data)[propName] = kv.get(key)\n  }\n}\n\nfunction applySGroupArrayProp(sGroups, propName, propData, shift) {\n  /* reader */\n  const sid = utils.parseDecimalInt(propData.slice(1, 4)) - 1\n  const num = utils.parseDecimalInt(propData.slice(4, 8))\n  let part = toIntArray(utils.partitionLineFixed(propData.slice(8), 3, true))\n\n  if (part.length !== num) throw new Error('File format invalid')\n  if (shift) part = part.map((v) => v + shift)\n\n  sGroups[sid][propName] = sGroups[sid][propName].concat(part)\n}\n\nfunction applyDataSGroupName(sg, name) {\n  /* reader */\n  sg.data.fieldName = name\n}\n\nfunction applyDataSGroupExpand(sg, expanded) {\n  sg.data.expanded = expanded\n}\n\nfunction applyDataSGroupQuery(sg, query) {\n  /* reader */\n  sg.data.query = query\n}\n\nfunction applyDataSGroupQueryOp(sg, queryOp) {\n  /* reader */\n  sg.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupDesc(sGroups, propData) {\n  /* reader */\n  const split = utils.partitionLine(propData, [4, 31, 2, 20, 2, 3], false)\n  const id = utils.parseDecimalInt(split[0]) - 1\n  const fieldName = split[1].trim()\n  const fieldType = split[2].trim()\n  const units = split[3].trim()\n  const query = split[4].trim()\n  const queryOp = split[5].trim()\n  const sGroup = sGroups[id]\n  sGroup.data.fieldType = fieldType\n  sGroup.data.fieldName = fieldName\n  sGroup.data.units = units\n  sGroup.data.query = query\n  sGroup.data.queryOp = queryOp\n}\n\nfunction applyDataSGroupInfo(sg, propData) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = utils.partitionLine(\n    propData,\n    [\n      10 /* x.x */, 10 /* y.y */, 4 /* eee */, 1 /* f */, 1 /* g */, 1 /* h */,\n      3 /* i */, 3 /* jjj */, 3 /* kkk */, 3 /* ll */, 2 /* m */, 3 /* n */,\n      2 /* oo */\n    ],\n    false\n  )\n\n  const x = parseFloat(split[0])\n  const y = parseFloat(split[1])\n  const attached = split[3].trim() === 'A'\n  const absolute = split[4].trim() === 'A'\n  const showUnits = split[5].trim() === 'U'\n  let nCharsToDisplay = split[7].trim()\n  nCharsToDisplay =\n    nCharsToDisplay === 'ALL' ? -1 : utils.parseDecimalInt(nCharsToDisplay)\n  const tagChar = split[10].trim()\n  const daspPos = utils.parseDecimalInt(split[11].trim())\n\n  sg.pp = new Vec2(x, -y)\n  sg.data.attached = attached\n  sg.data.absolute = absolute\n  sg.data.showUnits = showUnits\n  sg.data.nCharsToDisplay = nCharsToDisplay\n  sg.data.tagChar = tagChar\n  sg.data.daspPos = daspPos\n}\n\nfunction applyDataSGroupInfoLine(sGroups, propData) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 4)) - 1\n  const sg = sGroups[id]\n  applyDataSGroupInfo(sg, propData.substr(5))\n}\n\nfunction applyDataSGroupData(sg, data, finalize) {\n  /* reader */\n  sg.data.fieldValue = (sg.data.fieldValue || '') + data\n  if (finalize) {\n    sg.data.fieldValue = trimRight(sg.data.fieldValue)\n    if (\n      sg.data.fieldValue.startsWith('\"') &&\n      sg.data.fieldValue.endsWith('\"')\n    ) {\n      sg.data.fieldValue = sg.data.fieldValue.substr(\n        1,\n        sg.data.fieldValue.length - 2\n      )\n    }\n  }\n}\n\nfunction applyDataSGroupDataLine(sGroups, propData, finalize) {\n  /* reader */\n  const id = utils.parseDecimalInt(propData.substr(0, 5)) - 1\n  const data = propData.substr(5)\n  const sg = sGroups[id]\n  applyDataSGroupData(sg, data, finalize)\n}\n\n// Utilities functions\nfunction toIntArray(strArray) {\n  /* reader */\n  const ret = []\n  for (let j = 0; j < strArray.length; ++j) {\n    ret[j] = utils.parseDecimalInt(strArray[j])\n  }\n  return ret\n}\n\nfunction trimRight(str) {\n  return str.replace(/\\s+$/, '')\n}\n\nfunction identityMap(array) {\n  const map = {}\n  for (let i = 0; i < array.length; ++i) map[array[i]] = array[i]\n  return map\n}\n\nexport default {\n  readKeyValuePairs,\n  readKeyMultiValuePairs,\n  loadSGroup,\n  initSGroup,\n  applySGroupProp,\n  applySGroupArrayProp,\n  applyDataSGroupName,\n  applyDataSGroupQuery,\n  applyDataSGroupQueryOp,\n  applyDataSGroupDesc,\n  applyDataSGroupInfo,\n  applyDataSGroupData,\n  applyDataSGroupInfoLine,\n  applyDataSGroupDataLine,\n  applyDataSGroupExpand\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n/* eslint-disable guard-for-in */ // todo\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  Pool,\n  RGroup,\n  SGroup,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\nfunction parseAtomLine(atomLine) {\n  /* reader */\n  const atomSplit = utils.partitionLine(\n    atomLine,\n    utils.fmtInfo.atomLinePartition\n  )\n  const params = {\n    // generic\n    pp: new Vec2(\n      parseFloat(atomSplit[0]),\n      -parseFloat(atomSplit[1]),\n      parseFloat(atomSplit[2])\n    ),\n    label: atomSplit[4].trim(),\n    explicitValence:\n      utils.fmtInfo.valenceMap[utils.parseDecimalInt(atomSplit[10])],\n\n    // obsolete\n    massDifference: utils.parseDecimalInt(atomSplit[5]),\n    charge: utils.fmtInfo.chargeMap[utils.parseDecimalInt(atomSplit[6])],\n\n    // query\n    hCount: utils.parseDecimalInt(utils.parseDecimalInt(atomSplit[8])),\n    stereoCare: utils.parseDecimalInt(atomSplit[9]) !== 0,\n\n    // reaction\n    aam: utils.parseDecimalInt(atomSplit[14]),\n    invRet: utils.parseDecimalInt(atomSplit[15]),\n\n    // reaction query\n    exactChangeFlag: utils.parseDecimalInt(atomSplit[16])\n  }\n  return new Atom(params)\n}\n\nfunction parseBondLine(bondLine) {\n  /* reader */\n  const bondSplit = utils.partitionLine(\n    bondLine,\n    utils.fmtInfo.bondLinePartition\n  )\n\n  const params = {\n    begin: utils.parseDecimalInt(bondSplit[0]) - 1,\n    end: utils.parseDecimalInt(bondSplit[1]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(bondSplit[2])],\n    stereo: utils.fmtInfo.bondStereoMap[utils.parseDecimalInt(bondSplit[3])],\n    xxx: bondSplit[4],\n    topology:\n      utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(bondSplit[5])],\n    reactingCenterStatus: utils.parseDecimalInt(bondSplit[6])\n  }\n\n  return new Bond(params)\n}\n\nfunction parseAtomListLine(/* string */ atomListLine) {\n  /* reader */\n  const split = utils.partitionLine(\n    atomListLine,\n    utils.fmtInfo.atomListHeaderPartition\n  )\n\n  const number = utils.parseDecimalInt(split[0]) - 1\n  const notList = split[2].trim() === 'T'\n  const count = utils.parseDecimalInt(split[4].trim())\n\n  const ids = atomListLine.slice(utils.fmtInfo.atomListHeaderLength)\n  const list = []\n  const itemLength = utils.fmtInfo.atomListHeaderItemLength\n  for (let i = 0; i < count; ++i) {\n    list[i] = utils.parseDecimalInt(\n      ids.slice(i * itemLength, (i + 1) * itemLength - 1)\n    )\n  }\n\n  return {\n    aid: number,\n    atomList: new AtomList({\n      notList,\n      ids: list\n    })\n  }\n}\n\n/**\n * @param ctab\n * @param ctabLines\n * @param shift\n * @param end\n * @param sGroups\n * @param rLogic\n * @returns { Pool }\n */\nfunction parsePropertyLines(ctab, ctabLines, shift, end, sGroups, rLogic) {\n  // eslint-disable-line max-statements, max-params\n  /* reader */\n  const props = new Pool()\n\n  while (shift < end) {\n    const line = ctabLines[shift]\n    if (line.charAt(0) === 'A') {\n      const propValue = ctabLines[++shift]\n      // TODO: Atom entity only have pseudo getter. Check during refactoring\n      // this type of pseudo labeling is not used in current BIOVIA products. See ctab documentation 2020\n      // https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf (page 47)\n      const isPseudo = /'.+'/.test(propValue)\n      if (isPseudo && !props.get('pseudo')) {\n        props.set('pseudo', new Pool())\n      }\n      if (!isPseudo && !props.get('alias')) {\n        props.set('alias', new Pool())\n      }\n      props\n        .get(isPseudo ? 'pseudo' : 'alias')\n        .set(utils.parseDecimalInt(line.slice(3)) - 1, propValue)\n    } else if (line.charAt(0) === 'M') {\n      const type = line.slice(3, 6)\n      let propertyData = line.slice(6)\n      if (type === 'END') {\n        break\n      } else if (type === 'CHG') {\n        if (!props.get('charge')) {\n          props.set('charge', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RAD') {\n        if (!props.get('radical')) {\n          props.set('radical', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ISO') {\n        if (!props.get('isotope')) {\n          props.set('isotope', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'RBC') {\n        if (!props.get('ringBondCount')) {\n          props.set('ringBondCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'SUB') {\n        if (!props.get('substitutionCount')) {\n          props.set('substitutionCount', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'UNS') {\n        if (!props.get('unsaturatedAtom')) {\n          props.set('unsaturatedAtom', sGroup.readKeyValuePairs(propertyData))\n        }\n        // else if (type == \"LIN\") // link atom\n      } else if (type === 'RGP') {\n        // rgroup atom\n        if (!props.get('rglabel')) props.set('rglabel', new Pool())\n        const rglabels = props.get('rglabel')\n        const a2rs = sGroup.readKeyMultiValuePairs(propertyData)\n        for (let a2ri = 0; a2ri < a2rs.length; a2ri++) {\n          const a2r = a2rs[a2ri]\n          rglabels.set(\n            a2r[0],\n            (rglabels.get(a2r[0]) || 0) | (1 << (a2r[1] - 1))\n          )\n        }\n      } else if (type === 'LOG') {\n        // rgroup atom\n        propertyData = propertyData.slice(4)\n        const rgid = utils.parseDecimalInt(propertyData.slice(0, 3).trim())\n        const iii = utils.parseDecimalInt(propertyData.slice(4, 7).trim())\n        const hhh = utils.parseDecimalInt(propertyData.slice(8, 11).trim())\n        const ooo = propertyData.slice(12).trim()\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[rgid] = logic\n      } else if (type === 'APO') {\n        if (!props.get('attpnt')) {\n          props.set('attpnt', sGroup.readKeyValuePairs(propertyData))\n        }\n      } else if (type === 'ALS') {\n        // atom list\n        const pool = parsePropertyLineAtomList(\n          utils.partitionLine(propertyData, [1, 3, 3, 1, 1, 1]),\n          utils.partitionLineFixed(propertyData.slice(10), 4, false)\n        )\n\n        if (!props.get('atomList')) props.set('atomList', new Pool())\n        if (!props.get('label')) props.set('label', new Pool())\n\n        pool.forEach((atomList, aid) => {\n          props.get('label').set(aid, 'L#')\n          props.get('atomList').set(aid, atomList)\n        })\n      } else if (type === 'STY') {\n        // introduce s-group\n        sGroup.initSGroup(sGroups, propertyData)\n      } else if (type === 'SST') {\n        sGroup.applySGroupProp(sGroups, 'subtype', propertyData)\n      } else if (type === 'SLB') {\n        sGroup.applySGroupProp(sGroups, 'label', propertyData, true)\n      } else if (type === 'SPL') {\n        sGroup.applySGroupProp(sGroups, 'parent', propertyData, true, true)\n      } else if (type === 'SCN') {\n        sGroup.applySGroupProp(sGroups, 'connectivity', propertyData)\n      } else if (type === 'SAL') {\n        sGroup.applySGroupArrayProp(sGroups, 'atoms', propertyData, -1)\n      } else if (type === 'SBL') {\n        sGroup.applySGroupArrayProp(sGroups, 'bonds', propertyData, -1)\n      } else if (type === 'SPA') {\n        sGroup.applySGroupArrayProp(sGroups, 'patoms', propertyData, -1)\n      } else if (type === 'SMT') {\n        const sid = utils.parseDecimalInt(propertyData.slice(0, 4)) - 1\n        sGroups[sid].data.subscript = propertyData.slice(4).trim()\n      } else if (type === 'SDT') {\n        sGroup.applyDataSGroupDesc(sGroups, propertyData)\n      } else if (type === 'SDD') {\n        sGroup.applyDataSGroupInfoLine(sGroups, propertyData)\n      } else if (type === 'SCD') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, false)\n      } else if (type === 'SED') {\n        sGroup.applyDataSGroupDataLine(sGroups, propertyData, true)\n      } else if (type === 'SDS') {\n        const expandedSGroups = propertyData.slice(7).trim().split('   ')\n        expandedSGroups.forEach((eg) => {\n          const sGroupId = Number(eg) - 1\n          sGroups[sGroupId].data.expanded = true\n        })\n      }\n    }\n    ++shift\n  }\n  return props\n}\n\n/**\n * @param atoms { Pool }\n * @param values { Pool }\n * @param propId { string }\n */\nfunction applyAtomProp(atoms, values, propId) {\n  /* reader */\n  values.forEach((propVal, aid) => {\n    atoms.get(aid)[propId] = propVal\n  })\n}\n\nfunction parseCTabV2000(ctabLines, countsSplit) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n  let i\n  const atomCount = utils.parseDecimalInt(countsSplit[0])\n  const bondCount = utils.parseDecimalInt(countsSplit[1])\n  const atomListCount = utils.parseDecimalInt(countsSplit[2])\n  const isAbs = utils.parseDecimalInt(countsSplit[4]) === 1\n  const isAnd = utils.parseDecimalInt(countsSplit[4]) === 0\n  const stextLinesCount = utils.parseDecimalInt(countsSplit[5])\n  const propertyLinesCount = utils.parseDecimalInt(countsSplit[10])\n  let shift = 0\n  const atomLines = ctabLines.slice(shift, shift + atomCount)\n  shift += atomCount\n  const bondLines = ctabLines.slice(shift, shift + bondCount)\n  shift += bondCount\n  const atomListLines = ctabLines.slice(shift, shift + atomListCount)\n  shift += atomListCount + stextLinesCount\n\n  const atoms = atomLines.map(parseAtomLine)\n  atoms.forEach((atom) => ctab.atoms.add(atom))\n\n  const bonds = bondLines.map(parseBondLine)\n  bonds.forEach((bond) => {\n    if (bond.stereo && isAbs) {\n      ctab.atoms.get(bond.begin).stereoLabel = StereoLabel.Abs\n    }\n    if (bond.stereo && isAnd) {\n      ctab.atoms.get(bond.begin).stereoLabel = `${StereoLabel.And}1`\n    }\n    ctab.bonds.add(bond)\n  })\n\n  const atomLists = atomListLines.map(parseAtomListLine)\n  atomLists.forEach((pair) => {\n    ctab.atoms.get(pair.aid).atomList = pair.atomList\n    ctab.atoms.get(pair.aid).label = 'L#'\n  })\n\n  const sGroups = {}\n  const rLogic = {}\n  const props = parsePropertyLines(\n    ctab,\n    ctabLines,\n    shift,\n    Math.min(ctabLines.length, shift + propertyLinesCount),\n    sGroups,\n    rLogic\n  )\n  props.forEach((values, propId) => {\n    applyAtomProp(ctab.atoms, values, propId)\n  })\n\n  const atomMap = {}\n  let sid\n  for (sid in sGroups) {\n    const sg = sGroups[sid]\n    if (sg.type === 'DAT' && sg.atoms.length === 0) {\n      const parent = sGroups[sid].parent\n      if (parent >= 0) {\n        const psg = sGroups[parent - 1]\n        if (psg.type === 'GEN') sg.atoms = [].slice.call(psg.atoms)\n      }\n    }\n  }\n  for (sid in sGroups) sGroup.loadSGroup(ctab, sGroups[sid], atomMap)\n  const emptyGroups = []\n  for (sid in sGroups) {\n    // TODO: why do we need that?\n    SGroup.filter(ctab, sGroups[sid], atomMap)\n    if (sGroups[sid].atoms.length === 0 && !sGroups[sid].allAtoms) {\n      emptyGroups.push(+sid)\n    }\n  }\n  for (i = 0; i < emptyGroups.length; ++i) {\n    ctab.sGroupForest.remove(emptyGroups[i])\n    ctab.sgroups.delete(emptyGroups[i])\n  }\n  for (const id in rLogic) {\n    const rgid = parseInt(id, 10)\n    ctab.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n  }\n  return ctab\n}\n\nfunction parseRg2000(/* string[] */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  ctabLines = ctabLines.slice(7)\n  if (ctabLines[0].trim() !== '$CTAB') throw new Error('RGFile format invalid')\n  let i = 1\n  while (ctabLines[i].charAt(0) !== '$') i++\n  if (ctabLines[i].trim() !== '$END CTAB') {\n    throw new Error('RGFile format invalid')\n  }\n  const coreLines = ctabLines.slice(1, i)\n  ctabLines = ctabLines.slice(i + 1)\n  const fragmentLines = {}\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n    let line = ctabLines[0].trim()\n    if (line === '$END MOL') {\n      ctabLines = ctabLines.slice(1)\n      break\n    }\n    if (line !== '$RGP') throw new Error('RGFile format invalid')\n\n    const rgid = parseInt(ctabLines[1].trim(), 10)\n    fragmentLines[rgid] = []\n    ctabLines = ctabLines.slice(2)\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      if (ctabLines.length === 0) throw new Error('Unexpected end of file')\n      line = ctabLines[0].trim()\n      if (line === '$END RGP') {\n        ctabLines = ctabLines.slice(1)\n        break\n      }\n      if (line !== '$CTAB') throw new Error('RGFile format invalid')\n      i = 1\n      while (ctabLines[i].charAt(0) !== '$') i++\n      if (ctabLines[i].trim() !== '$END CTAB') {\n        throw new Error('RGFile format invalid')\n      }\n      fragmentLines[rgid].push(ctabLines.slice(1, i))\n      ctabLines = ctabLines.slice(i + 1)\n    }\n  }\n\n  const core = parseCTab(coreLines)\n  const frag = {}\n  if (loadRGroupFragments) {\n    for (const strId in fragmentLines) {\n      const id = parseInt(strId, 10)\n      frag[id] = []\n      for (let j = 0; j < fragmentLines[id].length; ++j) {\n        frag[id].push(parseCTab(fragmentLines[id][j]))\n      }\n    }\n  }\n  return utils.rgMerge(core, frag)\n}\n\nfunction parseRxn2000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.rxnItemsPartition\n  )\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit[2] - 0\n  ctabLines = ctabLines.slice(1) // consume counts line\n  const mols = []\n  while (ctabLines.length > 0 && ctabLines[0].substr(0, 4) === '$MOL') {\n    ctabLines = ctabLines.slice(1)\n    let n = 0\n    while (n < ctabLines.length && ctabLines[n].substr(0, 4) !== '$MOL') n++\n\n    const lines = ctabLines.slice(0, n)\n    var struct\n    if (lines[0].search('\\\\$MDL') === 0) {\n      struct = parseRg2000(lines)\n    } else {\n      struct = parseCTab(lines.slice(3))\n      struct.name = lines[0].trim()\n    }\n    mols.push(struct)\n    ctabLines = ctabLines.slice(n)\n  }\n  return utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n}\n\nfunction parseCTab(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  const countsSplit = utils.partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  ctabLines = ctabLines.slice(1)\n  return parseCTabV2000(ctabLines, countsSplit)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\n/**\n * @param hdr\n * @param lst\n * @returns { Pool }\n */\nfunction parsePropertyLineAtomList(hdr, lst) {\n  /* reader */\n  const aid = utils.parseDecimalInt(hdr[1]) - 1\n  const count = utils.parseDecimalInt(hdr[2])\n  const notList = hdr[4].trim() === 'T'\n  const ids = labelsListToIds(lst.slice(0, count))\n  const ret = new Pool()\n  ret.set(\n    aid,\n    new AtomList({\n      notList,\n      ids\n    })\n  )\n  return ret\n}\n\nexport default {\n  parseCTabV2000,\n  parseRg2000,\n  parseRxn2000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  AtomList,\n  Bond,\n  RGroup,\n  SGroup,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport sGroup from './parseSGroup'\nimport utils from './utils'\n\nfunction parseAtomLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    pp: new Vec2(\n      parseFloat(split[2]),\n      -parseFloat(split[3]),\n      parseFloat(split[4])\n    ),\n    aam: split[5].trim()\n  }\n  let label = split[1].trim()\n  if (label.charAt(0) === '\"' && label.charAt(label.length - 1) === '\"') {\n    label = label.substr(1, label.length - 2)\n  } // strip qutation marks\n  if (label.charAt(label.length - 1) === ']') {\n    // assume atom list\n    label = label.substr(0, label.length - 1) // remove ']'\n    const atomListParams = {}\n    atomListParams.notList = false\n    const matchNotListInfo = label.match(/NOT ?\\[/)\n    if (matchNotListInfo) {\n      atomListParams.notList = true\n      const [matchedSubstr] = matchNotListInfo\n      label = label.substr(matchedSubstr.length) // remove 'NOT [' or 'NOT['\n    } else if (label.charAt(0) !== '[') {\n      throw new Error(\"Error: atom list expected, found '\" + label + \"'\")\n    } else {\n      label = label.substr(1) // remove '['\n    }\n    atomListParams.ids = labelsListToIds(label.split(','))\n    params.atomList = new AtomList(atomListParams)\n    params.label = 'L#'\n  } else {\n    params.label = label\n  }\n  split.splice(0, 6)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key in utils.fmtInfo.v30atomPropMap) {\n      let ival = utils.parseDecimalInt(value)\n      if (key === 'VAL') {\n        if (ival === 0) continue // eslint-disable-line no-continue\n        if (ival === -1) ival = 0\n      }\n      params[utils.fmtInfo.v30atomPropMap[key]] = ival\n    } else if (key === 'RGROUPS') {\n      value = value.trim().substr(1, value.length - 2)\n      const rgrsplit = value.split(' ').slice(1)\n      params.rglabel = 0\n      for (let j = 0; j < rgrsplit.length; ++j) {\n        params.rglabel |= 1 << (rgrsplit[j] - 1)\n      }\n    } else if (key === 'ATTCHPT') {\n      params.attpnt = value.trim() - 0\n    }\n  }\n\n  return new Atom(params)\n}\n\nfunction parseBondLineV3000(line) {\n  /* reader */\n  let subsplit, key, value, i\n  const split = spacebarsplit(line)\n  const params = {\n    begin: utils.parseDecimalInt(split[2]) - 1,\n    end: utils.parseDecimalInt(split[3]) - 1,\n    type: utils.fmtInfo.bondTypeMap[utils.parseDecimalInt(split[1])]\n  }\n  split.splice(0, 4)\n  for (i = 0; i < split.length; ++i) {\n    subsplit = splitonce(split[i], '=')\n    key = subsplit[0]\n    value = subsplit[1]\n    if (key === 'CFG') {\n      params.stereo =\n        utils.fmtInfo.v30bondStereoMap[utils.parseDecimalInt(value)]\n      if (\n        params.type === Bond.PATTERN.TYPE.DOUBLE &&\n        params.stereo === Bond.PATTERN.STEREO.EITHER\n      ) {\n        params.stereo = Bond.PATTERN.STEREO.CIS_TRANS\n      }\n    } else if (key === 'TOPO') {\n      params.topology =\n        utils.fmtInfo.bondTopologyMap[utils.parseDecimalInt(value)]\n    } else if (key === 'RXCTR') {\n      params.reactingCenterStatus = utils.parseDecimalInt(value)\n    } else if (key === 'STBOX') {\n      params.stereoCare = utils.parseDecimalInt(value)\n    }\n  }\n  return new Bond(params)\n}\n\nfunction v3000parseCollection(ctab, ctabLines, shift) {\n  /* reader */\n  shift++\n  while (ctabLines[shift].trim() !== 'M  V30 END COLLECTION') shift++\n  shift++\n  return shift\n}\n\nfunction v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift) {\n  // eslint-disable-line max-params, max-statements\n  /* reader */\n  let line = ''\n  shift++\n  while (shift < ctabLines.length) {\n    line = stripV30(ctabLines[shift++]).trim()\n    if (line.trim() === 'END SGROUP') return shift\n    while (line.charAt(line.length - 1) === '-') {\n      line = (\n        line.substr(0, line.length - 1) + stripV30(ctabLines[shift++])\n      ).trim()\n    }\n    const split = splitSGroupDef(line)\n    const type = split[1]\n    const sg = new SGroup(type)\n    sg.number = split[0] - 0\n    sg.type = type\n    sg.label = split[2] - 0\n    sgroups[sg.number] = sg\n    const props = {}\n    for (let i = 3; i < split.length; ++i) {\n      const subsplit = splitonce(split[i], '=')\n      if (subsplit.length !== 2) {\n        throw new Error(\n          \"A record of form AAA=BBB or AAA=(...) expected, got '\" +\n            split[i] +\n            \"'\"\n        )\n      }\n      const name = subsplit[0]\n      if (!(name in props)) props[name] = []\n      props[name].push(subsplit[1])\n    }\n    sg.atoms = parseBracedNumberList(props.ATOMS[0], -1)\n    if (props.PATOMS) {\n      sg.patoms = parseBracedNumberList(props.PATOMS[0], -1)\n    }\n    sg.bonds = props.BONDS ? parseBracedNumberList(props.BONDS[0], -1) : []\n    const brkxyzStrs = props.BRKXYZ\n    sg.brkxyz = []\n    if (brkxyzStrs) {\n      for (let j = 0; j < brkxyzStrs.length; ++j) {\n        sg.brkxyz.push(parseBracedNumberList(brkxyzStrs[j]))\n      }\n    }\n    if (props.MULT) sg.data.subscript = props.MULT[0] - 0\n    if (props.LABEL) sg.data.subscript = props.LABEL[0].trim()\n    if (props.CONNECT) {\n      sg.data.connectivity = props.CONNECT[0].toLowerCase()\n    }\n    if (props.FIELDDISP) {\n      sGroup.applyDataSGroupInfo(sg, stripQuotes(props.FIELDDISP[0]))\n    }\n    if (props.FIELDDATA) {\n      sGroup.applyDataSGroupData(sg, props.FIELDDATA[0], true)\n    }\n    if (props.FIELDNAME) {\n      sGroup.applyDataSGroupName(sg, props.FIELDNAME[0])\n    }\n    if (props.QUERYTYPE) {\n      sGroup.applyDataSGroupQuery(sg, props.QUERYTYPE[0])\n    }\n    if (props.QUERYOP) sGroup.applyDataSGroupQueryOp(sg, props.QUERYOP[0])\n    sGroup.loadSGroup(ctab, sg, atomMap)\n    if (props.ESTATE) sGroup.applyDataSGroupExpand(sg, props.ESTATE[0])\n  }\n  throw new Error('S-group declaration incomplete.')\n}\n\nfunction parseCTabV3000(ctabLines, norgroups) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const ctab = new Struct()\n\n  let shift = 0\n  if (ctabLines[shift++].trim() !== 'M  V30 BEGIN CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n  if (ctabLines[shift].slice(0, 13) !== 'M  V30 COUNTS') {\n    throw Error('CTAB V3000 invalid')\n  }\n  const vals = ctabLines[shift].slice(14).split(' ')\n  const isAbs = utils.parseDecimalInt(vals[4]) === 1\n  shift++\n\n  if (ctabLines[shift].trim() === 'M  V30 BEGIN ATOM') {\n    shift++\n    let line\n    while (shift < ctabLines.length) {\n      line = stripV30(ctabLines[shift++]).trim()\n      if (line === 'END ATOM') break\n      while (line.charAt(line.length - 1) === '-') {\n        line = (\n          line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n        ).trim()\n      }\n      ctab.atoms.add(parseAtomLineV3000(line))\n    }\n\n    if (ctabLines[shift].trim() === 'M  V30 BEGIN BOND') {\n      shift++\n      while (shift < ctabLines.length) {\n        line = stripV30(ctabLines[shift++]).trim()\n        if (line === 'END BOND') break\n        while (line.charAt(line.length - 1) === '-') {\n          line = (\n            line.substring(0, line.length - 1) + stripV30(ctabLines[shift++])\n          ).trim()\n        }\n        const bond = parseBondLineV3000(line)\n        if (bond.stereo && isAbs) ctab.atoms.get(bond.begin).stereoLabel = 'abs'\n        ctab.bonds.add(bond)\n      }\n    }\n\n    // TODO: let sections follow in arbitrary order\n    const sgroups = {}\n    const atomMap = {}\n\n    while (ctabLines[shift].trim() !== 'M  V30 END CTAB') {\n      if (ctabLines[shift].trim() === 'M  V30 BEGIN COLLECTION') {\n        // TODO: read collection information\n        shift = v3000parseCollection(ctab, ctabLines, shift)\n      } else if (ctabLines[shift].trim() === 'M  V30 BEGIN SGROUP') {\n        shift = v3000parseSGroup(ctab, ctabLines, sgroups, atomMap, shift)\n      } else throw Error('CTAB V3000 invalid')\n    }\n  }\n  if (ctabLines[shift++].trim() !== 'M  V30 END CTAB') {\n    throw Error('CTAB V3000 invalid')\n  }\n\n  if (!norgroups) readRGroups3000(ctab, ctabLines.slice(shift))\n\n  return ctab\n}\n\nfunction readRGroups3000(ctab, /* string */ ctabLines) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  const rfrags = {}\n  const rLogic = {}\n  let shift = 0\n  while (\n    shift < ctabLines.length &&\n    ctabLines[shift].search('M  V30 BEGIN RGROUP') === 0\n  ) {\n    const id = ctabLines[shift++].split(' ').pop()\n    rfrags[id] = []\n    rLogic[id] = {}\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      let line = ctabLines[shift].trim()\n      if (line.search('M  V30 RLOGIC') === 0) {\n        line = line.slice(13)\n        const rlsplit = line.trim().split(/\\s+/g)\n        const iii = utils.parseDecimalInt(rlsplit[0])\n        const hhh = utils.parseDecimalInt(rlsplit[1])\n        const ooo = rlsplit.slice(2).join(' ')\n        const logic = {}\n        if (iii > 0) logic.ifthen = iii\n        logic.resth = hhh === 1\n        logic.range = ooo\n        rLogic[id] = logic\n        shift++\n        continue // eslint-disable-line no-continue\n      }\n      if (line !== 'M  V30 BEGIN CTAB') throw Error('CTAB V3000 invalid')\n      for (var i = 0; i < ctabLines.length; ++i) {\n        if (ctabLines[shift + i].trim() === 'M  V30 END CTAB') break\n      }\n      const lines = ctabLines.slice(shift, shift + i + 1)\n      const rfrag = parseCTabV3000(lines, true)\n      rfrags[id].push(rfrag)\n      shift = shift + i + 1\n      if (ctabLines[shift].trim() === 'M  V30 END RGROUP') {\n        shift++\n        break\n      }\n    }\n  }\n\n  Object.keys(rfrags).forEach((rgid) => {\n    rfrags[rgid].forEach((rg) => {\n      rg.rgroups.set(rgid, new RGroup(rLogic[rgid]))\n      const frid = rg.frags.add({})\n      rg.rgroups.get(rgid).frags.add(frid)\n      rg.atoms.forEach((atom) => {\n        atom.fragment = frid\n      })\n      rg.mergeInto(ctab)\n    })\n  })\n}\n\nfunction parseRxn3000(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  // eslint-disable-line max-statements\n  /* reader */\n  ctabLines = ctabLines.slice(4)\n  const countsSplit = ctabLines[0].split(/\\s+/g).slice(3)\n  const nReactants = countsSplit[0] - 0\n  const nProducts = countsSplit[1] - 0\n  const nAgents = countsSplit.length > 2 ? countsSplit[2] - 0 : 0\n\n  function findCtabEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END CTAB') return j\n    }\n\n    return console.error('CTab format invalid')\n  }\n\n  function findRGroupEnd(i) {\n    for (let j = i; j < ctabLines.length; ++j) {\n      if (ctabLines[j].trim() === 'M  V30 END RGROUP') return j\n    }\n    return console.error('CTab format invalid')\n  }\n\n  const molLinesReactants = []\n  const molLinesProducts = []\n  let current = null\n  const rGroups = []\n  for (let i = 0; i < ctabLines.length; ++i) {\n    const line = ctabLines[i].trim()\n    var j\n\n    if (line.startsWith('M  V30 COUNTS')) {\n      // do nothing\n    } else if (line === 'M  END') {\n      break // stop reading\n    } else if (line === 'M  V30 BEGIN PRODUCT') {\n      current = molLinesProducts\n    } else if (line === 'M  V30 END PRODUCT') {\n      current = null\n    } else if (line === 'M  V30 BEGIN REACTANT') {\n      current = molLinesReactants\n    } else if (line === 'M  V30 END REACTANT') {\n      current = null\n    } else if (line.startsWith('M  V30 BEGIN RGROUP')) {\n      j = findRGroupEnd(i)\n      rGroups.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else if (line === 'M  V30 BEGIN CTAB') {\n      j = findCtabEnd(i)\n      current.push(ctabLines.slice(i, j + 1))\n      i = j\n    } else {\n      throw new Error('line unrecognized: ' + line)\n    }\n  }\n  const mols = []\n  const molLines = molLinesReactants.concat(molLinesProducts)\n  for (j = 0; j < molLines.length; ++j) {\n    const mol = parseCTabV3000(molLines[j], countsSplit)\n    mols.push(mol)\n  }\n  const ctab = utils.rxnMerge(\n    mols,\n    nReactants,\n    nProducts,\n    nAgents,\n    shouldReactionRelayout\n  )\n\n  readRGroups3000(\n    ctab,\n    (function (array) {\n      let res = []\n      for (let k = 0; k < array.length; ++k) res = res.concat(array[k])\n      return res\n    })(rGroups)\n  )\n\n  return ctab\n}\n\n// split a line by spaces outside parentheses\nfunction spacebarsplit(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let bracketEquality = 0\n  let currentIndex = 0\n  let firstSliceIndex = -1\n  let quoted = false\n\n  for (currentIndex; currentIndex < line.length; currentIndex += 1) {\n    const currentSymbol = line[currentIndex]\n    if (line.substr(currentIndex, 3) === 'NOT') {\n      const closingBracketIndex = line.indexOf(']')\n      split.push(line.slice(currentIndex, closingBracketIndex + 1))\n      currentIndex = closingBracketIndex + 1\n      firstSliceIndex = currentIndex\n    } else if (currentSymbol === '(') bracketEquality += 1\n    else if (currentSymbol === ')') bracketEquality -= 1\n    else if (currentSymbol === '\"') quoted = !quoted\n    else if (!quoted && line[currentIndex] === ' ' && bracketEquality === 0) {\n      if (currentIndex > firstSliceIndex + 1) {\n        split.push(line.slice(firstSliceIndex + 1, currentIndex))\n      }\n      firstSliceIndex = currentIndex\n    }\n  }\n  if (currentIndex > firstSliceIndex + 1) {\n    split.push(line.slice(firstSliceIndex + 1, currentIndex))\n  }\n  return split\n}\n\n// utils\nfunction stripQuotes(str) {\n  if (str[0] === '\"' && str[str.length - 1] === '\"') {\n    return str.substr(1, str.length - 2)\n  }\n  return str\n}\n\nfunction splitonce(line, delim) {\n  /* reader */\n  const p = line.indexOf(delim)\n  return [line.slice(0, p), line.slice(p + 1)]\n}\n\nfunction splitSGroupDef(line) {\n  // eslint-disable-line max-statements\n  /* reader */\n  const split = []\n  let braceBalance = 0\n  let quoted = false\n  for (let i = 0; i < line.length; ++i) {\n    const c = line.charAt(i)\n    if (c === '\"') {\n      quoted = !quoted\n    } else if (!quoted) {\n      if (c === '(') {\n        braceBalance++\n      } else if (c === ')') {\n        braceBalance--\n      } else if (c === ' ' && braceBalance === 0) {\n        split.push(line.slice(0, i))\n        line = line.slice(i + 1).trim()\n        i = 0\n      }\n    }\n  }\n  if (braceBalance !== 0) {\n    throw new Error('Brace balance broken. S-group properies invalid!')\n  }\n  if (line.length > 0) split.push(line.trim())\n  return split\n}\n\nfunction parseBracedNumberList(line, shift) {\n  /* reader */\n  if (!line) return null\n  const list = []\n  line = line.trim()\n  line = line.substr(1, line.length - 2)\n  const split = line.split(' ')\n  shift = shift || 0\n\n  for (let i = 1; i < split.length; ++i) {\n    const value = parseInt(split[i])\n    if (!isNaN(value)) {\n      // eslint-disable-line\n      list.push(value + shift)\n    }\n  }\n\n  return list\n}\n\nfunction stripV30(line) {\n  /* reader */\n  if (line.slice(0, 7) !== 'M  V30 ') throw new Error('Prefix invalid')\n  return line.slice(7)\n}\n\nfunction labelsListToIds(labels) {\n  /* reader */\n  const ids = []\n  for (let i = 0; i < labels.length; ++i) {\n    const element = Elements.get(labels[i].trim())\n    if (element) {\n      ids.push(element.number)\n    }\n  }\n\n  return ids\n}\n\nexport default {\n  parseCTabV3000,\n  readRGroups3000,\n  parseRxn3000\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Pile, SGroup } from 'domain/entities'\n\nimport utils from './utils'\nimport v2000 from './v2000'\nimport v3000 from './v3000'\n\nconst loadRGroupFragments = true // TODO: set to load the fragments\n\n/* Parse Mol */\nfunction parseMol(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  if (ctabLines[0].search('\\\\$MDL') === 0) {\n    const struct = v2000.parseRg2000(ctabLines)\n    struct.name = ctabLines[3].trim()\n    return struct\n  }\n  const struct = parseCTab(ctabLines.slice(3))\n  struct.name = ctabLines[0].trim()\n  return struct\n}\n\nfunction parseCTab(/* string */ ctabLines) /* Struct */ {\n  /* reader */\n  const countsSplit = partitionLine(\n    ctabLines[0],\n    utils.fmtInfo.countsLinePartition\n  )\n  const version = countsSplit[11].trim()\n  ctabLines = ctabLines.slice(1)\n  if (version === 'V2000') {\n    return v2000.parseCTabV2000(ctabLines, countsSplit)\n  }\n  if (version === 'V3000') {\n    return v3000.parseCTabV3000(ctabLines, !loadRGroupFragments)\n  } else {\n    throw new Error('Molfile version unknown: ' + version)\n  }\n}\n\n/* Parse Rxn */\nfunction parseRxn(\n  /* string[] */ ctabLines,\n  shouldReactionRelayout\n) /* Struct */ {\n  /* reader */\n  const split = ctabLines[0].trim().split(' ')\n  if (split.length > 1 && split[1] === 'V3000') {\n    return v3000.parseRxn3000(ctabLines, shouldReactionRelayout)\n  }\n\n  const struct = v2000.parseRxn2000(ctabLines, shouldReactionRelayout)\n  struct.name = ctabLines[1].trim()\n  return struct\n}\n\n/* Prepare For Saving */\nconst prepareForSaving = {\n  MUL: SGroup.prepareMulForSaving,\n  SRU: prepareSruForSaving,\n  SUP: prepareSupForSaving,\n  DAT: prepareDatForSaving,\n  GEN: prepareGenForSaving\n}\n\nfunction prepareSruForSaving(sgroup, mol) {\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  if (xBonds.length !== 0 && xBonds.length !== 2) {\n    throw {\n      id: sgroup.id,\n      'error-type': 'cross-bond-number',\n      message: 'Unsupported cross-bonds number'\n    }\n  }\n  sgroup.bonds = xBonds\n}\n\nfunction prepareSupForSaving(sgroup, mol) {\n  // This code is also used for GroupSru and should be moved into a separate common method\n  // It seems that such code should be used for any sgroup by this this should be checked\n  const xBonds = []\n  mol.bonds.forEach((bond, bid) => {\n    const a1 = mol.atoms.get(bond.begin)\n    const a2 = mol.atoms.get(bond.end)\n    /* eslint-disable no-mixed-operators */\n    if (\n      (a1.sgs.has(sgroup.id) && !a2.sgs.has(sgroup.id)) ||\n      (a2.sgs.has(sgroup.id) && !a1.sgs.has(sgroup.id))\n    ) {\n      /* eslint-enable no-mixed-operators */\n      xBonds.push(bid)\n    }\n  }, sgroup)\n  sgroup.bonds = xBonds\n}\n\nfunction prepareGenForSaving(sgroup, mol) {\n  // eslint-disable-line no-unused-vars\n}\n\nfunction prepareDatForSaving(sgroup, mol) {\n  sgroup.atoms = SGroup.getAtoms(mol, sgroup)\n}\n\n/* Save To Molfile */\nconst saveToMolfile = {\n  MUL: saveMulToMolfile,\n  SRU: saveSruToMolfile,\n  SUP: saveSupToMolfile,\n  DAT: saveDatToMolfile,\n  GEN: saveGenToMolfile\n}\n\nfunction saveMulToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SAL',\n      idstr,\n      Array.from(sgroup.atomSet.values()),\n      atomMap\n    )\n  ) // TODO: check atomSet\n  lines = lines.concat(\n    makeAtomBondLines(\n      'SPA',\n      idstr,\n      Array.from(sgroup.parentAtomSet.values()),\n      atomMap\n    )\n  )\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  const smtLine = 'M  SMT ' + idstr + ' ' + sgroup.data.mul\n  lines.push(smtLine)\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSruToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction saveSupToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  if (sgroup.data.name && sgroup.data.name !== '') {\n    lines.push('M  SMT ' + idstr + ' ' + sgroup.data.name)\n  }\n  return lines.join('\\n')\n}\n\nfunction saveDatToMolfile(sgroup, mol, sgMap, atomMap) {\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  const data = sgroup.data\n  let pp = sgroup.pp\n  if (!data.absolute) pp = pp.sub(SGroup.getMassCentre(mol, sgroup.atoms))\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  let sdtLine =\n    'M  SDT ' +\n    idstr +\n    ' ' +\n    (data.fieldName || '').padEnd(30) +\n    (data.fieldType || '').padStart(2) +\n    (data.units || '').padEnd(20) +\n    (data.query || '').padStart(2)\n\n  if (data.queryOp) {\n    // see gitlab #184\n    sdtLine += data.queryOp.padEnd(80 - 65)\n  }\n\n  lines.push(sdtLine)\n  const sddLine =\n    'M  SDD ' +\n    idstr +\n    ' ' +\n    utils.paddedNum(pp.x, 10, 4) +\n    utils.paddedNum(-pp.y, 10, 4) +\n    '    ' + // ' eee'\n    (data.attached ? 'A' : 'D') + // f\n    (data.absolute ? 'A' : 'R') + // g\n    (data.showUnits ? 'U' : ' ') + // h\n    '   ' + //  i\n    (data.nCharnCharsToDisplay >= 0\n      ? utils.paddedNum(data.nCharnCharsToDisplay, 3)\n      : 'ALL') + // jjj\n    '  1   ' + // 'kkk ll '\n    (data.tagChar || ' ') + // m\n    '  ' +\n    utils.paddedNum(data.daspPos, 1) + // n\n    '  ' // oo\n  lines.push(sddLine)\n  const val = normalizeNewlines(data.fieldValue).replace(/\\n*$/, '')\n  const charsPerLine = 69\n  val.split('\\n').forEach((chars) => {\n    while (chars.length > charsPerLine) {\n      lines.push('M  SCD ' + idstr + ' ' + chars.slice(0, charsPerLine))\n      chars = chars.slice(charsPerLine)\n    }\n    lines.push('M  SED ' + idstr + ' ' + chars)\n  })\n  return lines.join('\\n')\n}\n\nfunction saveGenToMolfile(sgroup, mol, sgMap, atomMap, bondMap) {\n  // eslint-disable-line max-params\n  const idstr = (sgMap[sgroup.id] + '').padStart(3)\n\n  let lines = []\n  lines = lines.concat(makeAtomBondLines('SAL', idstr, sgroup.atoms, atomMap))\n  lines = lines.concat(makeAtomBondLines('SBL', idstr, sgroup.bonds, bondMap))\n  lines = lines.concat(bracketsToMolfile(mol, sgroup, idstr))\n  return lines.join('\\n')\n}\n\nfunction makeAtomBondLines(prefix, idstr, ids, map) {\n  if (!ids) return []\n  const lines = []\n  for (let i = 0; i < Math.floor((ids.length + 14) / 15); ++i) {\n    const rem = Math.min(ids.length - 15 * i, 15) // eslint-disable-line no-mixed-operators\n    let salLine = 'M  ' + prefix + ' ' + idstr + ' ' + utils.paddedNum(rem, 2)\n    for (let j = 0; j < rem; ++j) {\n      salLine += ' ' + utils.paddedNum(map[ids[i * 15 + j]], 3)\n    } // eslint-disable-line no-mixed-operators\n    lines.push(salLine)\n  }\n  return lines\n}\n\nfunction bracketsToMolfile(mol, sg, idstr) {\n  // eslint-disable-line max-statements\n  const atomSet = new Pile(sg.atoms)\n  const crossBonds = SGroup.getCrossBonds(mol, atomSet)\n  SGroup.bracketPos(sg, mol, crossBonds)\n  const bb = sg.bracketBox\n  const d = sg.bracketDir\n  const n = d.rotateSC(1, 0)\n  const brackets = SGroup.getBracketParameters(\n    mol,\n    crossBonds,\n    atomSet,\n    bb,\n    d,\n    n\n  )\n  const lines = []\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const a0 = bracket.c.addScaled(bracket.n, -0.5 * bracket.h).yComplement()\n    const a1 = bracket.c.addScaled(bracket.n, 0.5 * bracket.h).yComplement()\n    let line = 'M  SDI ' + idstr + utils.paddedNum(4, 3)\n    const coord = [a0.x, a0.y, a1.x, a1.y]\n    for (let j = 0; j < coord.length; ++j) {\n      line += utils.paddedNum(coord[j], 10, 4)\n    }\n    lines.push(line)\n  }\n  return lines\n}\n\n// According Unicode Consortium sould be\n// nlRe = /\\r\\n|[\\n\\v\\f\\r\\x85\\u2028\\u2029]/g;\n// http://www.unicode.org/reports/tr18/#Line_Boundaries\nconst nlRe = /\\r\\n|[\\n\\r]/g\nfunction normalizeNewlines(str) {\n  return str.replace(nlRe, '\\n')\n}\n\nfunction partitionLine(\n  /* string */ str,\n  /* array of int */ parts,\n  /* bool */ withspace\n) {\n  /* reader */\n  const res = []\n  for (let i = 0, shift = 0; i < parts.length; ++i) {\n    res.push(str.slice(shift, shift + parts[i]))\n    if (withspace) shift++\n    shift += parts[i]\n  }\n  return res\n}\n\nexport default {\n  parseCTab,\n  parseMol,\n  parseRxn,\n  prepareForSaving,\n  saveToMolfile\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { StereoFlag, Struct } from 'domain/entities'\n\nimport { Elements } from 'domain/constants'\nimport common from './common'\nimport utils from './utils'\n\nconst END_V2000 = '2D 1   1.00000     0.00000     0'\n\ntype Mapping = {\n  [key in number]: number\n}\ntype NumberTuple = [number, number]\n\nexport class Molfile {\n  molecule: Struct | null\n  molfile: string | null\n  reaction: boolean\n  mapping: Mapping\n  bondMapping: Mapping\n\n  constructor() {\n    this.molecule = null\n    this.molfile = null\n\n    this.reaction = false\n    this.mapping = {}\n    this.bondMapping = {}\n  }\n\n  parseCTFile(molfileLines: string[], shouldReactionRelayout?: boolean) {\n    let ret\n    if (molfileLines[0].search('\\\\$RXN') === 0) {\n      ret = common.parseRxn(molfileLines, shouldReactionRelayout)\n    } else {\n      ret = common.parseMol(molfileLines)\n    }\n    ret.initHalfBonds()\n    ret.initNeighbors()\n    ret.bindSGroupsToFunctionalGroups()\n\n    return ret\n  }\n\n  prepareSGroups(skipErrors: boolean, preserveIndigoDesc?: boolean) {\n    const mol = this.molecule\n    const toRemove: any[] = []\n    let errors = 0\n\n    this.molecule?.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const sgroup = mol!.sgroups.get(id)!\n        let errorIgnore = false\n\n        try {\n          common.prepareForSaving[sgroup.type](sgroup, mol)\n        } catch (ex: any) {\n          if (!skipErrors || typeof ex.id !== 'number') {\n            throw new Error(`Error: ${ex.message}`)\n          }\n          errorIgnore = true\n        }\n        /* eslint-disable no-mixed-operators */\n        if (\n          errorIgnore ||\n          (!preserveIndigoDesc &&\n            /^INDIGO_.+_DESC$/i.test(sgroup.data.fieldName))\n        ) {\n          errors += +errorIgnore\n          toRemove.push(sgroup.id)\n        }\n      }, this)\n\n    if (errors) {\n      throw new Error(\n        'Warning: ' +\n          errors +\n          ' invalid S-groups were detected. They will be omitted.'\n      )\n    }\n\n    for (let i = 0; i < toRemove.length; ++i) {\n      mol?.sGroupDelete(toRemove[i])\n    }\n  }\n\n  getCTab(molecule: Struct, rgroups?: Map<any, any>) {\n    /* saver */\n    this.molecule = molecule.clone()\n    this.prepareSGroups(false, false)\n    this.molfile = ''\n    this.writeCTab2000(rgroups)\n    return this.molfile\n  }\n\n  saveMolecule(\n    molecule: Struct,\n    skipSGroupErrors: boolean,\n    norgroups?: boolean,\n    preserveIndigoDesc?: boolean\n  ) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.reaction = molecule.hasRxnArrow()\n    this.molfile = '' + molecule.name\n    if (this.reaction) {\n      if (molecule.rgroups.size > 0) {\n        throw new Error(\n          'Reactions with r-groups are not supported at the moment'\n        )\n      }\n      const components = molecule.getComponents()\n\n      const reactants = components.reactants\n      const products = components.products\n      const all = reactants.concat(products)\n      this.molfile =\n        '$RXN\\n' +\n        molecule.name +\n        '\\n\\n\\n' +\n        utils.paddedNum(reactants.length, 3) +\n        utils.paddedNum(products.length, 3) +\n        utils.paddedNum(0, 3) +\n        '\\n'\n      for (let i = 0; i < all.length; ++i) {\n        const saver = new Molfile()\n        const submol = molecule.clone(all[i], null, true)\n        const molfile = saver.saveMolecule(submol, false, true)\n        this.molfile += '$MOL\\n' + molfile\n      }\n      return this.molfile\n    }\n\n    if (molecule.rgroups.size > 0) {\n      if (norgroups) {\n        molecule = molecule.getScaffold()\n      } else {\n        const scaffold = new Molfile().getCTab(\n          molecule.getScaffold(),\n          molecule.rgroups\n        )\n        this.molfile =\n          '$MDL  REV  1\\n$MOL\\n$HDR\\n' + molecule.name + '\\n\\n\\n$END HDR\\n'\n        this.molfile += '$CTAB\\n' + scaffold + '$END CTAB\\n'\n\n        molecule.rgroups.forEach((rg, rgid) => {\n          this.molfile += '$RGP\\n'\n          this.writePaddedNumber(rgid, 3)\n          this.molfile += '\\n'\n          rg.frags.forEach((fid) => {\n            const group = new Molfile().getCTab(molecule.getFragment(fid))\n            this.molfile += '$CTAB\\n' + group + '$END CTAB\\n'\n          })\n          this.molfile += '$END RGP\\n'\n        })\n        this.molfile += '$END MOL\\n'\n\n        return this.molfile\n      }\n    }\n\n    this.molecule = molecule.clone()\n\n    this.prepareSGroups(skipSGroupErrors, preserveIndigoDesc)\n\n    this.writeHeader()\n    this.writeCTab2000()\n\n    return this.molfile\n  }\n\n  writeHeader() {\n    /* saver */\n\n    const date = new Date()\n\n    this.writeCR() // TODO: write structure name\n    this.writeWhiteSpace(2)\n    this.write('Ketcher')\n    this.writeWhiteSpace()\n    this.writeCR(\n      (date.getMonth() + 1 + '').padStart(2) +\n        (date.getDate() + '').padStart(2) +\n        ((date.getFullYear() % 100) + '').padStart(2) +\n        (date.getHours() + '').padStart(2) +\n        (date.getMinutes() + '').padStart(2) +\n        END_V2000\n    )\n    this.writeCR()\n  }\n\n  write(str: string) {\n    /* saver */\n    this.molfile += str\n  }\n\n  writeCR(str?: string) {\n    /* saver */\n    if (arguments.length === 0) {\n      str = ''\n    }\n\n    this.molfile += str + '\\n'\n  }\n\n  writeWhiteSpace(length = 0) {\n    /* saver */\n    if (arguments.length === 0) {\n      length = 1\n    }\n\n    this.write(' '.repeat(Math.max(length, 0)))\n  }\n\n  writePadded(str: string, width: number) {\n    /* saver */\n    this.write(str)\n    this.writeWhiteSpace(width - str.length)\n  }\n\n  writePaddedNumber(number: number, width: number) {\n    /* saver */\n    const str = (number - 0).toString()\n\n    this.writeWhiteSpace(width - str.length)\n    this.write(str)\n  }\n\n  writePaddedFloat(number: string | number, width: number, precision: number) {\n    /* saver */\n    this.write(utils.paddedNum(number, width, precision))\n  }\n\n  writeCTab2000Header() {\n    /* saver */\n    this.writePaddedNumber(this.molecule!.atoms.size, 3)\n    this.writePaddedNumber(this.molecule!.bonds.size, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    const isAbsFlag = Array.from(this.molecule!.frags.values()).some((fr) =>\n      fr ? fr.enhancedStereoFlag === StereoFlag.Abs : false\n    )\n    this.writePaddedNumber(isAbsFlag ? 1 : 0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(999, 3)\n    this.writeCR(' V2000')\n  }\n\n  writeCTab2000(rgroups?: Map<any, any>) {\n    // eslint-disable-line max-statements\n    /* saver */\n    this.writeCTab2000Header()\n\n    this.mapping = {}\n    let i = 1\n\n    const atomsIds: number[] = []\n    const atomsProps: {\n      id: number\n      value: string\n    }[] = []\n    this.molecule!.atoms.forEach((atom, id) => {\n      let label = atom.label\n      if (atom.atomList != null) {\n        label = 'L'\n        atomsIds.push(id)\n      } else if (atom.pseudo) {\n        if (atom.pseudo.length > 3) {\n          label = 'A'\n          atomsProps.push({ id, value: `'${atom.pseudo}'` })\n        }\n      } else if (atom.alias) {\n        atomsProps.push({ id, value: atom.alias })\n      } else if (\n        !Elements.get(atom.label) &&\n        ['A', 'Q', 'X', '*', 'R#'].indexOf(atom.label) === -1\n      ) {\n        // search in generics?\n        label = 'C'\n        atomsProps.push({ id, value: atom.label })\n      }\n\n      this.writeAtom(atom, label)\n\n      this.mapping[id] = i++\n    }, this)\n\n    this.bondMapping = {}\n    i = 1\n    this.molecule!.bonds.forEach((bond, id) => {\n      this.bondMapping[id] = i++\n      this.writeBond(bond)\n    }, this)\n\n    while (atomsProps.length > 0) {\n      this.writeAtomProps(atomsProps[0])\n      atomsProps.splice(0, 1)\n    }\n\n    const chargeList: NumberTuple[] = []\n    const isotopeList: NumberTuple[] = []\n    const radicalList: NumberTuple[] = []\n    const rglabelList: NumberTuple[] = []\n    const rglogicList: string[] = []\n    const aplabelList: NumberTuple[] = []\n    const rbcountList: NumberTuple[] = []\n    const unsaturatedList: NumberTuple[] = []\n    const substcountList: NumberTuple[] = []\n\n    this.molecule!.atoms.forEach((atom, id) => {\n      if (atom.charge !== 0) {\n        chargeList.push([id, atom.charge])\n      }\n      if (atom.isotope !== 0) {\n        isotopeList.push([id, atom.isotope])\n      }\n      if (atom.radical !== 0) {\n        radicalList.push([id, atom.radical])\n      }\n      if (atom.rglabel != null && atom.label === 'R#') {\n        // TODO need to force rglabel=null when label is not 'R#'\n        for (let rgi = 0; rgi < 32; rgi++) {\n          if ((atom.rglabel as any) & (1 << rgi)) {\n            rglabelList.push([id, rgi + 1])\n          }\n        }\n      }\n      if (atom.attpnt != null) {\n        aplabelList.push([id, atom.attpnt])\n      }\n      if (atom.ringBondCount !== 0) {\n        rbcountList.push([id, atom.ringBondCount])\n      }\n      if (atom.substitutionCount !== 0) {\n        substcountList.push([id, atom.substitutionCount])\n      }\n      if (atom.unsaturatedAtom !== 0) {\n        unsaturatedList.push([id, atom.unsaturatedAtom])\n      }\n    })\n\n    if (rgroups) {\n      rgroups.forEach((rg, rgid) => {\n        if (rg.resth || rg.ifthen > 0 || rg.range.length > 0) {\n          const line =\n            '  1 ' +\n            utils.paddedNum(rgid, 3) +\n            ' ' +\n            utils.paddedNum(rg.ifthen, 3) +\n            ' ' +\n            utils.paddedNum(rg.resth ? 1 : 0, 3) +\n            '   ' +\n            rg.range\n          rglogicList.push(line)\n        }\n      })\n    }\n\n    this.writeAtomPropList('M  CHG', chargeList)\n    this.writeAtomPropList('M  ISO', isotopeList)\n    this.writeAtomPropList('M  RAD', radicalList)\n    this.writeAtomPropList('M  RGP', rglabelList)\n    for (let j = 0; j < rglogicList.length; ++j) {\n      this.write('M  LOG' + rglogicList[j] + '\\n')\n    }\n\n    this.writeAtomPropList('M  APO', aplabelList)\n    this.writeAtomPropList('M  RBC', rbcountList)\n    this.writeAtomPropList('M  SUB', substcountList)\n    this.writeAtomPropList('M  UNS', unsaturatedList)\n\n    if (atomsIds.length > 0) {\n      for (let j = 0; j < atomsIds.length; ++j) {\n        const atomId = atomsIds[j]\n        const atomList = this.molecule!.atoms.get(atomId)!.atomList!\n        this.write('M  ALS')\n        this.writePaddedNumber(atomId + 1, 4)\n        this.writePaddedNumber(atomList.ids.length, 3)\n        this.writeWhiteSpace()\n        this.write(atomList.notList ? 'T' : 'F')\n\n        const labelList = atomList.labelList()\n        for (let k = 0; k < labelList.length; ++k) {\n          this.writeWhiteSpace()\n          this.writePadded(labelList[k], 3)\n        }\n        this.writeCR()\n      }\n    }\n\n    const sgmap = {}\n    let cnt = 1\n    const sgmapback = {}\n    const sgorder = this.molecule!.sGroupForest.getSGroupsBFS()\n    sgorder.forEach((id) => {\n      sgmapback[cnt] = id\n      sgmap[id] = cnt++\n    })\n    for (let q = 1; q < cnt; ++q) {\n      // each group on its own\n      const id = sgmapback[q]\n      const sgroup = this.molecule!.sgroups.get(id)!\n      this.write('M  STY')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePadded(sgroup.type, 3)\n      this.writeCR()\n\n      // TODO: write subtype, M SST\n\n      this.write('M  SLB')\n      this.writePaddedNumber(1, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeWhiteSpace(1)\n      this.writePaddedNumber(q, 3)\n      this.writeCR()\n\n      const parentId = this.molecule!.sGroupForest.parent.get(id)!\n      if (parentId >= 0) {\n        this.write('M  SPL')\n        this.writePaddedNumber(1, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace(1)\n        this.writePaddedNumber(sgmap[parentId], 3)\n        this.writeCR()\n      }\n\n      // connectivity\n      if (sgroup.type === 'SRU' && sgroup.data.connectivity) {\n        const connectivity = ` ${q.toString().padStart(3)} ${(\n          sgroup.data.connectivity || ''\n        ).padEnd(3)}`\n\n        this.write('M  SCN')\n        this.writePaddedNumber(1, 3)\n        this.write(connectivity.toUpperCase())\n        this.writeCR()\n      }\n\n      if (sgroup.type === 'SRU') {\n        this.write('M  SMT ')\n        this.writePaddedNumber(q, 3)\n        this.writeWhiteSpace()\n        this.write(sgroup.data.subscript || 'n')\n        this.writeCR()\n      }\n\n      this.writeCR(\n        common.saveToMolfile[sgroup.type](\n          sgroup,\n          this.molecule,\n          sgmap,\n          this.mapping,\n          this.bondMapping\n        )\n      )\n    }\n\n    // TODO: write M  APO\n    // TODO: write M  AAL\n    // TODO: write M  RGP\n    // TODO: write M  LOG\n\n    const expandedGroups: number[] = []\n    this.molecule!.sgroups.forEach((sg) => {\n      if (sg.data.expanded) expandedGroups.push(sg.id + 1)\n    })\n\n    if (expandedGroups.length) {\n      const expandedGroupsLine = `M  SDS EXP  ${\n        expandedGroups.length\n      }   ${expandedGroups.join('   ')}`\n      this.writeCR(expandedGroupsLine)\n    }\n\n    this.writeCR('M  END')\n  }\n\n  private writeAtom(atom, atomLabel: string) {\n    this.writePaddedFloat(atom.pp.x, 10, 4)\n    this.writePaddedFloat(-atom.pp.y, 10, 4)\n    this.writePaddedFloat(atom.pp.z, 10, 4)\n    this.writeWhiteSpace()\n    this.writePadded(atomLabel, 3)\n    this.writePaddedNumber(0, 2)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.hCount === 'undefined') {\n      atom.hCount = 0\n    }\n    this.writePaddedNumber(atom.hCount, 3)\n\n    if (typeof atom.stereoCare === 'undefined') {\n      atom.stereoCare = 0\n    }\n    this.writePaddedNumber(atom.stereoCare, 3)\n\n    let number: number\n    if (atom.explicitValence < 0) {\n      number = 0\n    } else if (atom.explicitValence === 0) {\n      number = 15\n    } else {\n      number = atom.explicitValence\n    }\n    this.writePaddedNumber(number, 3)\n\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n    this.writePaddedNumber(0, 3)\n\n    if (typeof atom.aam === 'undefined') {\n      atom.aam = 0\n    }\n    this.writePaddedNumber(atom.aam, 3)\n\n    if (typeof atom.invRet === 'undefined') {\n      atom.invRet = 0\n    }\n    this.writePaddedNumber(atom.invRet, 3)\n\n    if (typeof atom.exactChangeFlag === 'undefined') {\n      atom.exactChangeFlag = 0\n    }\n    this.writePaddedNumber(atom.exactChangeFlag, 3)\n\n    this.writeCR()\n  }\n\n  private writeBond(bond) {\n    this.writePaddedNumber(this.mapping[bond.begin], 3)\n    this.writePaddedNumber(this.mapping[bond.end], 3)\n    this.writePaddedNumber(bond.type, 3)\n\n    if (typeof bond.stereo === 'undefined') {\n      bond.stereo = 0\n    }\n    this.writePaddedNumber(bond.stereo, 3)\n\n    this.writePadded(bond.xxx, 3)\n\n    if (typeof bond.topology === 'undefined') {\n      bond.topology = 0\n    }\n    this.writePaddedNumber(bond.topology, 3)\n\n    if (typeof bond.reactingCenterStatus === 'undefined') {\n      bond.reactingCenterStatus = 0\n    }\n    this.writePaddedNumber(bond.reactingCenterStatus, 3)\n\n    this.writeCR()\n  }\n\n  private writeAtomProps(props) {\n    this.write('A  ')\n    this.writePaddedNumber(props.id + 1, 3)\n    this.writeCR()\n    this.writeCR(props.value)\n  }\n\n  private writeAtomPropList(propId: string, values: NumberTuple[]) {\n    while (values.length > 0) {\n      const part: NumberTuple[] = []\n\n      while (values.length > 0 && part.length < 8) {\n        part.push(values[0])\n        values.splice(0, 1)\n      }\n\n      this.write(propId)\n      this.writePaddedNumber(part.length, 3)\n\n      part.forEach((value) => {\n        this.writeWhiteSpace()\n        this.writePaddedNumber(this.mapping[value[0]], 3)\n        this.writeWhiteSpace()\n        this.writePaddedNumber(value[1], 3)\n      })\n\n      this.writeCR()\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from './mol.types'\nimport { Molfile } from './molfile'\nimport { Serializer } from '../serializers.types'\nimport { Struct } from 'domain/entities'\n\nexport class MolSerializer implements Serializer<Struct> {\n  static DefaultOptions: MolSerializerOptions = {\n    badHeaderRecover: false,\n    ignoreErrors: false,\n    noRgroups: false,\n    preserveIndigoDesc: false,\n    reactionRelayout: false\n  }\n\n  readonly options: MolSerializerOptions\n\n  constructor(options?: Partial<MolSerializerOptions>) {\n    this.options = { ...MolSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(content: string): Struct {\n    const molfile = new Molfile()\n    const lines = content?.split(/\\r\\n|[\\n\\r]/g)\n    try {\n      return molfile.parseCTFile(lines, this.options.reactionRelayout)\n    } catch (ex) {\n      if (this.options.badHeaderRecover) {\n        try {\n          // check whether there's an extra empty line on top\n          // this often happens when molfile text is pasted into the dialog window\n          return molfile.parseCTFile(\n            lines.slice(1),\n            this.options.reactionRelayout\n          )\n        } catch (ex1) {\n          //\n        }\n        try {\n          // check for a missing first line\n          // this sometimes happens when pasting\n          return molfile.parseCTFile(\n            [''].concat(lines),\n            this.options.reactionRelayout\n          )\n        } catch (ex2) {\n          //\n        }\n      }\n      throw ex\n    }\n  }\n\n  serialize(struct: Struct): string {\n    return new Molfile().saveMolecule(\n      struct,\n      this.options.ignoreErrors,\n      this.options.noRgroups,\n      this.options.preserveIndigoDesc\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pool, Vec2 } from 'domain/entities'\n\nfunction CisTrans(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.bonds = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nCisTrans.PARITY = {\n  NONE: 0,\n  CIS: 1,\n  TRANS: 2\n}\n\nCisTrans.prototype.each = function (func) {\n  this.bonds.forEach(func)\n}\n\nCisTrans.prototype.getParity = function (idx) {\n  return this.bonds.get(idx).parity\n}\n\nCisTrans.prototype.getSubstituents = function (idx) {\n  return this.bonds.get(idx).substituents\n}\n\nCisTrans.prototype.sameside = function (beg, end, neiBeg, neiEnd) {\n  const diff = Vec2.diff(beg, end)\n  const norm = new Vec2(-diff.y, diff.x)\n\n  if (!norm.normalize()) return 0\n\n  const normBeg = Vec2.diff(neiBeg, beg)\n  const normEnd = Vec2.diff(neiEnd, end)\n\n  if (!normBeg.normalize()) return 0\n  if (!normEnd.normalize()) return 0\n\n  const prodBeg = Vec2.dot(normBeg, norm)\n  const prodEnd = Vec2.dot(normEnd, norm)\n\n  if (Math.abs(prodBeg) < 0.001 || Math.abs(prodEnd) < 0.001) return 0\n\n  return prodBeg * prodEnd > 0 ? 1 : -1\n}\n\nCisTrans.prototype.samesides = function (iBeg, iEnd, iNeiBeg, iNeiEnd) {\n  return this.sameside(\n    this.molecule.atoms.get(iBeg).pp,\n    this.molecule.atoms.get(iEnd).pp,\n    this.molecule.atoms.get(iNeiBeg).pp,\n    this.molecule.atoms.get(iNeiEnd).pp\n  )\n}\n\nCisTrans.prototype.sortSubstituents = function (substituents) {\n  // eslint-disable-line max-statements\n  const h0 = this.molecule.atoms.get(substituents[0]).pureHydrogen()\n  const h1 =\n    substituents[1] < 0 ||\n    this.molecule.atoms.get(substituents[1]).pureHydrogen()\n  const h2 = this.molecule.atoms.get(substituents[2]).pureHydrogen()\n  const h3 =\n    substituents[3] < 0 ||\n    this.molecule.atoms.get(substituents[3]).pureHydrogen()\n\n  if (h0 && h1) return false\n  if (h2 && h3) return false\n\n  if (h1) {\n    substituents[1] = -1\n  } else if (h0) {\n    substituents[0] = substituents[1]\n    substituents[1] = -1\n  } else if (substituents[0] > substituents[1]) {\n    swap(substituents, 0, 1)\n  }\n\n  if (h3) {\n    substituents[3] = -1\n  } else if (h2) {\n    substituents[2] = substituents[3]\n    substituents[3] = -1\n  } else if (substituents[2] > substituents[3]) {\n    swap(substituents, 2, 3)\n  }\n\n  return true\n}\n\nCisTrans.prototype.isGeomStereoBond = function (bondIdx, substituents) {\n  // eslint-disable-line max-statements\n  // it must be [C,N,Si]=[C,N,Si] bond\n  const bond = this.molecule.bonds.get(bondIdx)\n\n  if (bond.type !== Bond.PATTERN.TYPE.DOUBLE) return false\n\n  const label1 = this.molecule.atoms.get(bond.begin).label\n  const label2 = this.molecule.atoms.get(bond.end).label\n\n  if (label1 !== 'C' && label1 !== 'N' && label1 !== 'Si' && label1 !== 'Ge') {\n    return false\n  }\n  if (label2 !== 'C' && label2 !== 'N' && label2 !== 'Si' && label2 !== 'Ge') {\n    return false\n  }\n\n  // the atoms should have 1 or 2 single bonds\n  // (apart from the double bond under consideration)\n  const neiBegin = this.getNeighbors.call(this.context, bond.begin)\n  const neiEnd = this.getNeighbors.call(this.context, bond.end)\n\n  if (\n    neiBegin.length < 2 ||\n    neiBegin.length > 3 ||\n    neiEnd.length < 2 ||\n    neiEnd.length > 3\n  ) {\n    return false\n  }\n\n  substituents[0] = -1\n  substituents[1] = -1\n  substituents[2] = -1\n  substituents[3] = -1\n\n  let i\n  let nei\n\n  for (i = 0; i < neiBegin.length; i++) {\n    nei = neiBegin[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[0] === -1) substituents[0] = nei.aid\n    // (substituents[1] === -1)\n    else substituents[1] = nei.aid\n  }\n\n  for (i = 0; i < neiEnd.length; i++) {\n    nei = neiEnd[i]\n\n    if (nei.bid === bondIdx) continue // eslint-disable-line no-continue\n\n    if (this.molecule.bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE) {\n      return false\n    }\n\n    if (substituents[2] === -1) substituents[2] = nei.aid\n    // (substituents[3] == -1)\n    else substituents[3] = nei.aid\n  }\n\n  if (\n    substituents[1] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[0], substituents[1]) !==\n      -1\n  ) {\n    return false\n  }\n  if (\n    substituents[3] !== -1 &&\n    this.samesides(bond.begin, bond.end, substituents[2], substituents[3]) !==\n      -1\n  ) {\n    return false\n  }\n\n  return true\n}\n\nCisTrans.prototype.build = function (excludeBonds) {\n  this.molecule.bonds.forEach((bond, bid) => {\n    const ct = {\n      parity: 0,\n      substituents: []\n    }\n    this.bonds.set(bid, ct)\n\n    if (Array.isArray(excludeBonds) && excludeBonds[bid]) return\n\n    if (!this.isGeomStereoBond(bid, ct.substituents)) return\n\n    if (!this.sortSubstituents(ct.substituents)) return\n\n    const sign = this.samesides(\n      bond.begin,\n      bond.end,\n      ct.substituents[0],\n      ct.substituents[2]\n    )\n\n    if (sign === 1) ct.parity = CisTrans.PARITY.CIS\n    else if (sign === -1) ct.parity = CisTrans.PARITY.TRANS\n  })\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default CisTrans\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nfunction Dfs(mol, atomData, components, nReactants) {\n  this.molecule = mol\n  this.atom_data = atomData\n  this.components = components\n  this.nComponentsInReactants = -1\n  this.nReactants = nReactants\n\n  this.vertices = new Array(this.molecule.atoms.size) // Minimum size\n  this.molecule.atoms.forEach((atom, aid) => {\n    this.vertices[aid] = new Dfs.VertexDesc()\n  }, this)\n\n  this.edges = new Array(this.molecule.bonds.size) // Minimum size\n  this.molecule.bonds.forEach((bond, bid) => {\n    this.edges[bid] = new Dfs.EdgeDesc()\n  }, this)\n\n  this.v_seq = []\n}\n\nDfs.VertexDesc = function () {\n  this.dfs_state = 0 // 0 -- not on stack\n  // 1 -- on stack\n  // 2 -- removed from stack\n  this.parent_vertex = 0 // parent vertex in DFS tree\n  this.parent_edge = 0 // edge to parent vertex\n  this.branches = 0 // how many DFS branches go out from this vertex}\n}\n\nDfs.EdgeDesc = function () {\n  this.opening_cycles = 0 // how many cycles are\n  // (i) starting with this edge\n  // and (ii) ending in this edge's first vertex\n  this.closing_cycle = 0 // 1 if this edge closes a cycle\n}\n\nDfs.SeqElem = function (vIdx, parVertex, parEdge) {\n  this.idx = vIdx // index of vertex in _graph\n  this.parent_vertex = parVertex // parent vertex in DFS tree\n  this.parent_edge = parEdge // edge to parent vertex\n}\n\nDfs.prototype.walk = function () {\n  // eslint-disable-line max-statements\n  const vStack = []\n  let i, j\n  let cid = 0\n  let component = 0\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    if (vStack.length < 1) {\n      let selected = -1\n\n      while (cid < this.components.length && selected === -1) {\n        selected = this.components[cid].find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n        if (selected === null) {\n          selected = -1\n          cid++\n        }\n        if (cid === this.nReactants) this.nComponentsInReactants = component\n      }\n      if (selected < -1) {\n        this.molecule.atoms.find((aid) => {\n          if (this.vertices[aid].dfs_state === 0) {\n            selected = aid\n            return true\n          }\n          return false\n        })\n      }\n      if (selected === -1) break\n      this.vertices[selected].parent_vertex = -1\n      this.vertices[selected].parent_edge = -1\n      vStack.push(selected)\n      component++\n    }\n\n    const vIdx = vStack.pop()\n    const parentVertex = this.vertices[vIdx].parent_vertex\n\n    let seqElem = new Dfs.SeqElem(\n      vIdx,\n      parentVertex,\n      this.vertices[vIdx].parent_edge\n    )\n    this.v_seq.push(seqElem)\n\n    this.vertices[vIdx].dfs_state = 2\n\n    const atomD = this.atom_data[vIdx]\n\n    for (i = 0; i < atomD.neighbours.length; i++) {\n      const neiIdx = atomD.neighbours[i].aid\n      const edgeIdx = atomD.neighbours[i].bid\n\n      if (neiIdx === parentVertex) continue // eslint-disable-line no-continue\n\n      if (this.vertices[neiIdx].dfs_state === 2) {\n        this.edges[edgeIdx].closing_cycle = 1\n\n        j = vIdx\n\n        while (j !== -1 && this.vertices[j].parent_vertex !== neiIdx) {\n          j = this.vertices[j].parent_vertex\n        }\n\n        if (j === -1) throw new Error('cycle unwind error')\n\n        this.edges[this.vertices[j].parent_edge].opening_cycles++\n        this.vertices[vIdx].branches++\n\n        seqElem = new Dfs.SeqElem(neiIdx, vIdx, edgeIdx)\n        this.v_seq.push(seqElem)\n      } else {\n        if (this.vertices[neiIdx].dfs_state === 1) {\n          j = vStack.indexOf(neiIdx)\n\n          if (j === -1) {\n            // eslint-disable-line max-depth\n            throw new Error('internal: removing vertex from stack')\n          }\n\n          vStack.splice(j, 1)\n\n          const parent = this.vertices[neiIdx].parent_vertex\n\n          if (parent >= 0) {\n            // eslint-disable-line max-depth\n            this.vertices[parent].branches--\n          }\n        }\n\n        this.vertices[vIdx].branches++\n        this.vertices[neiIdx].parent_vertex = vIdx\n        this.vertices[neiIdx].parent_edge = edgeIdx\n        this.vertices[neiIdx].dfs_state = 1\n        vStack.push(neiIdx)\n      }\n    }\n  }\n}\n\nDfs.prototype.edgeClosingCycle = function (eIdx) {\n  return this.edges[eIdx].closing_cycle !== 0\n}\n\nDfs.prototype.numBranches = function (vIdx) {\n  return this.vertices[vIdx].branches\n}\n\nDfs.prototype.numOpeningCycles = function (eIdx) {\n  return this.edges[eIdx].opening_cycles\n}\n\nDfs.prototype.toString = function () {\n  let str = ''\n  this.v_seq.forEach((seqElem) => {\n    str += seqElem.idx + ' -> '\n  })\n  str += '*'\n  return str\n}\n\nexport default Dfs\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Pile, Pool, Vec2 } from 'domain/entities'\n\nfunction Stereocenters(mol, neighborsFunc, context) {\n  this.molecule = mol\n  this.atoms = new Pool()\n  this.getNeighbors = neighborsFunc\n  this.context = context\n}\n\nStereocenters.prototype.each = function (func, context) {\n  this.atoms.forEach(func, context)\n}\n\nStereocenters.prototype.buildFromBonds = function (\n  /* const int *atom_types, const int *atom_groups, const int *bond_orientations, */ ignoreErrors\n) {\n  const atoms = this.molecule.atoms\n  const bonds = this.molecule.bonds\n\n  /*\n\t\tthis is a set of atoms that are likely to belong to allene structures and\n\t\ttherefore should not be considered as potential stereocenters in the code below,\n\t\tas allenes cannot be encoded in the SMILES notation\n\t*/\n\n  const alleneMask = new Pile()\n  atoms.forEach((atom, aid) => {\n    const neiList = this.getNeighbors.call(this.context, aid)\n    if (neiList.length !== 2) return false\n    const nei1 = neiList[0]\n    const nei2 = neiList[1]\n    // check atom labels\n    if (\n      [aid, nei1.aid, nei2.aid].findIndex(\n        (aid) => ['C', 'Si'].indexOf(atoms.get(aid).label) < 0,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // check adjacent bond types\n    if (\n      [nei1.bid, nei2.bid].findIndex(\n        (bid) => bonds.get(bid).type !== Bond.PATTERN.TYPE.DOUBLE,\n        this\n      ) >= 0\n    ) {\n      return false\n    }\n\n    // get the other neighbors of the two adjacent atoms except for the central atom\n    const nei1nei = this.getNeighbors\n      .call(this.context, nei1.aid)\n      .filter((nei) => nei.aid !== aid)\n    const nei2nei = this.getNeighbors\n      .call(this.context, nei2.aid)\n      .filter((nei) => nei.aid !== aid)\n    if (\n      nei1nei.length < 1 ||\n      nei1nei.length > 2 ||\n      nei2nei.length < 1 ||\n      nei2nei.length > 2\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).type !== Bond.PATTERN.TYPE.SINGLE,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n\n    if (\n      nei1nei\n        .concat(nei2nei)\n        .findIndex(\n          (nei) => bonds.get(nei.bid).stereo === Bond.PATTERN.STEREO.EITHER,\n          this\n        ) >= 0\n    ) {\n      return false\n    }\n    alleneMask.add(nei1.aid).add(nei2.aid)\n    return true\n  })\n\n  if (alleneMask.size > 0) {\n    // TODO: add error handler call\n    // legacy message: This structure may contain allenes, which cannot be represented in the SMILES notation. Relevant stereo-information will be discarded.\n\n    atoms.forEach((atom, aid) => {\n      if (alleneMask.has(aid)) return\n      /*\n      if (atom_types[atom_idx] == 0)\n         continue;\n         */\n      const neiList = this.getNeighbors.call(this.context, aid)\n      let stereocenter = false\n\n      neiList.find(function (nei) {\n        const bond = this.molecule.bonds.get(nei.bid)\n\n        if (bond.type === Bond.PATTERN.TYPE.SINGLE && bond.begin === aid) {\n          if (\n            bond.stereo === Bond.PATTERN.STEREO.UP ||\n            bond.stereo === Bond.PATTERN.STEREO.DOWN\n          ) {\n            stereocenter = true\n            return true\n          }\n        }\n        return false\n      }, this)\n\n      if (!stereocenter) return\n\n      if (ignoreErrors) {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      } else {\n        this.buildOneCenter(\n          aid /* , atom_groups[atom_idx], atom_types[atom_idx], bond_orientations */\n        )\n      }\n    })\n  }\n}\n\nStereocenters.allowed_stereocenters = [\n  { elem: 'C', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'C', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'Si', charge: 0, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'N', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 4, n_double_bonds: 2, implicit_degree: 4 },\n  { elem: 'S', charge: 1, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'S', charge: 0, degree: 3, n_double_bonds: 1, implicit_degree: 3 },\n  { elem: 'P', charge: 0, degree: 3, n_double_bonds: 0, implicit_degree: 3 },\n  { elem: 'P', charge: 1, degree: 4, n_double_bonds: 0, implicit_degree: 4 },\n  { elem: 'P', charge: 0, degree: 4, n_double_bonds: 1, implicit_degree: 4 }\n]\n\nStereocenters.prototype.buildOneCenter = function (\n  atomIdx /* , int group, int type, const int *bond_orientations */\n) {\n  // eslint-disable-line max-statements\n  const atom = this.molecule.atoms.get(atomIdx)\n\n  const neiList = this.getNeighbors.call(this.context, atomIdx)\n  const degree = neiList.length\n  let implicitDegree = -1\n\n  const stereocenter = {\n    group: 0, // = group;\n    type: 0, // = type;\n    pyramid: []\n  }\n\n  const edgeIds = []\n\n  let lastAtomDir = 0\n  let nDoubleBonds = 0\n\n  stereocenter.pyramid[0] = -1\n  stereocenter.pyramid[1] = -1\n  stereocenter.pyramid[2] = -1\n  stereocenter.pyramid[3] = -1\n\n  let nPureHydrogens = 0\n\n  if (degree > 4) {\n    throw new Error('stereocenter with %d bonds are not supported' + degree)\n  }\n\n  neiList.forEach((nei, neiIdx) => {\n    const neiAtom = this.molecule.atoms.get(nei.aid)\n    const bond = this.molecule.bonds.get(nei.bid)\n    edgeIds[neiIdx] = {\n      edge_idx: nei.bid,\n      nei_idx: nei.aid,\n      rank: nei.aid,\n      vec: Vec2.diff(neiAtom.pp, atom.pp).yComplement()\n    }\n\n    if (neiAtom.pureHydrogen()) {\n      nPureHydrogens++\n      edgeIds[neiIdx].rank = 10000\n    } else if (neiAtom.label === 'H') {\n      edgeIds[neiIdx].rank = 5000\n    }\n\n    if (!edgeIds[neiIdx].vec.normalize()) throw new Error('zero bond length')\n\n    if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n      throw new Error('non-single bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      throw new Error('aromatic bonds not allowed near stereocenter')\n    } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) nDoubleBonds++\n  })\n\n  Stereocenters.allowed_stereocenters.find((as) => {\n    if (\n      as.elem === atom.label &&\n      as.charge === atom.charge &&\n      as.degree === degree &&\n      as.n_double_bonds === nDoubleBonds\n    ) {\n      implicitDegree = as.implicit_degree\n      return true\n    }\n    return false\n  })\n\n  if (implicitDegree === -1) {\n    throw new Error(\n      'unknown stereocenter configuration: ' +\n        atom.label +\n        ', charge ' +\n        atom.charge +\n        ', ' +\n        degree +\n        ' bonds (' +\n        nDoubleBonds +\n        ' double)'\n    )\n  }\n\n  if (degree === 4 && nPureHydrogens > 1) {\n    throw new Error(nPureHydrogens + ' hydrogens near stereocenter')\n  }\n\n  if (degree === 3 && implicitDegree === 4 && nPureHydrogens > 0) {\n    throw new Error(\n      'have hydrogen(s) besides implicit hydrogen near stereocenter'\n    )\n  }\n\n  if (degree === 4) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[2].rank > edgeIds[3].rank) swap(edgeIds, 2, 3)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n\n    var main1 = -1\n    let main2 = -1\n    var side1 = -1\n    var side2 = -1\n    var mainDir = 0\n\n    for (var neiIdx = 0; neiIdx < 4; neiIdx++) {\n      const stereo = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n      if (\n        stereo === Bond.PATTERN.STEREO.UP ||\n        stereo === Bond.PATTERN.STEREO.DOWN\n      ) {\n        main1 = neiIdx\n        mainDir = stereo\n        break\n      }\n    }\n\n    if (main1 === -1) {\n      throw new Error('none of 4 bonds going from stereocenter is stereobond')\n    }\n\n    let xyz1, xyz2\n\n    // find main2 as opposite to main1\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 1) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 1) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 2) % 4].vec,\n        edgeIds[(main1 + 3) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 2) % 4\n        side1 = (main1 + 1) % 4\n        side2 = (main1 + 3) % 4\n      }\n    }\n    if (main2 === -1) {\n      xyz1 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 1) % 4].vec\n      )\n      xyz2 = Stereocenters.xyzzy(\n        edgeIds[main1].vec,\n        edgeIds[(main1 + 3) % 4].vec,\n        edgeIds[(main1 + 2) % 4].vec\n      )\n\n      if (xyz1 + xyz2 === 3 || xyz1 + xyz2 === 12) {\n        main2 = (main1 + 3) % 4\n        side1 = (main1 + 2) % 4\n        side2 = (main1 + 1) % 4\n      }\n    }\n\n    if (main2 === -1) {\n      throw new Error('internal error: can not find opposite bond')\n    }\n\n    if (\n      mainDir === Bond.PATTERN.STEREO.UP &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.DOWN\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n    if (\n      mainDir === Bond.PATTERN.STEREO.DOWN &&\n      this.getBondStereo(atomIdx, edgeIds[main2].edge_idx) ===\n        Bond.PATTERN.STEREO.UP\n    ) {\n      throw new Error('stereo types of the opposite bonds mismatch')\n    }\n\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side1].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n    if (mainDir === this.getBondStereo(atomIdx, edgeIds[side2].edge_idx)) {\n      throw new Error('stereo types of non-opposite bonds match')\n    }\n\n    if (main1 === 3 || main2 === 3) lastAtomDir = mainDir\n    else {\n      lastAtomDir =\n        mainDir === Bond.PATTERN.STEREO.UP\n          ? Bond.PATTERN.STEREO.DOWN\n          : Bond.PATTERN.STEREO.UP\n    }\n\n    const sign = Stereocenters.sign(\n      edgeIds[0].vec,\n      edgeIds[1].vec,\n      edgeIds[2].vec\n    )\n\n    if (\n      (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n      (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n    ) {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[1].nei_idx\n      stereocenter.pyramid[2] = edgeIds[2].nei_idx\n    } else {\n      stereocenter.pyramid[0] = edgeIds[0].nei_idx\n      stereocenter.pyramid[1] = edgeIds[2].nei_idx\n      stereocenter.pyramid[2] = edgeIds[1].nei_idx\n    }\n\n    stereocenter.pyramid[3] = edgeIds[3].nei_idx\n  } else if (degree === 3) {\n    // sort by neighbor atom index (ascending)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n    if (edgeIds[1].rank > edgeIds[2].rank) swap(edgeIds, 1, 2)\n    if (edgeIds[0].rank > edgeIds[1].rank) swap(edgeIds, 0, 1)\n\n    const stereo0 = this.getBondStereo(atomIdx, edgeIds[0].edge_idx)\n    const stereo1 = this.getBondStereo(atomIdx, edgeIds[1].edge_idx)\n    const stereo2 = this.getBondStereo(atomIdx, edgeIds[2].edge_idx)\n\n    let nUp = 0\n    let nDown = 0\n\n    nUp += stereo0 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo1 === Bond.PATTERN.STEREO.UP ? 1 : 0\n    nUp += stereo2 === Bond.PATTERN.STEREO.UP ? 1 : 0\n\n    nDown += stereo0 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo1 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n    nDown += stereo2 === Bond.PATTERN.STEREO.DOWN ? 1 : 0\n\n    if (implicitDegree === 4) {\n      // have implicit hydrogen\n      if (nUp === 3) throw new Error('all 3 bonds up near stereoatom')\n      if (nDown === 3) throw new Error('all 3 bonds down near stereoatom')\n\n      if (nUp === 0 && nDown === 0) {\n        throw new Error('no up/down bonds near stereoatom -- indefinite case')\n      }\n      if (nUp === 1 && nDown === 1) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      }\n\n      mainDir = 0\n\n      if (nUp === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.DOWN\n      } else if (nDown === 2) {\n        lastAtomDir = Bond.PATTERN.STEREO.UP\n      } else {\n        main1 = -1\n        side1 = -1\n        side2 = -1\n\n        for (neiIdx = 0; neiIdx < 3; neiIdx++) {\n          const dir = this.getBondStereo(atomIdx, edgeIds[neiIdx].edge_idx)\n\n          if (\n            dir === Bond.PATTERN.STEREO.UP ||\n            dir === Bond.PATTERN.STEREO.DOWN\n          ) {\n            // eslint-disable-line max-depth\n            main1 = neiIdx\n            mainDir = dir\n            side1 = (neiIdx + 1) % 3\n            side2 = (neiIdx + 2) % 3\n            break\n          }\n        }\n\n        if (main1 === -1) {\n          throw new Error('internal error: can not find up or down bond')\n        }\n\n        const xyz = Stereocenters.xyzzy(\n          edgeIds[side1].vec,\n          edgeIds[side2].vec,\n          edgeIds[main1].vec\n        )\n\n        if (xyz === 3 || xyz === 4) {\n          throw new Error('degenerate case for 3 bonds near stereoatom')\n        }\n\n        if (xyz === 1) lastAtomDir = mainDir\n        else {\n          lastAtomDir =\n            mainDir === Bond.PATTERN.STEREO.UP\n              ? Bond.PATTERN.STEREO.DOWN\n              : Bond.PATTERN.STEREO.UP\n        }\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (\n        (lastAtomDir === Bond.PATTERN.STEREO.UP && sign > 0) ||\n        (lastAtomDir === Bond.PATTERN.STEREO.DOWN && sign < 0)\n      ) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      }\n\n      stereocenter.pyramid[3] = -1\n    } else {\n      // 3-connected P, N or S; no implicit hydrogens\n      var dir\n\n      if (nDown > 0 && nUp > 0) {\n        throw new Error('one bond up, one bond down -- indefinite case')\n      } else if (nDown === 0 && nUp === 0) {\n        throw new Error('no up-down bonds attached to stereocenter')\n      } else if (nUp > 0) dir = 1\n      else dir = -1\n\n      if (\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[1].vec, edgeIds[2].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[0].vec, edgeIds[2].vec, edgeIds[1].vec) ===\n          1 ||\n        Stereocenters.xyzzy(edgeIds[2].vec, edgeIds[1].vec, edgeIds[0].vec) ===\n          1\n      ) {\n        // all bonds belong to the same half-plane\n        dir = -dir\n      }\n\n      const sign = Stereocenters.sign(\n        edgeIds[0].vec,\n        edgeIds[1].vec,\n        edgeIds[2].vec\n      )\n\n      if (sign === dir) {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[2].nei_idx\n        stereocenter.pyramid[2] = edgeIds[1].nei_idx\n      } else {\n        stereocenter.pyramid[0] = edgeIds[0].nei_idx\n        stereocenter.pyramid[1] = edgeIds[1].nei_idx\n        stereocenter.pyramid[2] = edgeIds[2].nei_idx\n      }\n      stereocenter.pyramid[3] = -1\n    }\n  }\n  this.atoms.set(atomIdx, stereocenter)\n}\n\nStereocenters.prototype.getBondStereo = function (centerIdx, edgeIdx) {\n  const bond = this.molecule.bonds.get(edgeIdx)\n\n  if (centerIdx !== bond.begin) {\n    // TODO: check this\n    return 0\n  }\n\n  return bond.stereo\n}\n\n// 1 -- in the smaller angle, 2 -- in the bigger angle,\n// 4 -- in the 'positive' straight angle, 8 -- in the 'negative' straight angle\nStereocenters.xyzzy = function (v1, v2, u) {\n  const eps = 0.001\n\n  const sine1 = Vec2.cross(v1, v2)\n  const cosine1 = Vec2.dot(v1, v2)\n\n  const sine2 = Vec2.cross(v1, u)\n  const cosine2 = Vec2.dot(v1, u)\n\n  if (Math.abs(sine1) < eps) {\n    if (Math.abs(sine2) < eps) {\n      throw new Error('degenerate case -- bonds overlap')\n    }\n\n    return sine2 > 0 ? 4 : 8\n  }\n\n  if (sine1 * sine2 < -eps * eps) return 2\n\n  if (cosine2 < cosine1) return 2\n\n  return 1\n}\n\nStereocenters.sign = function (v1, v2, v3) {\n  const res = (v1.x - v3.x) * (v2.y - v3.y) - (v1.y - v3.y) * (v2.x - v3.x) // eslint-disable-line no-mixed-operators\n  const eps = 0.001\n\n  if (res > eps) return 1\n  if (res < -eps) return -1\n\n  throw new Error('degenerate triangle')\n}\n\nStereocenters.isPyramidMappingRigid = function (mapping) {\n  const arr = mapping.slice()\n  let rigid = true\n\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[2] > arr[3]) {\n    swap(arr, 2, 3)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n  if (arr[0] > arr[1]) {\n    swap(arr, 0, 1)\n    rigid = !rigid\n  }\n  if (arr[1] > arr[2]) {\n    swap(arr, 1, 2)\n    rigid = !rigid\n  }\n\n  return rigid\n}\n\nfunction swap(arr, i1, i2) {\n  const tmp = arr[i1]\n  arr[i1] = arr[i2]\n  arr[i2] = tmp\n}\n\nexport default Stereocenters\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, Pile, SGroup } from 'domain/entities'\n\nimport CisTrans from './cis_trans'\nimport Dfs from './dfs'\nimport Stereocenters from './stereocenters'\n\nexport function Smiles() {\n  this.smiles = ''\n  this.writtenAtoms = []\n  this.writtenComponents = 0\n\n  this.ignoreErrors = false\n}\n\nSmiles._Atom = function (hCount) {\n  // eslint-disable-line no-underscore-dangle\n  this.neighbours = [] // Array of integer pairs {a, b}\n  this.aromatic = false // has aromatic bond\n  this.lowercase = false // aromatic and has to be written lowercase\n  this.chirality = 0 // 0 means no chirality, 1 means CCW pyramid, 2 means CW pyramid\n  this.branch_cnt = 0 // runs from 0 to (branches - 1)\n  this.paren_written = false\n  this.h_count = hCount\n  this.parent = -1\n}\n\n// NB: only loops of length up to 6 are included here\nSmiles.prototype.isBondInRing = function (bid) {\n  return this.inLoop[bid]\n}\n\nSmiles.prototype.saveMolecule = function (struct, ignoreErrors) {\n  // eslint-disable-line max-statements\n  let i, j, k\n\n  if (!ignoreErrors) this.ignoreErrors = ignoreErrors\n\n  // [RB]: KETCHER-498 (Incorrect smile-string for multiple Sgroup)\n  // TODO the fix is temporary, still need to implement error handling/reporting\n  // BEGIN\n  struct = struct.clone(\n    undefined,\n    undefined,\n    !struct.hasRxnArrow(), // make it drop multiple reactions\n    undefined,\n    undefined,\n    undefined\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.sortNeighbors()\n  struct.setImplicitHydrogen()\n  struct.sgroups.forEach((sg) => {\n    if (sg.type === 'MUL') {\n      try {\n        SGroup.prepareMulForSaving(sg, struct)\n      } catch (ex) {\n        throw Error('Bad s-group (' + ex.message + ')')\n      }\n    }\n    // 'SMILES data format doesn\\'t support s-groups'\n  })\n  // END\n\n  this.atoms = new Array(struct.atoms.size)\n\n  struct.atoms.forEach((atom, aid) => {\n    this.atoms[aid] = new Smiles._Atom(atom.implicitH) // eslint-disable-line no-underscore-dangle\n  })\n\n  // From the SMILES specification:\n  // Please note that only atoms on the following list\n  // can be considered aromatic: C, N, O, P, S, As, Se, and * (wildcard).\n  const allowedLowercase = ['B', 'C', 'N', 'O', 'P', 'S', 'Se', 'As']\n\n  // Detect atoms that have aromatic bonds and count neighbours\n  struct.bonds.forEach((bond, bid) => {\n    if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n      this.atoms[bond.begin].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.begin).label) !== -1) {\n        this.atoms[bond.begin].lowercase = true\n      }\n      this.atoms[bond.end].aromatic = true\n      if (allowedLowercase.indexOf(struct.atoms.get(bond.end).label) !== -1) {\n        this.atoms[bond.end].lowercase = true\n      }\n    }\n    this.atoms[bond.begin].neighbours.push({ aid: bond.end, bid })\n    this.atoms[bond.end].neighbours.push({ aid: bond.begin, bid })\n  })\n\n  this.inLoop = (function () {\n    struct.prepareLoopStructure()\n    let bondsInLoops = new Pile()\n    struct.loops.forEach((loop) => {\n      if (loop.hbs.length <= 6) {\n        const hbids = loop.hbs.map((hbid) => struct.halfBonds.get(hbid).bid)\n        bondsInLoops = bondsInLoops.union(new Pile(hbids))\n      }\n    })\n    const inLoop = {}\n    bondsInLoops.forEach((bid) => {\n      inLoop[bid] = 1\n    })\n    return inLoop\n  })()\n\n  this.touchedCistransbonds = 0\n  this.markCisTrans(struct)\n\n  const components = struct.getComponents()\n  const componentsAll = components.reactants.concat(components.products)\n\n  const walk = new Dfs(\n    struct,\n    this.atoms,\n    componentsAll,\n    components.reactants.length\n  )\n\n  walk.walk()\n  this.atoms.forEach((atom) => {\n    atom.neighbours = []\n  })\n\n  // fill up neighbor lists for the stereocenters calculation\n  for (i = 0; i < walk.v_seq.length; i++) {\n    var seqEl = walk.v_seq[i]\n    var vIdx = seqEl.idx\n    var eIdx = seqEl.parent_edge\n    var vPrevIdx = seqEl.parent_vertex\n\n    if (eIdx >= 0) {\n      const atom = this.atoms[vIdx]\n\n      var openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        this.atoms[vPrevIdx].neighbours.push({ aid: -1, bid: -1 })\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (k = 0; k < atom.neighbours.length; k++) {\n          if (atom.neighbours[k].aid === -1) {\n            // eslint-disable-line max-depth\n            atom.neighbours[k].aid = vPrevIdx\n            atom.neighbours[k].bid = eIdx\n            break\n          }\n        }\n        if (k === atom.neighbours.length) {\n          throw new Error('internal: can not put closing bond to its place')\n        }\n      } else {\n        atom.neighbours.push({ aid: vPrevIdx, bid: eIdx })\n        atom.parent = vPrevIdx\n      }\n      this.atoms[vPrevIdx].neighbours.push({ aid: vIdx, bid: eIdx })\n    }\n  }\n\n  try {\n    // detect chiral configurations\n    const stereocenters = new Stereocenters(\n      struct,\n      function (idx) {\n        return this.atoms[idx].neighbours\n      },\n      this\n    )\n    stereocenters.buildFromBonds(this.ignoreErrors)\n\n    stereocenters.each((sc, atomIdx) => {\n      // eslint-disable-line max-statements\n      // if (sc.type < MoleculeStereocenters::ATOM_AND)\n      //    continue;\n\n      let implicitHIdx = -1\n\n      if (sc.pyramid[3] === -1) implicitHIdx = 3\n      /*\n\t\t\telse for (j = 0; j < 4; j++)\n\t\t\t\tif (ignored_vertices[pyramid[j]])\n\t\t\t\t{\n\t\t\t\t\timplicit_h_idx = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t*/\n\n      const pyramidMapping = []\n      let counter = 0\n\n      const atom = this.atoms[atomIdx]\n\n      if (atom.parent !== -1) {\n        for (k = 0; k < 4; k++) {\n          if (sc.pyramid[k] === atom.parent) {\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (implicitHIdx !== -1) pyramidMapping[counter++] = implicitHIdx\n\n      for (j = 0; j !== atom.neighbours.length; j++) {\n        if (atom.neighbours[j].aid === atom.parent) continue // eslint-disable-line no-continue\n\n        for (k = 0; k < 4; k++) {\n          if (atom.neighbours[j].aid === sc.pyramid[k]) {\n            if (counter >= 4) throw new Error('internal: pyramid overflow')\n            pyramidMapping[counter++] = k\n            break\n          }\n        }\n      }\n\n      if (counter === 4) {\n        // move the 'from' atom to the end\n        counter = pyramidMapping[0]\n        pyramidMapping[0] = pyramidMapping[1]\n        pyramidMapping[1] = pyramidMapping[2]\n        pyramidMapping[2] = pyramidMapping[3]\n        pyramidMapping[3] = counter\n      } else if (counter !== 3) {\n        throw new Error('cannot calculate chirality')\n      }\n\n      if (Stereocenters.isPyramidMappingRigid(pyramidMapping)) {\n        this.atoms[atomIdx].chirality = 1\n      } else this.atoms[atomIdx].chirality = 2\n    })\n  } catch (ex) {\n    // TODO: add error handler call\n  }\n\n  // write the SMILES itself\n\n  // cycle_numbers[i] == -1 means that the number is available\n  // cycle_numbers[i] == n means that the number is used by vertex n\n  const cycleNumbers = []\n\n  cycleNumbers.push(0) // never used\n\n  let firstComponent = true\n\n  for (i = 0; i < walk.v_seq.length; i++) {\n    seqEl = walk.v_seq[i]\n    vIdx = seqEl.idx\n    eIdx = seqEl.parent_edge\n    vPrevIdx = seqEl.parent_vertex\n    let writeAtom = true\n\n    if (vPrevIdx >= 0) {\n      if (walk.numBranches(vPrevIdx) > 1) {\n        if (\n          this.atoms[vPrevIdx].branch_cnt > 0 &&\n          this.atoms[vPrevIdx].paren_written\n        ) {\n          this.smiles += ')'\n        }\n      }\n\n      openingCycles = walk.numOpeningCycles(eIdx)\n\n      for (j = 0; j < openingCycles; j++) {\n        for (k = 1; k < cycleNumbers.length; k++) {\n          if (cycleNumbers[k] === -1) {\n            // eslint-disable-line max-depth\n            break\n          }\n        }\n        if (k === cycleNumbers.length) cycleNumbers.push(vPrevIdx)\n        else cycleNumbers[k] = vPrevIdx\n\n        this.writeCycleNumber(k)\n      }\n\n      if (vPrevIdx >= 0) {\n        const branches = walk.numBranches(vPrevIdx)\n\n        if (branches > 1 && this.atoms[vPrevIdx].branch_cnt < branches - 1) {\n          if (walk.edgeClosingCycle(eIdx)) {\n            // eslint-disable-line max-depth\n            this.atoms[vPrevIdx].paren_written = false\n          } else {\n            this.smiles += '('\n            this.atoms[vPrevIdx].paren_written = true\n          }\n        }\n\n        this.atoms[vPrevIdx].branch_cnt++\n\n        if (this.atoms[vPrevIdx].branch_cnt > branches) {\n          throw new Error('unexpected branch')\n        }\n      }\n\n      const bond = struct.bonds.get(eIdx)\n\n      let dir = 0\n\n      if (bond.type === Bond.PATTERN.TYPE.SINGLE) {\n        dir = this.calcBondDirection(struct, eIdx, vPrevIdx)\n      }\n\n      if (\n        (dir === 1 && vIdx === bond.end) ||\n        (dir === 2 && vIdx === bond.begin)\n      ) {\n        this.smiles += '/'\n      } else if (\n        (dir === 2 && vIdx === bond.end) ||\n        (dir === 1 && vIdx === bond.begin)\n      ) {\n        this.smiles += '\\\\'\n      } else if (bond.type === Bond.PATTERN.TYPE.ANY) {\n        this.smiles += '~'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE) {\n        this.smiles += '='\n      } else if (bond.type === Bond.PATTERN.TYPE.TRIPLE) {\n        this.smiles += '#'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n        this.smiles += '-,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n        this.smiles += '=,:'\n      } else if (bond.type === Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE) {\n        this.smiles += '-,='\n      } else if (\n        bond.type === Bond.PATTERN.TYPE.AROMATIC &&\n        (!this.atoms[bond.begin].lowercase ||\n          !this.atoms[bond.end].lowercase ||\n          !this.isBondInRing(eIdx))\n      ) {\n        this.smiles += ':'\n      }\n      // TODO: Check if this : is needed\n      else if (\n        bond.type === Bond.PATTERN.TYPE.SINGLE &&\n        this.atoms[bond.begin].aromatic &&\n        this.atoms[bond.end].aromatic\n      ) {\n        this.smiles += '-'\n      }\n\n      if (walk.edgeClosingCycle(eIdx)) {\n        for (j = 1; j < cycleNumbers.length; j++) {\n          if (cycleNumbers[j] === vIdx) break\n        }\n\n        if (j === cycleNumbers.length) throw new Error('cycle number not found')\n\n        this.writeCycleNumber(j)\n\n        cycleNumbers[j] = -1\n        writeAtom = false\n      }\n    } else {\n      if (!firstComponent) {\n        this.smiles +=\n          this.writtenComponents === walk.nComponentsInReactants &&\n          walk.nReactants !== 0\n            ? '>>'\n            : '.' // when walk.nReactants === 0 - not reaction\n      }\n      firstComponent = false\n      this.writtenComponents++\n    }\n    if (writeAtom) {\n      this.writeAtom(\n        struct,\n        vIdx,\n        this.atoms[vIdx].aromatic,\n        this.atoms[vIdx].lowercase,\n        this.atoms[vIdx].chirality\n      )\n      this.writtenAtoms.push(seqEl.idx)\n    }\n  }\n\n  this.comma = false\n\n  // this._writeStereogroups(mol, atoms);\n  this.writeRadicals(struct)\n  // this._writePseudoAtoms(mol);\n  // this._writeHighlighting();\n\n  if (this.comma) this.smiles += '|'\n\n  return this.smiles\n}\n\nSmiles.prototype.writeCycleNumber = function (n) {\n  if (n > 0 && n < 10) this.smiles += n\n  else if (n >= 10 && n < 100) this.smiles += '%' + n\n  else if (n >= 100 && n < 1000) this.smiles += '%%' + n\n  else throw new Error('bad cycle number: ' + n)\n}\n\nSmiles.prototype.writeAtom = function (\n  mol,\n  idx,\n  aromatic,\n  lowercase,\n  chirality\n) {\n  // eslint-disable-line max-params, max-statements\n  const atom = mol.atoms.get(idx)\n  let needBrackets = false\n  let hydro = -1\n  let aam = 0\n\n  /*\n\tif (mol.haveQueryAtoms())\n\t{\n\t  query_atom = &mol.getQueryAtom(idx);\n\n\t  if (query_atom->type == QUERY_ATOM_RGROUP)\n\t  {\n\t\t if (mol.getRGroups()->isRGroupAtom(idx))\n\t\t {\n\t\t\tconst Array<int> &rg = mol.getRGroups()->getSiteRGroups(idx);\n\n\t\t\tif (rg.length != 1)\n\t\t\t   throw Error(\"rgroup count %d\", rg.length);\n\n\t\t\t_output.printf(\"[&%d]\", rg[0] + 1);\n\t\t }\n\t\t else\n\t\t\t_output.printf(\"[&%d]\", 1);\n\n\t\t return;\n\t  }\n\t}\n\t*/\n\n  if (atom.label === 'A') {\n    this.smiles += '*'\n    return\n  }\n\n  if (atom.label === 'R' || atom.label === 'R#') {\n    this.smiles += '[*]'\n    return\n  }\n\n  // KETCHER-598 (Ketcher does not save AAM into reaction SMILES)\n  // BEGIN\n  //    if (this.atom_atom_mapping)\n  //        aam = atom_atom_mapping[idx];\n  aam = atom.aam\n  // END\n\n  if (\n    atom.label !== 'C' &&\n    atom.label !== 'P' &&\n    atom.label !== 'N' &&\n    atom.label !== 'S' &&\n    atom.label !== 'O' &&\n    atom.label !== 'Cl' &&\n    atom.label !== 'F' &&\n    atom.label !== 'Br' &&\n    atom.label !== 'B' &&\n    atom.label !== 'I'\n  ) {\n    needBrackets = true\n  }\n\n  if (\n    atom.explicitValence >= 0 ||\n    atom.radical !== 0 ||\n    chirality > 0 ||\n    (aromatic && atom.label !== 'C' && atom.label !== 'O') ||\n    (aromatic &&\n      atom.label === 'C' &&\n      this.atoms[idx].neighbours.length < 3 &&\n      this.atoms[idx].h_count === 0)\n  ) {\n    hydro = this.atoms[idx].h_count\n  }\n\n  let label = atom.label\n  if (atom.atomList && !atom.atomList.notList) {\n    label = atom.atomList.label()\n    needBrackets = false // atom list label already has brackets\n  } else if (atom.isPseudo() || (atom.atomList && atom.atomList.notList)) {\n    label = '*'\n    needBrackets = false\n  } else if (\n    chirality ||\n    atom.charge !== 0 ||\n    atom.isotope > 0 ||\n    hydro >= 0 ||\n    aam > 0\n  ) {\n    needBrackets = true\n  }\n\n  if (needBrackets) {\n    if (hydro === -1) hydro = this.atoms[idx].h_count\n    this.smiles += '['\n  }\n\n  if (atom.isotope > 0) this.smiles += atom.isotope\n\n  if (lowercase) this.smiles += label.toLowerCase()\n  else this.smiles += label\n\n  if (chirality > 0) {\n    if (chirality === 1) this.smiles += '@'\n    // chirality == 2\n    else this.smiles += '@@'\n\n    if (atom.implicitH > 1) {\n      throw new Error(atom.implicitH + ' implicit H near stereocenter')\n    }\n  }\n\n  if (atom.label !== 'H') {\n    if (hydro > 1 || (hydro === 0 && !needBrackets)) this.smiles += 'H' + hydro\n    else if (hydro === 1) this.smiles += 'H'\n  }\n\n  if (atom.charge > 1) this.smiles += '+' + atom.charge\n  else if (atom.charge < -1) this.smiles += atom.charge\n  else if (atom.charge === 1) this.smiles += '+'\n  else if (atom.charge === -1) this.smiles += '-'\n\n  if (aam > 0) this.smiles += ':' + aam\n\n  if (needBrackets) this.smiles += ']'\n\n  /*\n\tif (mol.getRGroupFragment() != 0)\n\t{\n\t  for (i = 0; i < 2; i++)\n\t  {\n\t\t int j;\n\n\t\t for (j = 0; mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1; j++)\n\t\t\tif (idx == mol.getRGroupFragment()->getAttachmentPoint(i, j))\n\t\t\t{\n\t\t\t   _output.printf(\"([*])\");\n\t\t\t   break;\n\t\t\t}\n\n\t\t if (mol.getRGroupFragment()->getAttachmentPoint(i, j) != -1)\n\t\t\tbreak;\n\t  }\n\t}\n\t*/\n}\n\nSmiles.prototype.markCisTrans = function (mol) {\n  this.cis_trans = new CisTrans(\n    mol,\n    function (idx) {\n      return this.atoms[idx].neighbours\n    },\n    this\n  )\n  this.cis_trans.build()\n  this.dbonds = new Array(mol.bonds.size)\n\n  mol.bonds.forEach((bond, bid) => {\n    this.dbonds[bid] = {\n      ctbond_beg: -1,\n      ctbond_end: -1,\n      saved: 0\n    }\n  })\n\n  this.cis_trans.each((ct, bid) => {\n    const bond = mol.bonds.get(bid)\n\n    if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n      const neiBeg = this.atoms[bond.begin].neighbours\n      const neiEnd = this.atoms[bond.end].neighbours\n      let aromFailBeg = true\n      let aromFailEnd = true\n\n      neiBeg.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailBeg = false\n        }\n      })\n\n      neiEnd.forEach((nei) => {\n        if (\n          nei.bid !== bid &&\n          mol.bonds.get(nei.bid).type === Bond.PATTERN.TYPE.SINGLE\n        ) {\n          aromFailEnd = false\n        }\n      })\n\n      if (aromFailBeg || aromFailEnd) return\n\n      neiBeg.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.begin) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n\n      neiEnd.forEach((nei) => {\n        if (nei.bid === bid) return\n        if (mol.bonds.get(nei.bid).begin === bond.end) {\n          this.dbonds[nei.bid].ctbond_beg = bid\n        } else this.dbonds[nei.bid].ctbond_end = bid\n      })\n    }\n  })\n}\n\nSmiles.prototype.updateSideBonds = function (mol, bondIdx) {\n  // eslint-disable-line max-statements\n  const bond = mol.bonds.get(bondIdx)\n  const subst = this.cis_trans.getSubstituents(bondIdx)\n  const parity = this.cis_trans.getParity(bondIdx)\n\n  const sidebonds = [-1, -1, -1, -1]\n\n  sidebonds[0] = mol.findBondId(subst[0], bond.begin)\n  if (subst[1] !== -1) sidebonds[1] = mol.findBondId(subst[1], bond.begin)\n\n  sidebonds[2] = mol.findBondId(subst[2], bond.end)\n  if (subst[3] !== -1) sidebonds[3] = mol.findBondId(subst[3], bond.end)\n\n  let n1 = 0\n  let n2 = 0\n  let n3 = 0\n  let n4 = 0\n\n  if (this.dbonds[sidebonds[0]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[0]].saved === 1 &&\n        mol.bonds.get(sidebonds[0]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[0]].saved === 2 &&\n        mol.bonds.get(sidebonds[0]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (sidebonds[1] !== -1 && this.dbonds[sidebonds[1]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[1]].saved === 2 &&\n        mol.bonds.get(sidebonds[1]).begin === bond.begin) ||\n      (this.dbonds[sidebonds[1]].saved === 1 &&\n        mol.bonds.get(sidebonds[1]).end === bond.begin)\n    ) {\n      n1++\n    } else n2++\n  }\n  if (this.dbonds[sidebonds[2]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[2]].saved === 1 &&\n        mol.bonds.get(sidebonds[2]).begin === bond.end) ||\n      (this.dbonds[sidebonds[2]].saved === 2 &&\n        mol.bonds.get(sidebonds[2]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n  if (sidebonds[3] !== -1 && this.dbonds[sidebonds[3]].saved !== 0) {\n    if (\n      (this.dbonds[sidebonds[3]].saved === 2 &&\n        mol.bonds.get(sidebonds[3]).begin === bond.end) ||\n      (this.dbonds[sidebonds[3]].saved === 1 &&\n        mol.bonds.get(sidebonds[3]).end === bond.end)\n    ) {\n      n3++\n    } else n4++\n  }\n\n  if (parity === CisTrans.PARITY.CIS) {\n    n1 += n3\n    n2 += n4\n  } else {\n    n1 += n4\n    n2 += n3\n  }\n\n  if (n1 > 0 && n2 > 0) throw new Error('incompatible cis-trans configuration')\n\n  if (n1 === 0 && n2 === 0) return false\n\n  if (n1 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 1 : 2\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 2 : 1\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 1\n        : 2\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 2\n          : 1\n    }\n  }\n  if (n2 > 0) {\n    this.dbonds[sidebonds[0]].saved =\n      mol.bonds.get(sidebonds[0]).begin === bond.begin ? 2 : 1\n    if (sidebonds[1] !== -1) {\n      this.dbonds[sidebonds[1]].saved =\n        mol.bonds.get(sidebonds[1]).begin === bond.begin ? 1 : 2\n    }\n\n    this.dbonds[sidebonds[2]].saved =\n      (mol.bonds.get(sidebonds[2]).begin === bond.end) ===\n      (parity === CisTrans.PARITY.CIS)\n        ? 2\n        : 1\n    if (sidebonds[3] !== -1) {\n      this.dbonds[sidebonds[3]].saved =\n        (mol.bonds.get(sidebonds[3]).begin === bond.end) ===\n        (parity === CisTrans.PARITY.CIS)\n          ? 1\n          : 2\n    }\n  }\n\n  return true\n}\n\nSmiles.prototype.calcBondDirection = function (mol, idx, vprev) {\n  let ntouched\n\n  if (\n    this.dbonds[idx].ctbond_beg === -1 &&\n    this.dbonds[idx].ctbond_end === -1\n  ) {\n    return 0\n  }\n\n  if (mol.bonds.get(idx).type !== Bond.PATTERN.TYPE.SINGLE) {\n    throw new Error('internal: directed bond type ' + mol.bonds.get(idx).type)\n  }\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    ntouched = 0\n    this.cis_trans.each((ct, bid) => {\n      if (ct.parity !== 0 && !this.isBondInRing(bid)) {\n        if (this.updateSideBonds(mol, bid)) ntouched++\n      }\n    })\n    if (ntouched === this.touchedCistransbonds) break\n    this.touchedCistransbonds = ntouched\n  }\n\n  if (this.dbonds[idx].saved === 0) {\n    if (vprev === mol.bonds.get(idx).begin) this.dbonds[idx].saved = 1\n    else this.dbonds[idx].saved = 2\n  }\n\n  return this.dbonds[idx].saved\n}\n\nSmiles.prototype.writeRadicals = function (mol) {\n  // eslint-disable-line max-statements\n  const marked = new Array(this.writtenAtoms.length)\n  let i, j\n\n  for (i = 0; i < this.writtenAtoms.length; i++) {\n    if (marked[i]) continue // eslint-disable-line no-continue\n\n    const radical = mol.atoms.get(this.writtenAtoms[i]).radical\n\n    if (radical === 0) continue // eslint-disable-line no-continue\n\n    if (this.comma) {\n      this.smiles += ','\n    } else {\n      this.smiles += ' |'\n      this.comma = true\n    }\n\n    if (radical === Atom.PATTERN.RADICAL.SINGLET) this.smiles += '^3:'\n    else if (radical === Atom.PATTERN.RADICAL.DOUPLET) this.smiles += '^1:'\n    // RADICAL_TRIPLET\n    else this.smiles += '^4:'\n\n    this.smiles += i\n\n    for (j = i + 1; j < this.writtenAtoms.length; j++) {\n      if (mol.atoms.get(this.writtenAtoms[j]).radical === radical) {\n        marked[j] = true\n        this.smiles += ',' + j\n      }\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Serializer } from '../serializers.types'\nimport { SmiSerializerOptions } from './smi.types'\nimport { Smiles } from './smiles'\nimport { Struct } from 'domain/entities'\n\nexport class SmiSerializer implements Serializer<Struct> {\n  static DefaultOptions: SmiSerializerOptions = {\n    ignoreErrors: false\n  }\n\n  private readonly options: SmiSerializerOptions\n\n  constructor(options?: Partial<SmiSerializerOptions>) {\n    this.options = { ...SmiSerializer.DefaultOptions, ...options }\n  }\n\n  deserialize(_content: string): Struct {\n    throw new Error('Not implemented yet.')\n  }\n\n  serialize(struct: Struct): string {\n    return new Smiles().saveMolecule(struct, this.options.ignoreErrors)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SdfItem, StructAssociatedData } from './sdf.types'\n\nimport { MolSerializer } from '../mol/molSerializer'\nimport { Serializer } from '../serializers.types'\n\nconst DelimeterRegex = /^[^]+?\\$\\$\\$\\$$/gm\nexport class SdfSerializer implements Serializer<Array<SdfItem>> {\n  deserialize(content: string): Array<SdfItem> {\n    let m: any\n    const result: Array<SdfItem> = []\n    const molSerializer = new MolSerializer()\n    while ((m = DelimeterRegex.exec(content)) !== null) {\n      const chunk = m[0].replace(/\\r/g, '').trim() // TODO: normalize newline?\n      const end = chunk.indexOf('M  END')\n      if (end !== -1) {\n        const propChunks: any = chunk\n          .substr(end + 7)\n          .trim()\n          .split(/^$\\n?/m)\n\n        const struct = molSerializer.deserialize(chunk.substring(0, end + 6))\n        const props = propChunks.reduce(\n          (acc: StructAssociatedData, pc: string) => {\n            const m = pc.match(/^> [ \\d]*<(\\S+)>/)\n            if (m) {\n              const field = m[1]\n              const value = pc.split('\\n')[1].trim()\n              acc[field] = Number.isFinite(value) ? +value : value.toString() // eslint-disable-line\n            }\n            return acc\n          },\n          {} as StructAssociatedData\n        )\n\n        result.push({ struct, props })\n      }\n    }\n    return result\n  }\n\n  serialize(sdfItems: Array<SdfItem>): string {\n    const molSerializer = new MolSerializer()\n    return sdfItems.reduce((res, item) => {\n      res += molSerializer.serialize(item.struct)\n\n      Object.keys(item.props).forEach((prop) => {\n        res += `> <${prop}>\\n`\n        res += `${item.props[prop]}\\n\\n`\n      })\n\n      return `${res}$$$$\\n`\n    }, '')\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum ChemicalMimeType {\n  Mol = 'chemical/x-mdl-molfile',\n  Rxn = 'chemical/x-mdl-rxnfile',\n  DaylightSmiles = 'chemical/x-daylight-smiles',\n  ExtendedSmiles = 'chemical/x-chemaxon-cxsmiles',\n  DaylightSmarts = 'chemical/x-daylight-smarts',\n  InChI = 'chemical/x-inchi',\n  InChIAuxInfo = 'chemical/x-inchi-aux',\n  CDX = 'chemical/x-cdx',\n  CDXML = 'chemical/x-cdxml',\n  CML = 'chemical/x-cml',\n  KET = 'chemical/x-indigo-ket',\n  UNKNOWN = 'chemical/x-unknown'\n}\n\nexport interface WithStruct {\n  struct: string\n}\n\nexport interface WithFormat {\n  format: ChemicalMimeType\n}\n\nexport interface WithOutputFormat {\n  output_format: ChemicalMimeType\n}\n\nexport interface WithSelection {\n  selected?: Array<number>\n}\n\nexport type CheckTypes =\n  | 'radicals'\n  | 'pseudoatoms'\n  | 'stereo'\n  | 'query'\n  | 'overlapping_atoms'\n  | 'overlapping_bonds'\n  | 'rgroups'\n  | 'chiral'\n  | '3d'\n  | 'chiral_flag'\n  | 'valence'\n\nexport interface CheckData extends WithStruct {\n  types: Array<CheckTypes>\n}\n\nexport interface CheckResult {\n  [key: string]: string\n}\n\nexport interface ConvertData extends WithStruct, WithOutputFormat {}\n\nexport interface ConvertResult extends WithStruct, WithFormat {}\n\nexport interface LayoutData extends WithStruct, WithOutputFormat {}\n\nexport interface LayoutResult extends WithStruct, WithFormat {}\n\nexport interface CleanData\n  extends WithStruct,\n    WithSelection,\n    WithOutputFormat {}\n\nexport interface CleanResult extends WithStruct, WithFormat {}\n\nexport interface AromatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface AromatizeResult extends WithStruct, WithFormat {}\n\nexport interface DearomatizeData extends WithStruct, WithOutputFormat {}\n\nexport interface DearomatizeResult extends WithStruct, WithFormat {}\n\nexport interface CalculateCipData extends WithStruct, WithOutputFormat {}\n\nexport interface CalculateCipResult extends WithStruct, WithFormat {}\n\nexport type CalculateProps =\n  | 'molecular-weight'\n  | 'most-abundant-mass'\n  | 'monoisotopic-mass'\n  | 'gross'\n  | 'mass-composition'\n\nexport interface CalculateData extends WithStruct, WithSelection {\n  properties: Array<CalculateProps>\n}\n\nexport type CalculateResult = Record<CalculateProps, string | number | boolean>\n\nexport type AutomapMode = 'discard' | 'keep' | 'alter' | 'clear'\n\nexport interface AutomapData extends WithStruct, WithOutputFormat {\n  mode: AutomapMode\n}\n\nexport interface AutomapResult extends WithStruct, WithFormat {}\n\nexport interface InfoResult {\n  indigoVersion: string\n  imagoVersions: Array<string>\n  isAvailable: boolean\n}\n\nexport interface RecognizeResult extends WithStruct, WithOutputFormat {}\n\nexport interface StructServiceOptions {\n  [key: string]: string | number | boolean | undefined\n}\n\nexport type OutputFormatType = 'png' | 'svg'\nexport interface GenerateImageOptions extends StructServiceOptions {\n  outputFormat: OutputFormatType\n  backgroundColor?: string\n}\n\nexport interface StructService {\n  info: () => Promise<InfoResult>\n  convert: (\n    data: ConvertData,\n    options?: StructServiceOptions\n  ) => Promise<ConvertResult>\n  layout: (\n    data: LayoutData,\n    options?: StructServiceOptions\n  ) => Promise<LayoutResult>\n  clean: (\n    data: CleanData,\n    options?: StructServiceOptions\n  ) => Promise<CleanResult>\n  aromatize: (\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ) => Promise<AromatizeResult>\n  dearomatize: (\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ) => Promise<DearomatizeResult>\n  calculateCip: (\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateCipResult>\n  automap: (\n    data: AutomapData,\n    options?: StructServiceOptions\n  ) => Promise<AutomapResult>\n  check: (\n    data: CheckData,\n    options?: StructServiceOptions\n  ) => Promise<CheckResult>\n  calculate: (\n    data: CalculateData,\n    options?: StructServiceOptions\n  ) => Promise<CalculateResult>\n  recognize: (blob: Blob, version: string) => Promise<RecognizeResult>\n  generateInchIKey: (struct: string) => Promise<string>\n  generateImageAsBase64: (\n    data: string,\n    options?: GenerateImageOptions\n  ) => Promise<string>\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AromatizeData,\n  AromatizeResult,\n  AutomapData,\n  AutomapResult,\n  CalculateCipData,\n  CalculateCipResult,\n  CalculateData,\n  CalculateResult,\n  CheckData,\n  CheckResult,\n  CleanData,\n  CleanResult,\n  ConvertData,\n  ConvertResult,\n  DearomatizeData,\n  DearomatizeResult,\n  GenerateImageOptions,\n  InfoResult,\n  LayoutData,\n  LayoutResult,\n  OutputFormatType,\n  RecognizeResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\n\nfunction pollDeferred(process, complete, timeGap, startTimeGap) {\n  return new Promise((resolve, reject) => {\n    function iterate() {\n      process().then(\n        (val) => {\n          try {\n            if (complete(val)) resolve(val)\n            else setTimeout(iterate, timeGap)\n          } catch (e) {\n            reject(e)\n          }\n        },\n        (err) => reject(err)\n      )\n    }\n    setTimeout(iterate, startTimeGap || 0)\n  })\n}\n\nfunction parametrizeUrl(url, params) {\n  return url.replace(/:(\\w+)/g, (_, val) => params[val])\n}\n\nfunction request(\n  method: string,\n  url: string,\n  data?: any,\n  headers?: any,\n  responseHandler?: (promise: Promise<any>) => Promise<any>\n) {\n  let requestUrl = url\n  if (data && method === 'GET') requestUrl = parametrizeUrl(url, data)\n  let response: any = fetch(requestUrl, {\n    method,\n    headers: Object.assign(\n      {\n        Accept: 'application/json'\n      },\n      headers\n    ),\n    body: method !== 'GET' ? data : undefined,\n    credentials: 'same-origin'\n  })\n\n  if (responseHandler) {\n    response = responseHandler(response)\n  } else {\n    response = response.then((response) =>\n      response\n        .json()\n        .then((res) => (response.ok ? res : Promise.reject(res.error)))\n    )\n  }\n\n  return response\n}\n\nfunction indigoCall(\n  method: string,\n  url: string,\n  baseUrl: string,\n  defaultOptions: any,\n  customHeaders?: Record<string, string>\n) {\n  return function (\n    data,\n    options,\n    responseHandler?: (promise: Promise<any>) => Promise<any>\n  ) {\n    const body = Object.assign({}, data)\n    body.options = Object.assign(body.options || {}, defaultOptions, options)\n    return request(\n      method,\n      baseUrl + url,\n      JSON.stringify(body),\n      {\n        'Content-Type': 'application/json',\n        ...customHeaders\n      },\n      responseHandler\n    )\n  }\n}\n\nexport class RemoteStructService implements StructService {\n  private readonly apiPath: string\n  private readonly defaultOptions: StructServiceOptions\n  private readonly customHeaders?: Record<string, string>\n\n  constructor(\n    apiPath: string,\n    defaultOptions: StructServiceOptions,\n    customHeaders?: Record<string, string>\n  ) {\n    this.apiPath = apiPath\n    this.defaultOptions = defaultOptions\n    this.customHeaders = customHeaders\n  }\n\n  generateInchIKey(struct: string): Promise<string> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(\n      {\n        struct,\n        output_format: 'chemical/x-inchi'\n      },\n      {}\n    )\n  }\n\n  async info(): Promise<InfoResult> {\n    let indigoVersion: string\n    let imagoVersions: Array<string>\n    let isAvailable = false\n\n    try {\n      const response = await request('GET', this.apiPath + 'info')\n      indigoVersion = response.indigo_version\n      imagoVersions = response.imago_versions\n      isAvailable = true\n    } catch (e) {\n      indigoVersion = ''\n      imagoVersions = []\n      isAvailable = false\n    }\n\n    return {\n      indigoVersion,\n      imagoVersions,\n      isAvailable\n    }\n  }\n\n  convert(\n    data: ConvertData,\n    options?: StructServiceOptions\n  ): Promise<ConvertResult> {\n    return indigoCall(\n      'POST',\n      'indigo/convert',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  layout(\n    data: LayoutData,\n    options?: StructServiceOptions\n  ): Promise<LayoutResult> {\n    return indigoCall(\n      'POST',\n      'indigo/layout',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  clean(data: CleanData, options?: StructServiceOptions): Promise<CleanResult> {\n    return indigoCall(\n      'POST',\n      'indigo/clean',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  aromatize(\n    data: AromatizeData,\n    options?: StructServiceOptions\n  ): Promise<AromatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/aromatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  dearomatize(\n    data: DearomatizeData,\n    options?: StructServiceOptions\n  ): Promise<DearomatizeResult> {\n    return indigoCall(\n      'POST',\n      'indigo/dearomatize',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculateCip(\n    data: CalculateCipData,\n    options?: StructServiceOptions\n  ): Promise<CalculateCipResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate_cip',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  automap(\n    data: AutomapData,\n    options?: StructServiceOptions\n  ): Promise<AutomapResult> {\n    return indigoCall(\n      'POST',\n      'indigo/automap',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  check(data: CheckData, options?: StructServiceOptions): Promise<CheckResult> {\n    return indigoCall(\n      'POST',\n      'indigo/check',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  calculate(\n    data: CalculateData,\n    options?: StructServiceOptions\n  ): Promise<CalculateResult> {\n    return indigoCall(\n      'POST',\n      'indigo/calculate',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )(data, options)\n  }\n\n  recognize(blob: Blob, version: string): Promise<RecognizeResult> {\n    const parVersion = version ? `?version=${version}` : ''\n    const req = request(\n      'POST',\n      this.apiPath + `imago/uploads${parVersion}`,\n      blob,\n      {\n        'Content-Type': blob.type || 'application/octet-stream'\n      }\n    )\n    const status = request.bind(null, 'GET', this.apiPath + 'imago/uploads/:id')\n    return req\n      .then((data) =>\n        pollDeferred(\n          status.bind(null, { id: data.upload_id }),\n          (response: any) => {\n            if (response.state === 'FAILURE') throw response\n            return response.state === 'SUCCESS'\n          },\n          500,\n          300\n        )\n      )\n      .then((response: any) => ({ struct: response.metadata.mol_str }))\n  }\n\n  generateImageAsBase64(\n    data: string,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat: OutputFormatType = options?.outputFormat || 'png'\n    return indigoCall(\n      'POST',\n      'indigo/render',\n      this.apiPath,\n      this.defaultOptions,\n      this.customHeaders\n    )({ struct: data }, { 'render-output-format': outputFormat }, (response) =>\n      response.then((resp) => resp.text())\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ServiceMode,\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { RemoteStructService } from './remoteStructService'\n\nexport class RemoteStructServiceProvider implements StructServiceProvider {\n  private readonly apiPath: string\n  mode: ServiceMode = 'remote'\n  customHeaders?: Record<string, string>\n\n  constructor(apiPath: string, customHeaders?: Record<string, string>) {\n    let currentApiPath = apiPath\n    this.customHeaders = customHeaders\n    const params = new URLSearchParams(document.location.search)\n    if (params.has('api_path')) {\n      currentApiPath = params.get('api_path')!\n    }\n    this.apiPath =\n      !currentApiPath || /\\/$/.test(currentApiPath)\n        ? currentApiPath\n        : currentApiPath + '/'\n  }\n\n  createStructService(options: StructServiceOptions): StructService {\n    return new RemoteStructService(this.apiPath, options, this.customHeaders)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\n\nexport class SupportedFormatProperties {\n  name: string\n  mime: ChemicalMimeType\n  extensions: string[]\n  supportsCoords?: boolean\n  options?: any\n\n  constructor(\n    name: string,\n    mime: ChemicalMimeType,\n    extensions: string[],\n    supportsCoords?: boolean,\n    options?: any\n  ) {\n    this.name = name\n    this.mime = mime\n    this.extensions = extensions\n    this.supportsCoords = supportsCoords || false\n    this.options = options || {}\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ChemicalMimeType } from 'domain/services'\nimport { SupportedFormat } from './structFormatter.types'\nimport { SupportedFormatProperties } from './supportedFormatProperties'\n\ntype FormatPropertiesMap = {\n  [key in SupportedFormat]: SupportedFormatProperties\n}\n\nconst formatProperties: FormatPropertiesMap = {\n  molAuto: new SupportedFormatProperties(\n    // TODO: is it a valid name?\n    'MDL Molfile Auto Format detect',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': 'auto' }\n  ),\n  mol: new SupportedFormatProperties(\n    'MDL Molfile V2000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true\n  ),\n  molV3000: new SupportedFormatProperties(\n    'MDL Molfile V3000',\n    ChemicalMimeType.Mol,\n    ['.mol'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  rxn: new SupportedFormatProperties(\n    'MDL Rxnfile V2000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true\n  ),\n  rxnV3000: new SupportedFormatProperties(\n    'MDL Rxnfile V3000',\n    ChemicalMimeType.Rxn,\n    ['.rxn'],\n    true,\n    { 'molfile-saving-mode': '3000' }\n  ),\n  smiles: new SupportedFormatProperties(\n    'Daylight SMILES',\n    ChemicalMimeType.DaylightSmiles,\n    ['.smi', '.smiles']\n  ),\n  smilesExt: new SupportedFormatProperties(\n    'Extended SMILES',\n    ChemicalMimeType.ExtendedSmiles,\n    ['.cxsmi', '.cxsmiles']\n  ),\n  smarts: new SupportedFormatProperties(\n    'Daylight SMARTS',\n    ChemicalMimeType.DaylightSmarts,\n    ['.smarts']\n  ),\n  inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\n    '.inchi'\n  ]),\n  inChIAuxInfo: new SupportedFormatProperties(\n    'InChI AuxInfo',\n    ChemicalMimeType.InChIAuxInfo,\n    ['.inchi']\n  ),\n  cml: new SupportedFormatProperties(\n    'CML',\n    ChemicalMimeType.CML,\n    ['.cml', '.mrv'],\n    true\n  ),\n  ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\n    '.ket'\n  ]),\n  cdxml: new SupportedFormatProperties(\n    'CDXML',\n    ChemicalMimeType.CDXML,\n    ['.cdxml'],\n    true\n  ),\n  cdx: new SupportedFormatProperties(\n    'Base64 CDX',\n    ChemicalMimeType.CDX,\n    ['.cdx'],\n    true\n  ),\n  unknown: new SupportedFormatProperties(\n    'Unknown',\n    ChemicalMimeType.UNKNOWN,\n    ['.'],\n    true\n  )\n}\n\nconst imgFormatProperties = {\n  svg: { extension: '.svg', name: 'SVG Document' },\n  png: { extension: '.png', name: 'PNG Image' }\n}\n\nfunction getPropertiesByImgFormat(format) {\n  return imgFormatProperties[format]\n}\n\nfunction getPropertiesByFormat(format: SupportedFormat) {\n  return formatProperties[format]\n}\n\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializerOptions } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructServiceOptions } from 'domain/services'\n\nexport interface StructFormatter {\n  getStructureFromStructAsync: (struct: Struct) => Promise<string>\n  getStructureFromStringAsync: (stringifiedStruct: string) => Promise<Struct>\n}\n\nexport enum SupportedFormat {\n  mol = 'mol',\n  molV3000 = 'molV3000',\n  molAuto = 'molAuto',\n  rxn = 'rxn',\n  rxnV3000 = 'rxnV3000',\n  smiles = 'smiles',\n  smilesExt = 'smilesExt',\n  smarts = 'smarts',\n  inChI = 'inChI',\n  inChIAuxInfo = 'inChIAuxInfo',\n  cml = 'cml',\n  ket = 'ket',\n  cdxml = 'cdxml',\n  cdx = 'cdx',\n  unknown = 'unknown'\n}\n\nexport type FormatterFactoryOptions = Partial<\n  MolSerializerOptions & StructServiceOptions\n>\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class KetFormatter implements StructFormatter {\n  #ketSerializer: KetSerializer\n\n  constructor(serializer: KetSerializer) {\n    this.#ketSerializer = serializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const ket = this.#ketSerializer.serialize(struct)\n    return ket\n  }\n\n  async getStructureFromStringAsync(content: string): Promise<Struct> {\n    return this.#ketSerializer.deserialize(content)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class RxnFormatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  ConvertData,\n  ConvertResult,\n  LayoutData,\n  LayoutResult,\n  StructService,\n  StructServiceOptions\n} from 'domain/services'\nimport { StructFormatter, SupportedFormat } from './structFormatter.types'\n\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { getPropertiesByFormat } from './formatProperties'\n\ntype ConvertPromise = (\n  data: ConvertData,\n  options?: StructServiceOptions\n) => Promise<ConvertResult>\n\ntype LayoutPromise = (\n  data: LayoutData,\n  options?: StructServiceOptions\n) => Promise<LayoutResult>\n\nexport class ServerFormatter implements StructFormatter {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n  #format: SupportedFormat\n  #options?: StructServiceOptions\n\n  constructor(\n    structService: StructService,\n    ketSerializer: KetSerializer,\n    format: SupportedFormat,\n    options?: StructServiceOptions\n  ) {\n    this.#structService = structService\n    this.#ketSerializer = ketSerializer\n    this.#format = format\n    this.#options = options\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const formatProperties = getPropertiesByFormat(this.#format)\n\n    try {\n      const stringifiedStruct = this.#ketSerializer.serialize(struct)\n      const convertResult = await this.#structService.convert(\n        {\n          struct: stringifiedStruct,\n          output_format: formatProperties.mime\n        },\n        { ...this.#options, ...formatProperties.options }\n      )\n\n      return convertResult.struct\n    } catch (error: any) {\n      let message\n      if (error.message === 'Server is not compatible') {\n        message = `${formatProperties.name} is not supported.`\n      } else {\n        message = `Convert error!\\n${error.message || error}`\n      }\n\n      throw new Error(message)\n    }\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    let promise: LayoutPromise | ConvertPromise\n\n    const data: ConvertData | LayoutData = {\n      struct: undefined as any,\n      output_format: getPropertiesByFormat(SupportedFormat.ket).mime\n    }\n\n    const withCoords = getPropertiesByFormat(this.#format).supportsCoords\n    if (withCoords) {\n      promise = this.#structService.convert\n      data.struct = stringifiedStruct\n    } else {\n      promise = this.#structService.layout\n      data.struct = stringifiedStruct.trim()\n    }\n\n    try {\n      const result = await promise(data, this.#options)\n      const parsedStruct = this.#ketSerializer.deserialize(result.struct)\n      if (!withCoords) {\n        parsedStruct.rescale()\n      }\n      return parsedStruct\n    } catch (error: any) {\n      if (error.message !== 'Server is not compatible') {\n        throw Error(`Convert error!\\n${error.message || error}`)\n      }\n\n      const formatError =\n        this.#format === 'smiles'\n          ? `${\n              getPropertiesByFormat(SupportedFormat.smilesExt).name\n            } and opening of ${\n              getPropertiesByFormat(SupportedFormat.smiles).name\n            }`\n          : getPropertiesByFormat(this.#format).name\n\n      throw Error(`${formatError} is not supported in standalone mode.`)\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { MolSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport { StructFormatter } from './structFormatter.types'\n\nexport class MolfileV2000Formatter implements StructFormatter {\n  #molSerializer: MolSerializer\n\n  constructor(molSerializer: MolSerializer) {\n    this.#molSerializer = molSerializer\n  }\n\n  async getStructureFromStructAsync(struct: Struct): Promise<string> {\n    const stringifiedMolfile = this.#molSerializer.serialize(struct)\n    return stringifiedMolfile\n  }\n\n  async getStructureFromStringAsync(\n    stringifiedStruct: string\n  ): Promise<Struct> {\n    const struct = this.#molSerializer.deserialize(stringifiedStruct)\n    return struct\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactoryOptions,\n  StructFormatter,\n  SupportedFormat\n} from './structFormatter.types'\nimport {\n  KetSerializer,\n  MolSerializer,\n  MolSerializerOptions\n} from 'domain/serializers'\nimport { StructService, StructServiceOptions } from 'domain/services'\nimport { KetFormatter } from './ketFormatter'\nimport { RxnFormatter } from './rxnFormatter'\nimport { ServerFormatter } from './serverFormatter'\nimport { MolfileV2000Formatter } from './molfileV2000Formatter'\n\nexport class FormatterFactory {\n  #structService: StructService\n\n  constructor(structService: StructService) {\n    this.#structService = structService\n  }\n\n  private separateOptions(\n    options?: FormatterFactoryOptions\n  ): [Partial<MolSerializerOptions>, Partial<StructServiceOptions>] {\n    if (!options) {\n      return [{}, {}]\n    }\n\n    const { reactionRelayout, badHeaderRecover, ...structServiceOptions } =\n      options\n\n    const molfileParseOptions: Partial<MolSerializerOptions> = {}\n\n    if (typeof reactionRelayout === 'boolean') {\n      molfileParseOptions.reactionRelayout = reactionRelayout\n    }\n    if (typeof badHeaderRecover === 'boolean') {\n      molfileParseOptions.badHeaderRecover = badHeaderRecover\n    }\n\n    return [molfileParseOptions, structServiceOptions]\n  }\n\n  create(\n    format: SupportedFormat,\n    options?: FormatterFactoryOptions\n  ): StructFormatter {\n    const [molSerializerOptions, structServiceOptions] =\n      this.separateOptions(options)\n\n    let formatter: StructFormatter\n    switch (format) {\n      case SupportedFormat.ket:\n        formatter = new KetFormatter(new KetSerializer())\n        break\n\n      case SupportedFormat.rxn:\n        formatter = new RxnFormatter(new MolSerializer(molSerializerOptions))\n        break\n\n      case SupportedFormat.mol:\n        formatter = new MolfileV2000Formatter(\n          new MolSerializer(molSerializerOptions)\n        )\n        break\n\n      case SupportedFormat.cml:\n      case SupportedFormat.inChIAuxInfo:\n      case SupportedFormat.inChI:\n      case SupportedFormat.molV3000:\n      case SupportedFormat.smiles:\n      case SupportedFormat.rxnV3000:\n      case SupportedFormat.smilesExt:\n      case SupportedFormat.smarts:\n      case SupportedFormat.cdxml:\n      case SupportedFormat.cdx:\n      case SupportedFormat.unknown:\n      default:\n        formatter = new ServerFormatter(\n          this.#structService,\n          new KetSerializer(),\n          format,\n          structServiceOptions\n        )\n    }\n\n    return formatter\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SupportedFormat } from './structFormatter.types'\n\nexport function identifyStructFormat(\n  stringifiedStruct: string\n): SupportedFormat {\n  // Mimic Indigo/molecule_auto_loader.cpp as much as possible\n  const sanitizedString = stringifiedStruct.trim()\n\n  try {\n    if (JSON.parse(sanitizedString)) {\n      return SupportedFormat.ket\n    }\n  } catch (er) {} // eslint-disable-line\n\n  if (sanitizedString.indexOf('$RXN') !== -1) {\n    return SupportedFormat.rxn\n  }\n\n  if (sanitizedString.indexOf('V2000') !== -1) {\n    return SupportedFormat.mol\n  }\n\n  if (sanitizedString.indexOf('V3000') !== -1) {\n    return SupportedFormat.molV3000\n  }\n\n  const match = sanitizedString.match(/^(M {2}END|\\$END MOL)$/m)\n\n  if (match) {\n    const end = (match.index || 0) + match[0].length\n    if (\n      end === sanitizedString.length ||\n      sanitizedString.slice(end, end + 20).search(/^\\$(MOL|END CTAB)$/m) !== -1\n    ) {\n      return SupportedFormat.mol\n    }\n  }\n\n  if (\n    sanitizedString[0] === '<' &&\n    sanitizedString.indexOf('<molecule') !== -1\n  ) {\n    return SupportedFormat.cml\n  }\n\n  const clearStr = sanitizedString\n    .replace(/\\s/g, '')\n    .replace(/(\\\\r)|(\\\\n)/g, '')\n  const isBase64String =\n    /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/\n  const cdxHeader = 'VjCD0100'\n  if (\n    clearStr.length % 4 === 0 &&\n    isBase64String.test(clearStr) &&\n    window.atob(clearStr).startsWith(cdxHeader)\n  ) {\n    return SupportedFormat.cdx\n  }\n\n  if (sanitizedString.slice(0, 5) === 'InChI') {\n    return SupportedFormat.inChI\n  }\n\n  if (sanitizedString.indexOf('\\n') === -1) {\n    // TODO: smiles regexp\n    return SupportedFormat.smiles\n  }\n\n  if (sanitizedString.indexOf('<CDXML') !== -1) {\n    return SupportedFormat.cdxml\n  }\n\n  return SupportedFormat.unknown\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Single entry point to Raphaël library\n\nimport Raphael from 'raphael'\nimport { Vec2 } from 'domain/entities'\n\n// TODO: refactor ugly prototype extensions to plain old functions\nRaphael.el.translateAbs = function (x, y) {\n  this.delta = this.delta || new Vec2()\n  this.delta.x += x - 0\n  this.delta.y += y - 0\n  this.transform('t' + this.delta.x.toString() + ',' + this.delta.y.toString())\n}\n\nRaphael.st.translateAbs = function (x, y) {\n  this.forEach((el) => {\n    el.translateAbs(x, y)\n  })\n}\n\nexport default Raphael\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport enum LayerMap {\n  background = 'background',\n  selectionPlate = 'selectionPlate',\n  hovering = 'hovering',\n  warnings = 'warnings',\n  data = 'data',\n  indices = 'indices'\n}\n\nexport enum StereoColoringType {\n  LabelsOnly = 'LabelsOnly',\n  BondsOnly = 'BondsOnly',\n  LabelsAndBonds = 'LabelsAndBonds',\n  Off = 'Off'\n}\n\nexport enum StereLabelStyleType {\n  IUPAC = 'Iupac',\n  Classic = 'Classic',\n  On = 'On',\n  Off = 'Off'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// Visel is a shorthand for VISual ELement\n// It corresponds to a visualization (i.e. set of paths) of an atom or a bond.\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nclass Visel {\n  constructor(type) {\n    this.type = type\n    this.paths = []\n    this.boxes = []\n    this.boundingBox = null\n    this.exts = []\n  }\n\n  add(path, bb, ext) {\n    this.paths.push(path)\n    if (bb) {\n      this.boxes.push(bb)\n      this.boundingBox =\n        this.boundingBox == null ? bb : Box2Abs.union(this.boundingBox, bb)\n    }\n    if (ext) this.exts.push(ext)\n  }\n\n  clear() {\n    this.paths = []\n    this.boxes = []\n    this.exts = []\n    this.boundingBox = null\n  }\n\n  translate(...args) {\n    if (args.length > 2) {\n      // TODO: replace to debug time assert\n      throw new Error('One vector or two scalar arguments expected')\n    }\n    if (args.length === 1) {\n      const vector = args[0]\n      this.translate(vector.x, vector.y)\n    } else {\n      const x = args[0]\n      const y = args[1]\n      const delta = new Vec2(x, y)\n      for (let i = 0; i < this.paths.length; ++i) {\n        this.paths[i].translateAbs(x, y)\n      }\n      for (let j = 0; j < this.boxes.length; ++j) {\n        this.boxes[j] = this.boxes[j].translate(delta)\n      }\n      if (this.boundingBox !== null) {\n        this.boundingBox = this.boundingBox.translate(delta)\n      }\n    }\n  }\n}\n\nexport default Visel\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport Visel from './visel'\n\nclass ReObject {\n  public visel: Visel\n  public hover = false\n  public hovering: any = null\n  public selected = false\n  public selectionPlate: any = null\n\n  constructor(viselType: string) {\n    this.visel = new Visel(viselType)\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    let vbox = this.visel.boundingBox\n    if (vbox === null) return null\n    if (render.options.offset) {\n      vbox = vbox.translate(render.options.offset.negated())\n    }\n    return vbox.transform(Scale.scaled2obj, render.options)\n  }\n\n  setHover(hover: boolean, render: Render): void {\n    // TODO render should be field\n    if (hover) {\n      let noredraw = 'hovering' in this && this.hovering !== null // && !this.highlighting.removed;\n      if (noredraw) {\n        if (this.hovering.type === 'set') {\n          if (!this.hovering[0]) return\n          noredraw = !this.hovering[0].removed\n        } else {\n          noredraw = !this.hovering.removed\n        }\n      }\n      if (noredraw) {\n        this.hovering.show()\n      } else {\n        render.paper.setStart()\n        this.drawHover(render)\n        this.hovering = render.paper.setFinish()\n      }\n    } else if (this.hovering) {\n      this.hovering.hide()\n    }\n\n    this.hover = hover\n  }\n\n  drawHover(_render: Render): any {\n    throw new Error('ReObject.drawHover is not overridden.')\n  }\n\n  makeSelectionPlate(_restruct: ReStruct, _paper: any, _styles: any): any {\n    throw new Error('ReObject.makeSelectionPlate is not overridden')\n  }\n}\n\nexport default ReObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport assert from 'assert'\n\nfunction tfx(v) {\n  return parseFloat(v).toFixed(8)\n}\n\nfunction relBox(box) {\n  return {\n    x: box.x,\n    y: box.y,\n    width: box.width,\n    height: box.height\n  }\n}\n\n/**\n * Finds intersection of a ray and a box and\n * Returns the shift magnitude to avoid it\n * @param p { Vec2 }\n * @param d { Vec2 }\n * @param bb { Box2Abs }\n */\nfunction shiftRayBox(p, d, bb) {\n  assert(!!p)\n  assert(!!d)\n  assert(!!bb)\n\n  // four corner points of the box\n  const b = [\n    bb.p0,\n    new Vec2(bb.p1.x, bb.p0.y),\n    bb.p1,\n    new Vec2(bb.p0.x, bb.p1.y)\n  ]\n\n  const r = b.map((v) => v.sub(p)) // b relative to p\n\n  d = d.normalized()\n\n  const rc = r.map((v) => Vec2.cross(v, d)) // cross prods\n  const rd = r.map((v) => Vec2.dot(v, d)) // dot prods\n\n  // find foremost points on the right and on the left of the ray\n  let pid = -1\n  let nid = -1\n\n  for (let i = 0; i < 4; ++i) {\n    if (rc[i] > 0) {\n      if (pid < 0 || rd[pid] < rd[i]) pid = i\n    } else if (nid < 0 || rd[nid] < rd[i]) {\n      nid = i\n    }\n  }\n\n  if (nid < 0 || pid < 0) {\n    // no intersection, no shift\n    return 0\n  }\n\n  // check the order\n  const id0 = rd[pid] > rd[nid] ? nid : pid\n  const id1 = rd[pid] > rd[nid] ? pid : nid\n\n  // simple proportion to calculate the shift\n  /* eslint-disable no-mixed-operators */\n  return (\n    rd[id0] +\n    (Math.abs(rc[id0]) * (rd[id1] - rd[id0])) /\n      (Math.abs(rc[id0]) + Math.abs(rc[id1]))\n  )\n}\nfunction calcCoordinates(aPoint, bPoint, lengthHyp) {\n  const obj: {\n    pos1: null | { x: number; y: number }\n    pos2: null | { x: number; y: number }\n  } = { pos1: null, pos2: null }\n  const oPos2 = { x: bPoint.x - aPoint.x, y: bPoint.y - aPoint.y }\n  const c =\n    (lengthHyp ** 2 - oPos2.x * oPos2.x - oPos2.y * oPos2.y - lengthHyp ** 2) /\n    -2\n  const a = oPos2.x * oPos2.x + oPos2.y * oPos2.y\n  if (oPos2.x !== 0) {\n    const b = -2 * oPos2.y * c\n    const e = c * c - lengthHyp * lengthHyp * oPos2.x * oPos2.x\n    const D = b * b - 4 * a * e\n    if (D > 0) {\n      obj.pos1 = { x: 0, y: 0 }\n      obj.pos2 = { x: 0, y: 0 }\n      obj.pos1.y = (-b + Math.sqrt(D)) / (2 * a)\n      obj.pos2.y = (-b - Math.sqrt(D)) / (2 * a)\n      obj.pos1.x = (c - obj.pos1.y * oPos2.y) / oPos2.x\n      obj.pos2.x = (c - obj.pos2.y * oPos2.y) / oPos2.x\n    }\n  } else {\n    obj.pos1 = { x: 0, y: 0 }\n    obj.pos2 = { x: 0, y: 0 }\n    obj.pos1.y = c / oPos2.y\n    obj.pos2.y = c / oPos2.y\n    obj.pos1.x = -Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n    obj.pos2.x = Math.sqrt(lengthHyp ** 2 - c ** 2 / oPos2.y ** 2)\n  }\n  if (obj.pos1 !== null) {\n    obj.pos1.x += aPoint.x\n    obj.pos1.y += aPoint.y\n  }\n  if (obj.pos2 !== null) {\n    obj.pos2.x += aPoint.x\n    obj.pos2.y += aPoint.y\n  }\n  return obj\n}\n\nconst util = {\n  tfx,\n  relBox,\n  shiftRayBox,\n  calcCoordinates\n}\n\nexport default util\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrowMode, Vec2, RxnArrow } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport svgPath from 'svgpath'\nimport util from './util'\n\nconst tfx = util.tfx\n\nfunction rectangle(paper, pos, options) {\n  return paper.rect(\n    tfx(Math.min(pos[0].x, pos[1].x)),\n    tfx(Math.min(pos[0].y, pos[1].y)),\n    tfx(Math.abs(pos[1].x - pos[0].x)),\n    tfx(Math.abs(pos[1].y - pos[0].y))\n  )\n}\n\nfunction rectangleArrowHighlightAndSelection(\n  paper,\n  { pos, height },\n  length,\n  angle,\n  options\n) {\n  const [a, b] = pos\n  const b0x = a.x + length\n  const [wOffset, hOffset] = [5, height || 8]\n\n  const path =\n    `M${tfx(a.x - wOffset)},${tfx(a.y)}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y - hOffset)}` +\n    `L${tfx(b0x + wOffset)},${tfx(a.y + (!height && hOffset))}` +\n    `L${tfx(a.x - wOffset)},${tfx(a.y + (!height && hOffset))}Z`\n\n  const transformedPath = svgPath(path).rotate(angle, a.x, a.y).toString()\n\n  return transformedPath\n}\n\nfunction ellipse(paper, pos, options) {\n  const rad = Vec2.diff(pos[1], pos[0])\n  const rx = rad.x / 2\n  const ry = rad.y / 2\n  return paper.ellipse(pos[0].x + rx, pos[0].y + ry, Math.abs(rx), Math.abs(ry))\n}\n\nfunction polyline(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  for (let i = 1; i < pos.length; i++) path.push('L', pos[i].x, pos[i].y)\n  return paper.path(path)\n}\n\nfunction line(paper, pos, options) {\n  const path = ['M', pos[0].x, pos[0].y]\n  path.push('L', pos[1].x, pos[1].y)\n  return paper.path(path)\n}\n\nfunction arrow(paper, item, length, angle, options) {\n  switch (item.mode) {\n    case RxnArrowMode.OpenAngle: {\n      return arrowOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledTriangle: {\n      return arrowFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.FilledBow: {\n      return arrowFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.DashedOpenAngle: {\n      return arrowDashedOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.Failed: {\n      return arrowFailed(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.BothEndsFilledTriangle: {\n      return arrowBothEndsFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledHalfBow: {\n      return arrowEquilibriumFilledHalfBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumFilledTriangle: {\n      return arrowEquilibriumFilledTriangle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EquilibriumOpenAngle: {\n      return arrowEquilibriumOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfBow: {\n      return arrowUnbalancedEquilibriumFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumOpenHalfAngle: {\n      return arrowUnbalancedEquilibriumOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumLargeFilledHalfBow: {\n      return arrowUnbalancedEquilibriumLargeFilledHalfBow(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.UnbalancedEquilibriumFilledHalfTriangle: {\n      return arrowUnbalancedEquilibriumFilledHalfTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcFilledBow: {\n      return arrowEllipticalArcFilledBow(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcFilledTriangle: {\n      return arrowEllipticalArcFilledTriangle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n    case RxnArrowMode.EllipticalArcOpenAngle: {\n      return arrowEllipticalArcOpenAngle(paper, item, length, angle, options)\n    }\n    case RxnArrowMode.EllipticalArcOpenHalfAngle: {\n      return arrowEllipticalArcOpenHalfAngle(\n        paper,\n        item,\n        length,\n        angle,\n        options\n      )\n    }\n  }\n}\n\nfunction arrowEllipticalArcFilledBow(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const arrowHeadLength = direction * 10\n  const arrowHeadWidth = direction * 5\n  const arrowHeadAttr = direction * 4\n\n  const b0x = a.x + arrowLength\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadWidth)},${tfx(a.y - arrowHeadLength)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(arrowHeadAttr)}` +\n    `l${tfx(arrowHeadWidth)},${tfx(-arrowHeadAttr)}` +\n    `l${tfx(-arrowHeadWidth)},${arrowHeadLength}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcFilledTriangle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const triangleLength = direction * 10\n  const triangleWidth = direction * 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleWidth)},${tfx(a.y - triangleLength)}` +\n    `l${tfx(triangleLength)},${tfx(0)}` +\n    `l${tfx(-triangleWidth)},${tfx(triangleLength)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr })\n}\n\nfunction arrowEllipticalArcOpenAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0},${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x - width)},${tfx(a.y - length)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowEllipticalArcOpenHalfAngle(\n  paper,\n  { pos: [a, b], height },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const direction = height >= 0 ? 1 : -1\n  const width = direction * 5\n  const length = direction * 7\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `A${arrowLength / 2},${height},${0},${0},${direction > 0 ? 1 : 0}, ${tfx(\n      b0x\n    )},${tfx(a.y)}` +\n    `L${tfx(b0x + width)}, ${tfx(a.y - length)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)},${tfx(a.y - width)}` +\n    `M${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - length)}, ${tfx(a.y + width)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFilledBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n    `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n    `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}Z`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowDashedOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n  const dashInterval = 3.5\n\n  const path = []\n\n  const b0x = a.x + arrowLength\n\n  // Dashed arrow\n  for (let i = 0; i < arrowLength / dashInterval; i++) {\n    if (i % 2) {\n      path.push(`L${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    } else {\n      path.push(`M${tfx(a.x + i * dashInterval)},${tfx(a.y)}`)\n    }\n  }\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n      `M${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowFailed(paper, { pos: [a, b] }, arrowLength, arrowAngle, options) {\n  const arrowHeadLength = 10\n  const arrowHeadWidth = 5\n  const arrowHeadAttr = 4\n  const failSignWidth = 8\n\n  const b0x = a.x + arrowLength\n\n  const arrowCenter = b0x - (b0x - a.x) / 2\n\n  const path = []\n\n  // Arrow with arrowhead\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y + arrowHeadWidth)}` +\n      `L${tfx(b0x - arrowHeadLength + arrowHeadAttr)},${tfx(a.y)}` +\n      `L${tfx(b0x - arrowHeadLength)},${tfx(a.y - arrowHeadWidth)}` +\n      `L${tfx(b0x)},${tfx(a.y)}Z`\n  )\n\n  // Failed sign line 1\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y + failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y - failSignWidth)}`\n  )\n\n  // Failed sign line 2\n  path.push(\n    `M${tfx(arrowCenter + failSignWidth)},${tfx(a.y - failSignWidth)}` +\n      `L${tfx(arrowCenter - failSignWidth)},${tfx(a.y + failSignWidth)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowBothEndsFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const triangleLength = 10\n  const triangleWidth = 5\n\n  const b0x = a.x + arrowLength\n\n  const path =\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(b0x - triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(b0x)},${tfx(a.y)}` +\n    `M${tfx(a.x)},${tfx(a.y)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y - triangleWidth)}` +\n    `L${tfx(a.x + triangleLength)},${tfx(a.y + triangleWidth)}` +\n    `L${tfx(a.x)},${tfx(a.y)}`\n\n  const transformedPath = svgPath(path).rotate(arrowAngle, a.x, a.y).toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // Arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Arrowhead\n  path.push(\n    `M${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumFilledTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y)}` +\n      `L${tfx(a.x + arrowLen)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowEquilibriumOpenAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumOpenHalfAngle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const width = 5\n  const length = 7\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - length)},${tfx(a.y - width - lineOffset)}`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + lineOffset + width)}`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr(options.lineattr)\n}\n\nfunction arrowUnbalancedEquilibriumLargeFilledHalfBow(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 10\n  const arrowHeadAttr = 2\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen + arrowHeadAttr)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen - arrowHeadAttr + unbalanceVal)},${\n        a.y + lineOffset\n      }Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction arrowUnbalancedEquilibriumFilledHalfTriangle(\n  paper,\n  { pos: [a, b] },\n  arrowLength,\n  arrowAngle,\n  options\n) {\n  const arrowLen = 9\n  const lineOffset = 3.5\n  const arrowOffset = 7\n  const unbalanceVal = 15\n\n  const b0x = a.x + arrowLength\n\n  const path = []\n\n  // First arrow\n  path.push(\n    `M${tfx(a.x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x)},${tfx(a.y - lineOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - arrowOffset)}` +\n      `L${tfx(b0x - arrowLen)},${tfx(a.y - lineOffset)}Z`\n  )\n\n  // Second (Unbalanced) arrow\n  path.push(\n    `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(b0x - unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `M${tfx(a.x + unbalanceVal)},${tfx(a.y + lineOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${tfx(a.y + arrowOffset)}` +\n      `L${tfx(a.x + arrowLen + unbalanceVal)},${a.y + lineOffset}Z`\n  )\n\n  const transformedPath = svgPath(path.join(''))\n    .rotate(arrowAngle, a.x, a.y)\n    .toString()\n\n  return paper.path(transformedPath).attr({ ...options.lineattr, fill: '#000' })\n}\n\nfunction plus(paper, c, options) {\n  const s = options.scale / 5\n  return paper\n    .path(\n      'M{0},{4}L{0},{5}M{2},{1}L{3},{1}',\n      tfx(c.x),\n      tfx(c.y),\n      tfx(c.x - s),\n      tfx(c.x + s),\n      tfx(c.y - s),\n      tfx(c.y + s)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingle(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleUp(paper, a, b2, b3, options, color = '#000') {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}Z',\n      tfx(a.x),\n      tfx(a.y),\n      tfx(b2.x),\n      tfx(b2.y),\n      tfx(b3.x),\n      tfx(b3.y)\n    )\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondSingleStereoBold(paper, a1, a2, a3, a4, options, color = '#000') {\n  // eslint-disable-line max-params\n  const bond = paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}Z',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(a3.x),\n      tfx(a3.y),\n      tfx(a4.x),\n      tfx(a4.y)\n    )\n    .attr(options.lineattr)\n  bond.attr({\n    stroke: color,\n    fill: color\n  })\n  return bond\n}\n\nfunction bondDoubleStereoBold(\n  paper,\n  sgBondPath,\n  b1,\n  b2,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  return paper.set([\n    sgBondPath,\n    paper\n      .path('M{0},{1}L{2},{3}', tfx(b1.x), tfx(b1.y), tfx(b2.x), tfx(b2.y))\n      .attr(options.lineattr)\n      .attr({\n        stroke: color,\n        fill: color\n      })\n  ])\n}\n\nfunction bondSingleDown(paper, hb1, d, nlines, step, options, color = '#000') {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = ''\n  let p\n  let q\n  let r\n  for (let i = 0; i < nlines; ++i) {\n    r = a.addScaled(d, step * i)\n    p = r.addScaled(n, (bsp * (i + 0.5)) / (nlines - 0.5))\n    q = r.addScaled(n, (-bsp * (i + 0.5)) / (nlines - 0.5))\n    path += makeStroke(p, q)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondSingleEither(\n  paper,\n  hb1,\n  d,\n  nlines,\n  step,\n  options,\n  color = '#000'\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const n = hb1.norm\n  const bsp = 0.7 * options.stereoBond\n\n  let path = 'M' + tfx(a.x) + ',' + tfx(a.y)\n  let r = a\n  for (let i = 0; i < nlines; ++i) {\n    r = a\n      .addScaled(d, step * (i + 0.5))\n      .addScaled(n, ((i & 1 ? -1 : +1) * bsp * (i + 0.5)) / (nlines - 0.5))\n    path += 'L' + tfx(r.x) + ',' + tfx(r.y)\n  }\n  return paper.path(path).attr(options.lineattr).attr({\n    fill: color,\n    stroke: color\n  })\n}\n\nfunction bondDouble(paper, a1, a2, b1, b2, cisTrans, options) {\n  // eslint-disable-line max-params\n  return paper\n    .path(\n      cisTrans\n        ? 'M{0},{1}L{6},{7}M{4},{5}L{2},{3}'\n        : 'M{0},{1}L{2},{3}M{4},{5}L{6},{7}',\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y),\n      tfx(a2.x),\n      tfx(a2.y),\n      tfx(b2.x),\n      tfx(b2.y)\n    )\n    .attr(options.lineattr)\n}\n\nfunction bondSingleOrDouble(paper, hb1, hb2, nSect, options) {\n  // eslint-disable-line max-statements, max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = options.bondSpace / 2\n\n  let path = ''\n  let pi\n  let pp = a\n  for (let i = 1; i <= nSect; ++i) {\n    pi = Vec2.lc2(a, (nSect - i) / nSect, b, i / nSect)\n    if (i & 1) {\n      path += makeStroke(pp, pi)\n    } else {\n      path += makeStroke(pp.addScaled(n, bsp), pi.addScaled(n, bsp))\n      path += makeStroke(pp.addScaled(n, -bsp), pi.addScaled(n, -bsp))\n    }\n    pp = pi\n  }\n  return paper.path(path).attr(options.lineattr)\n}\n\nfunction bondTriple(paper, hb1, hb2, options, color = '#000') {\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const a2 = a.addScaled(n, options.bondSpace)\n  const b2 = b.addScaled(n, options.bondSpace)\n  const a3 = a.addScaled(n, -options.bondSpace)\n  const b3 = b.addScaled(n, -options.bondSpace)\n  return paper\n    .path(makeStroke(a, b) + makeStroke(a2, b2) + makeStroke(a3, b3))\n    .attr(options.lineattr)\n    .attr({\n      fill: color,\n      stroke: color\n    })\n}\n\nfunction bondAromatic(paper, paths, bondShift, options) {\n  const l1 = paper.path(paths[0]).attr(options.lineattr)\n  const l2 = paper.path(paths[1]).attr(options.lineattr)\n  if (bondShift !== undefined && bondShift !== null) {\n    ;(bondShift > 0 ? l1 : l2).attr({ 'stroke-dasharray': '- ' })\n  }\n\n  return paper.set([l1, l2])\n}\n\nfunction bondAny(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'stroke-dasharray': '- ' })\n}\n\nfunction bondHydrogen(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper.path(makeStroke(a, b)).attr(options.lineattr).attr({\n    'stroke-dasharray': '.',\n    'stroke-linecap': 'square'\n  })\n}\n\nfunction bondDative(paper, hb1, hb2, options) {\n  const a = hb1.p\n  const b = hb2.p\n  return paper\n    .path(makeStroke(a, b))\n    .attr(options.lineattr)\n    .attr({ 'arrow-end': 'block-midium-long' })\n}\n\nfunction reactingCenter(paper, p, options) {\n  let pathdesc = ''\n  for (let i = 0; i < p.length / 2; ++i) {\n    pathdesc += makeStroke(p[2 * i], p[2 * i + 1])\n  }\n  return paper.path(pathdesc).attr(options.lineattr)\n}\n\nfunction topologyMark(paper, p, mark, options) {\n  const path = paper.text(p.x, p.y, mark).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: '#000'\n  })\n  const rbb = util.relBox(path.getBBox())\n  recenterText(path, rbb)\n  return path\n}\n\nfunction radicalCap(paper, p, options) {\n  const s = options.lineWidth * 0.9\n  const dw = s\n  const dh = 2 * s\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}',\n      tfx(p.x - dw),\n      tfx(p.y + dh),\n      tfx(p.x),\n      tfx(p.y),\n      tfx(p.x + dw),\n      tfx(p.y + dh)\n    )\n    .attr({\n      stroke: '#000',\n      'stroke-width': options.lineWidth * 0.7,\n      'stroke-linecap': 'square',\n      'stroke-linejoin': 'miter'\n    })\n}\n\nfunction radicalBullet(paper, p, options) {\n  return paper.circle(tfx(p.x), tfx(p.y), options.lineWidth).attr({\n    stroke: null,\n    fill: '#000'\n  })\n}\n\nfunction bracket(paper, d, n, c, bracketWidth, bracketHeight, options) {\n  // eslint-disable-line max-params\n  bracketWidth = bracketWidth || 0.25\n  bracketHeight = bracketHeight || 1.0\n  const a0 = c.addScaled(n, -0.5 * bracketHeight)\n  const a1 = c.addScaled(n, 0.5 * bracketHeight)\n  const b0 = a0.addScaled(d, -bracketWidth)\n  const b1 = a1.addScaled(d, -bracketWidth)\n\n  return paper\n    .path(\n      'M{0},{1}L{2},{3}L{4},{5}L{6},{7}',\n      tfx(b0.x),\n      tfx(b0.y),\n      tfx(a0.x),\n      tfx(a0.y),\n      tfx(a1.x),\n      tfx(a1.y),\n      tfx(b1.x),\n      tfx(b1.y)\n    )\n    .attr(options.sgroupBracketStyle)\n}\n\nfunction selectionRectangle(paper, p0, p1, options) {\n  return paper\n    .rect(\n      tfx(Math.min(p0.x, p1.x)),\n      tfx(Math.min(p0.y, p1.y)),\n      tfx(Math.abs(p1.x - p0.x)),\n      tfx(Math.abs(p1.y - p0.y))\n    )\n    .attr(options.lassoStyle)\n}\n\nfunction selectionPolygon(paper, r, options) {\n  const v = r[r.length - 1]\n  let pstr = 'M' + tfx(v.x) + ',' + tfx(v.y)\n  for (let i = 0; i < r.length; ++i) {\n    pstr += 'L' + tfx(r[i].x) + ',' + tfx(r[i].y)\n  }\n  return paper.path(pstr).attr(options.lassoStyle)\n}\n\nfunction selectionLine(paper, p0, p1, options) {\n  return paper.path(makeStroke(p0, p1)).attr(options.lassoStyle)\n}\n\nfunction makeStroke(a, b) {\n  return 'M' + tfx(a.x) + ',' + tfx(a.y) + 'L' + tfx(b.x) + ',' + tfx(b.y) + '\t'\n}\n\nfunction dashedPath(p0, p1, dash) {\n  let t0 = 0\n  const t1 = Vec2.dist(p0, p1)\n  const d = Vec2.diff(p1, p0).normalized()\n  let black = true\n  let path = ''\n  let i = 0\n\n  while (t0 < t1) {\n    const len = dash[i % dash.length]\n    const t2 = t0 + Math.min(len, t1 - t0)\n    if (black) {\n      path +=\n        'M ' +\n        p0.addScaled(d, t0).coordStr() +\n        ' L ' +\n        p0.addScaled(d, t2).coordStr()\n    }\n    t0 += len\n    black = !black\n    i++\n  }\n  return path\n}\n\nfunction aromaticBondPaths(a2, a3, b2, b3, mask, dash) {\n  // eslint-disable-line max-params\n  const l1 = dash && mask & 1 ? dashedPath(a2, b2, dash) : makeStroke(a2, b2)\n  const l2 = dash && mask & 2 ? dashedPath(a3, b3, dash) : makeStroke(a3, b3)\n\n  return [l1, l2]\n}\n\nfunction recenterText(path, rbb) {\n  // TODO: find a better way\n  if (Raphael.vml) {\n    const gap = rbb.height * 0.16\n    path.translateAbs(0, gap)\n    rbb.y += gap\n  }\n}\n\nexport default {\n  recenterText,\n  arrow,\n  plus,\n  aromaticBondPaths,\n  bondSingle,\n  bondSingleUp,\n  bondSingleStereoBold,\n  bondDoubleStereoBold,\n  bondSingleDown,\n  bondSingleEither,\n  bondDouble,\n  bondSingleOrDouble,\n  bondTriple,\n  bondAromatic,\n  bondAny,\n  bondHydrogen,\n  bondDative,\n  reactingCenter,\n  topologyMark,\n  radicalCap,\n  radicalBullet,\n  bracket,\n  selectionRectangle,\n  selectionPolygon,\n  selectionLine,\n  ellipse,\n  rectangle,\n  rectangleArrowHighlightAndSelection,\n  polyline,\n  line\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Box2Abs,\n  FunctionalGroup,\n  StereoFlag,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { ElementColor, Elements } from 'domain/constants'\nimport {\n  LayerMap,\n  StereLabelStyleType,\n  StereoColoringType\n} from './generalEnumTypes'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ninterface ElemAttr {\n  text: string\n  path: any\n  rbb: { x: number; y: number; width: number; height: number }\n}\n\nconst StereoLabelMinOpacity = 0.3\n\nenum ShowHydrogenLabels {\n  Off = 'off',\n  Hetero = 'Hetero',\n  Terminal = 'Terminal',\n  TerminalAndHetero = 'Terminal and Hetero',\n  On = 'on'\n}\n\nclass ReAtom extends ReObject {\n  a: Atom\n  showLabel: boolean\n  hydrogenOnTheLeft: boolean\n  color: string\n  component: number\n  label?: ElemAttr\n\n  constructor(atom: Atom) {\n    super('atom')\n    this.a = atom // TODO rename a to item\n    this.showLabel = false\n\n    this.hydrogenOnTheLeft = false\n\n    this.color = '#000000'\n    this.component = -1\n  }\n\n  static isSelectable(): true {\n    return true\n  }\n\n  getVBoxObj(render: Render): Box2Abs | null {\n    if (this.visel.boundingBox) {\n      return ReObject.prototype.getVBoxObj.call(this, render)\n    }\n    return new Box2Abs(this.a.pp, this.a.pp)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const paper = render.paper\n    const options = render.options\n    const ps = Scale.obj2scaled(this.a.pp, options)\n    const atom = this.a\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n    return paper\n      .circle(ps.x, ps.y, options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any) {\n    const atom = this.a\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n    return paper\n      .circle(ps.x, ps.y, styles.atomSelectionPlateRadius)\n      .attr(styles.selectionStyle)\n  }\n\n  show(restruct: ReStruct, aid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const atom = restruct.molecule.atoms.get(aid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    const render = restruct.render\n    const ps = Scale.obj2scaled(this.a.pp, render.options)\n\n    if (\n      FunctionalGroup.isAtomInContractedFunctionalGroup(\n        atom,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      if (FunctionalGroup.isAttachmentPointAtom(aid, restruct.molecule)) {\n        let sgroupName\n        for (const sg of sgroups.values()) {\n          if (sg.atoms.includes(aid)) sgroupName = sg.data.name\n        }\n        const path = render.paper.text(ps.x, ps.y, sgroupName).attr({\n          'font-weight': 700,\n          'font-size': 14\n        })\n        restruct.addReObjectPath(LayerMap.data, this.visel, path, ps, true)\n      }\n      return\n    }\n\n    this.hydrogenOnTheLeft = setHydrogenPos(restruct.molecule, this)\n    this.showLabel = isLabelVisible(restruct, render.options, this)\n    this.color = 'black' // reset colour\n\n    let delta\n    let rightMargin\n    let leftMargin\n    let implh\n    let isHydrogen\n    let label\n    let index: any = null\n\n    if (this.showLabel) {\n      label = buildLabel(this, render.paper, ps, options)\n      delta = 0.5 * options.lineWidth\n      rightMargin =\n        (label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      leftMargin =\n        (-label.rbb.width / 2) * (options.zoom > 1 ? 1 : options.zoom)\n      implh = Math.floor(this.a.implicitH)\n      isHydrogen = label.text === 'H'\n      restruct.addReObjectPath(LayerMap.data, this.visel, label.path, ps, true)\n    }\n    if (options.showAtomIds) {\n      index = {}\n      index.text = aid.toString()\n      let idPos = this.hydrogenOnTheLeft\n        ? Vec2.lc(ps, 1, new Vec2({ x: -2, y: 0, z: 0 }), 6)\n        : Vec2.lc(ps, 1, new Vec2({ x: 2, y: 0, z: 0 }), 6)\n      if (this.showLabel) {\n        idPos = Vec2.lc(idPos, 1, new Vec2({ x: 1, y: -3, z: 0 }), 6)\n      }\n      index.path = render.paper.text(idPos.x, idPos.y, index.text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: '#070'\n      })\n      index.rbb = util.relBox(index.path.getBBox())\n      draw.recenterText(index.path, index.rbb)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, index.path, ps)\n    }\n    this.setHover(this.hover, render)\n\n    if (this.showLabel && !this.a.pseudo) {\n      let hydroIndex: any = null\n      if (isHydrogen && implh > 0) {\n        hydroIndex = showHydroIndex(this, render, implh, rightMargin)\n        rightMargin += hydroIndex.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydroIndex.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.radical !== 0) {\n        const radical = showRadical(this, render)\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          radical.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.isotope !== 0) {\n        const isotope = showIsotope(this, render, leftMargin)\n        leftMargin -= isotope.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          isotope.path,\n          ps,\n          true\n        )\n      }\n      if (\n        !isHydrogen &&\n        !this.a.alias &&\n        implh > 0 &&\n        displayHydrogen(options.showHydrogenLabels, this)\n      ) {\n        const data = showHydrogen(this, render, implh, {\n          hydrogen: {},\n          hydroIndex,\n          rightMargin,\n          leftMargin\n        })\n        const hydrogen = data.hydrogen\n        hydroIndex = data.hydroIndex\n        rightMargin = data.rightMargin\n        leftMargin = data.leftMargin\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          hydrogen.path,\n          ps,\n          true\n        )\n        if (hydroIndex != null) {\n          restruct.addReObjectPath(\n            LayerMap.data,\n            this.visel,\n            hydroIndex.path,\n            ps,\n            true\n          )\n        }\n      }\n\n      if (this.a.charge !== 0 && options.showCharge) {\n        const charge = showCharge(this, render, rightMargin)\n        rightMargin += charge.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          charge.path,\n          ps,\n          true\n        )\n      }\n      if (this.a.explicitValence >= 0 && options.showValence) {\n        const valence = showExplicitValence(this, render, rightMargin)\n        rightMargin += valence.rbb.width + delta\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          valence.path,\n          ps,\n          true\n        )\n      }\n\n      if (this.a.badConn && options.showValenceWarnings) {\n        const warning = showWarning(this, render, leftMargin, rightMargin)\n        restruct.addReObjectPath(\n          LayerMap.warnings,\n          this.visel,\n          warning.path,\n          ps,\n          true\n        )\n      }\n      if (index) {\n        /* eslint-disable no-mixed-operators */\n        pathAndRBoxTranslate(\n          index.path,\n          index.rbb,\n          -0.5 * label.rbb.width - 0.5 * index.rbb.width - delta,\n          0.3 * label.rbb.height\n        )\n        /* eslint-enable no-mixed-operators */\n      }\n    }\n\n    if (this.a.attpnt) {\n      const lsb = bisectLargestSector(this, restruct.molecule)\n      showAttpnt(this, render, lsb, restruct.addReObjectPath.bind(restruct))\n    }\n\n    const stereoLabel = this.a.stereoLabel // Enhanced Stereo\n    const aamText = getAamText(this)\n    const queryAttrsText = !this.a.pseudo ? getQueryAttrsText(this) : ''\n\n    // we render them together to avoid possible collisions\n\n    const fragmentId = Number(restruct.atoms.get(aid)?.a.fragment)\n    // TODO: fragment should not be null\n    const fragment = restruct.molecule.frags.get(fragmentId)\n\n    const text =\n      (shouldDisplayStereoLabel(\n        stereoLabel,\n        options.stereoLabelStyle,\n        fragment?.enhancedStereoFlag\n      )\n        ? `${stereoLabel}\\n`\n        : '') +\n      (queryAttrsText.length > 0 ? `${queryAttrsText}\\n` : '') +\n      (aamText.length > 0 ? `.${aamText}.` : '')\n    if (text.length > 0) {\n      const elem = Elements.get(this.a.label)\n      const aamPath = render.paper.text(ps.x, ps.y, text).attr({\n        font: options.font,\n        'font-size': options.fontszsub,\n        fill: options.atomColoring && elem ? ElementColor[this.a.label] : '#000'\n      })\n      if (stereoLabel) {\n        // use dom element to change color of stereo label which is the first element\n        // of just created text\n        // text -> tspan\n        const color = getStereoAtomColor(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill', color)\n        const opacity = getStereoAtomOpacity(render.options, stereoLabel)\n        aamPath.node.childNodes[0].setAttribute('fill-opacity', opacity)\n      }\n      const aamBox = util.relBox(aamPath.getBBox())\n      draw.recenterText(aamPath, aamBox)\n      const visel = this.visel\n      let t = 3\n      let dir = bisectLargestSector(this, restruct.molecule)\n      // estimate the shift to clear the atom label\n      for (let i = 0; i < visel.exts.length; ++i) {\n        t = Math.max(t, util.shiftRayBox(ps, dir, visel.exts[i].translate(ps)))\n      }\n      // estimate the shift backwards to account for the size of the aam/query text box itself\n      t += util.shiftRayBox(ps, dir.negated(), Box2Abs.fromRelBox(aamBox))\n      dir = dir.scaled(8 + t)\n      pathAndRBoxTranslate(aamPath, aamBox, dir.x, dir.y)\n      restruct.addReObjectPath(LayerMap.data, this.visel, aamPath, ps, true)\n    }\n\n    // Checking whether atom is highlighted and what's the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.atoms?.includes(aid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = { fill: highlightColor, stroke: 'none' }\n\n      const ps = Scale.obj2scaled(this.a.pp, restruct.render.options)\n      const path = render.paper\n        .circle(ps.x, ps.y, options.atomSelectionPlateRadius * 0.8)\n        .attr(style)\n\n      restruct.addReObjectPath(LayerMap.hovering, this.visel, path)\n    }\n  }\n}\n\nfunction getStereoAtomColor(options, stereoLabel) {\n  if (\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return '#000'\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nexport function getColorFromStereoLabel(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n\n  switch (stereoLabelType) {\n    case StereoLabel.And:\n      return options.colorOfAndCenters\n    case StereoLabel.Or:\n      return options.colorOfOrCenters\n    case StereoLabel.Abs:\n      return options.colorOfAbsoluteCenters\n    default:\n      return '#000'\n  }\n}\n\nfunction getStereoAtomOpacity(options, stereoLabel) {\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  const stereoLabelNumber = +stereoLabel.replace(stereoLabelType, '')\n  if (\n    !options.autoFadeOfStereoLabels ||\n    stereoLabelType === StereoLabel.Abs ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.BondsOnly\n  ) {\n    return 1\n  }\n  return Math.max(1 - (stereoLabelNumber - 1) / 10, StereoLabelMinOpacity)\n}\n\nfunction shouldDisplayStereoLabel(\n  stereoLabel,\n  labelStyle,\n  flag: StereoFlag | undefined\n): boolean {\n  if (!stereoLabel) {\n    return false\n  }\n  const stereoLabelType = stereoLabel.match(/\\D+/g)[0]\n  switch (labelStyle) {\n    // Off\n    case StereLabelStyleType.Off:\n      return false\n    // On\n    case StereLabelStyleType.On:\n      return true\n    // Classic\n    case StereLabelStyleType.Classic:\n      return !!(flag === StereoFlag.Mixed || stereoLabelType === StereoLabel.Or)\n    // IUPAC\n    case StereLabelStyleType.IUPAC:\n      return !!(\n        flag === StereoFlag.Mixed && stereoLabelType !== StereoLabel.Abs\n      )\n    default:\n      return true\n  }\n}\n\nfunction isLabelVisible(restruct, options, atom) {\n  const visibleTerminal =\n    options.showHydrogenLabels !== ShowHydrogenLabels.Off &&\n    options.showHydrogenLabels !== ShowHydrogenLabels.Hetero\n\n  const neighborsLength =\n    atom.a.neighbors.length === 0 ||\n    (atom.a.neighbors.length < 2 && visibleTerminal)\n\n  const shouldBeVisible =\n    neighborsLength ||\n    options.carbonExplicitly ||\n    atom.a.alias ||\n    atom.a.isotope !== 0 ||\n    atom.a.radical !== 0 ||\n    atom.a.charge !== 0 ||\n    atom.a.explicitValence >= 0 ||\n    atom.a.atomList !== null ||\n    atom.a.rglabel !== null ||\n    (atom.a.badConn && options.showValenceWarnings) ||\n    atom.a.label.toLowerCase() !== 'c'\n\n  if (shouldBeVisible) return true\n\n  if (atom.a.neighbors.length === 2) {\n    const nei1 = atom.a.neighbors[0]\n    const nei2 = atom.a.neighbors[1]\n    const hb1 = restruct.molecule.halfBonds.get(nei1)\n    const hb2 = restruct.molecule.halfBonds.get(nei2)\n    const bond1 = restruct.bonds.get(hb1.bid)\n    const bond2 = restruct.bonds.get(hb2.bid)\n\n    const sameNotStereo =\n      bond1.b.type === bond2.b.type &&\n      bond1.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      bond2.b.stereo === Bond.PATTERN.STEREO.NONE\n\n    if (sameNotStereo && Math.abs(Vec2.cross(hb1.dir, hb2.dir)) < 0.2) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction displayHydrogen(hydrogenLabels, atom) {\n  return (\n    hydrogenLabels === ShowHydrogenLabels.On ||\n    (hydrogenLabels === ShowHydrogenLabels.Terminal &&\n      atom.a.neighbors.length < 2) ||\n    (hydrogenLabels === ShowHydrogenLabels.Hetero &&\n      atom.label.text.toLowerCase() !== 'c') ||\n    (hydrogenLabels === ShowHydrogenLabels.TerminalAndHetero &&\n      (atom.a.neighbors.length < 2 || atom.label.text.toLowerCase() !== 'c'))\n  )\n}\n\nfunction setHydrogenPos(struct, atom) {\n  // check where should the hydrogen be put on the left of the label\n  if (atom.a.neighbors.length === 0) {\n    const element = Elements.get(atom.a.label)\n    return !element || Boolean(element.leftH)\n  }\n\n  let yl = 1\n  let yr = 1\n  let nl = 0\n  let nr = 0\n\n  atom.a.neighbors.forEach((nei) => {\n    const d = struct.halfBonds.get(nei).dir\n\n    if (d.x <= 0) {\n      yl = Math.min(yl, Math.abs(d.y))\n      nl++\n    } else {\n      yr = Math.min(yr, Math.abs(d.y))\n      nr++\n    }\n  })\n\n  return yl < 0.51 || yr < 0.51 ? yr < yl : nr > nl\n}\n\nfunction buildLabel(\n  atom: ReAtom,\n  paper: any,\n  ps: Vec2,\n  options: any\n): ElemAttr {\n  // eslint-disable-line max-statements\n  let label: any = {}\n  label.text = getLabelText(atom.a)\n\n  if (label.text === '') label = 'R#' // for structures that missed 'M  RGP' tag in molfile\n\n  if (label.text === atom.a.label) {\n    const element = Elements.get(label.text)\n    if (options.atomColoring && element) {\n      atom.color = ElementColor[label.text] || '#000'\n    }\n  }\n\n  label.path = paper.text(ps.x, ps.y, label.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color,\n    'font-style': atom.a.pseudo ? 'italic' : ''\n  })\n\n  label.rbb = util.relBox(label.path.getBBox())\n  draw.recenterText(label.path, label.rbb)\n\n  if (atom.a.atomList !== null) {\n    pathAndRBoxTranslate(\n      label.path,\n      label.rbb,\n      ((atom.hydrogenOnTheLeft ? -1 : 1) *\n        (label.rbb.width - label.rbb.height)) /\n        2,\n      0\n    )\n  }\n\n  atom.label = label\n  return label\n}\n\nfunction getLabelText(atom) {\n  if (atom.atomList !== null) return atom.atomList.label()\n\n  if (atom.pseudo) return atom.pseudo\n\n  if (atom.alias) return atom.alias\n\n  if (atom.label === 'R#' && atom.rglabel !== null) {\n    let text = ''\n\n    for (let rgi = 0; rgi < 32; rgi++) {\n      if (atom.rglabel & (1 << rgi)) {\n        // eslint-disable-line max-depth\n        text += 'R' + (rgi + 1).toString()\n      }\n    }\n\n    return text\n  }\n\n  return atom.label\n}\n\nfunction showHydroIndex(atom, render, implh, rightMargin): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydroIndex: any = {}\n  hydroIndex.text = (implh + 1).toString()\n  hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n  draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    hydroIndex.path,\n    hydroIndex.rbb,\n    rightMargin + 0.5 * hydroIndex.rbb.width + delta,\n    0.2 * atom.label.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return hydroIndex\n}\n\nfunction showRadical(atom: ReAtom, render: Render): Omit<ElemAttr, 'text'> {\n  const ps: Vec2 = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const paper: any = render.paper\n  const radical: any = {}\n  let hshift\n  switch (atom.a.radical) {\n    case 1:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalBullet(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalBullet(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('fill', atom.color)\n      break\n    case 2:\n      radical.path = paper.set()\n      radical.path.push(draw.radicalBullet(paper, ps, options))\n      radical.path.attr('fill', atom.color)\n      break\n    case 3:\n      radical.path = paper.set()\n      hshift = 1.6 * options.lineWidth\n      radical.path.push(\n        draw.radicalCap(paper, ps.add(new Vec2(-hshift, 0)), options),\n        draw.radicalCap(paper, ps.add(new Vec2(hshift, 0)), options)\n      )\n      radical.path.attr('stroke', atom.color)\n      break\n    default:\n      break\n  }\n  radical.rbb = util.relBox(radical.path.getBBox())\n  let vshift = -0.5 * (atom.label!.rbb.height + radical.rbb.height)\n  if (atom.a.radical === 3) vshift -= options.lineWidth / 2\n  pathAndRBoxTranslate(radical.path, radical.rbb, 0, vshift)\n  return radical\n}\n\nfunction showIsotope(\n  atom: ReAtom,\n  render: Render,\n  leftMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const isotope: any = {}\n  isotope.text = atom.a.isotope.toString()\n  isotope.path = render.paper.text(ps.x, ps.y, isotope.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  isotope.rbb = util.relBox(isotope.path.getBBox())\n  draw.recenterText(isotope.path, isotope.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    isotope.path,\n    isotope.rbb,\n    leftMargin - 0.5 * isotope.rbb.width - delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return isotope\n}\n\nfunction showCharge(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const charge: any = {}\n  charge.text = ''\n  const absCharge = Math.abs(atom.a.charge)\n  if (absCharge !== 1) charge.text = absCharge.toString()\n  if (atom.a.charge < 0) charge.text += '\\u2013'\n  else charge.text += '+'\n\n  charge.path = render.paper.text(ps.x, ps.y, charge.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  charge.rbb = util.relBox(charge.path.getBBox())\n  draw.recenterText(charge.path, charge.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    charge.path,\n    charge.rbb,\n    rightMargin + 0.5 * charge.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return charge\n}\n\nfunction showExplicitValence(\n  atom: ReAtom,\n  render: Render,\n  rightMargin: number\n): ElemAttr {\n  const mapValence = {\n    0: '0',\n    1: 'I',\n    2: 'II',\n    3: 'III',\n    4: 'IV',\n    5: 'V',\n    6: 'VI',\n    7: 'VII',\n    8: 'VIII',\n    9: 'IX',\n    10: 'X',\n    11: 'XI',\n    12: 'XII',\n    13: 'XIII',\n    14: 'XIV'\n  }\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const valence: any = {}\n  valence.text = mapValence[atom.a.explicitValence]\n  if (!valence.text) {\n    throw new Error('invalid valence ' + atom.a.explicitValence.toString())\n  }\n  valence.text = '(' + valence.text + ')'\n  valence.path = render.paper.text(ps.x, ps.y, valence.text).attr({\n    font: options.font,\n    'font-size': options.fontszsub,\n    fill: atom.color\n  })\n  valence.rbb = util.relBox(valence.path.getBBox())\n  draw.recenterText(valence.path, valence.rbb)\n  /* eslint-disable no-mixed-operators */\n  pathAndRBoxTranslate(\n    valence.path,\n    valence.rbb,\n    rightMargin + 0.5 * valence.rbb.width + delta,\n    -0.3 * atom.label!.rbb.height\n  )\n  /* eslint-enable no-mixed-operators */\n  return valence\n}\n\nfunction showHydrogen(\n  atom: ReAtom,\n  render: Render,\n  implh: number,\n  data: {\n    hydrogen: any\n    hydroIndex: number\n    rightMargin: number\n    leftMargin: number\n  }\n): {\n  hydrogen: ElemAttr\n  hydroIndex: ElemAttr\n  rightMargin: number\n  leftMargin: number\n} {\n  // eslint-disable-line max-statements\n  let hydroIndex: any = data.hydroIndex\n  const hydrogenLeft = atom.hydrogenOnTheLeft\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const delta = 0.5 * options.lineWidth\n  const hydrogen = data.hydrogen\n  hydrogen.text = 'H'\n  hydrogen.path = render.paper.text(ps.x, ps.y, hydrogen.text).attr({\n    font: options.font,\n    'font-size': options.fontsz,\n    fill: atom.color\n  })\n  hydrogen.rbb = util.relBox(hydrogen.path.getBBox())\n  draw.recenterText(hydrogen.path, hydrogen.rbb)\n  if (!hydrogenLeft) {\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.rightMargin + 0.5 * hydrogen.rbb.width + delta,\n      0\n    )\n    data.rightMargin += hydrogen.rbb.width + delta\n  }\n  if (implh > 1) {\n    hydroIndex = {}\n    hydroIndex.text = implh.toString()\n    hydroIndex.path = render.paper.text(ps.x, ps.y, hydroIndex.text).attr({\n      font: options.font,\n      'font-size': options.fontszsub,\n      fill: atom.color\n    })\n    hydroIndex.rbb = util.relBox(hydroIndex.path.getBBox())\n    draw.recenterText(hydroIndex.path, hydroIndex.rbb)\n    if (!hydrogenLeft) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.rightMargin +\n          0.5 * hydroIndex.rbb.width * (options.zoom > 1 ? 1 : options.zoom) +\n          delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.rightMargin += hydroIndex.rbb.width + delta\n    }\n  }\n  if (hydrogenLeft) {\n    if (hydroIndex != null) {\n      pathAndRBoxTranslate(\n        hydroIndex.path,\n        hydroIndex.rbb,\n        data.leftMargin - 0.5 * hydroIndex.rbb.width - delta,\n        0.2 * atom.label!.rbb.height\n      )\n      data.leftMargin -= hydroIndex.rbb.width + delta\n    }\n    pathAndRBoxTranslate(\n      hydrogen.path,\n      hydrogen.rbb,\n      data.leftMargin -\n        0.5 *\n          hydrogen.rbb.width *\n          (implh > 1 && options.zoom < 1 ? options.zoom : 1) -\n        delta,\n      0\n    )\n    data.leftMargin -= hydrogen.rbb.width + delta\n  }\n  return Object.assign(data, { hydrogen, hydroIndex })\n}\n\nfunction showWarning(\n  atom,\n  render,\n  leftMargin,\n  rightMargin\n): { rbb: DOMRect; path: any } {\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const delta = 0.5 * render.options.lineWidth\n  const tfx = util.tfx\n  const warning: any = {}\n  const y = ps.y + atom.label.rbb.height / 2 + delta\n  warning.path = render.paper\n    .path(\n      'M{0},{1}L{2},{3}',\n      tfx(ps.x + leftMargin),\n      tfx(y),\n      tfx(ps.x + rightMargin),\n      tfx(y)\n    )\n    .attr(render.options.lineattr)\n    .attr({ stroke: '#F00' })\n  warning.rbb = util.relBox(warning.path.getBBox())\n  return warning\n}\n\nfunction showAttpnt(atom, render, lsb, addReObjectPath) {\n  // eslint-disable-line max-statements\n  const asterisk = '∗'\n  const ps = Scale.obj2scaled(atom.a.pp, render.options)\n  const options = render.options\n  const tfx = util.tfx\n  let i, j\n  for (i = 0; i < 4; ++i) {\n    let attpntText = ''\n    if (atom.a.attpnt & (1 << i)) {\n      if (attpntText.length > 0) attpntText += ' '\n      attpntText += asterisk\n      for (j = 0; j < (i === 0 ? 0 : i + 1); ++j) attpntText += \"'\"\n      let pos0 = new Vec2(ps)\n      let pos1 = ps.addScaled(lsb, 0.7 * options.scale)\n\n      const attpntPath1 = render.paper.text(pos1.x, pos1.y, attpntText).attr({\n        font: options.font,\n        'font-size': options.fontsz,\n        fill: atom.color\n      })\n      const attpntRbb = util.relBox(attpntPath1.getBBox())\n      draw.recenterText(attpntPath1, attpntRbb)\n\n      const lsbn = lsb.negated()\n      /* eslint-disable no-mixed-operators */\n      pos1 = pos1.addScaled(\n        lsbn,\n        util.shiftRayBox(pos1, lsbn, Box2Abs.fromRelBox(attpntRbb)) +\n          options.lineWidth / 2\n      )\n      /* eslint-enable no-mixed-operators */\n      pos0 = shiftBondEnd(atom, pos0, lsb, options.lineWidth)\n      const n = lsb.rotateSC(1, 0)\n      const arrowLeft = pos1\n        .addScaled(n, 0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const arrowRight = pos1\n        .addScaled(n, -0.05 * options.scale)\n        .addScaled(lsbn, 0.09 * options.scale)\n      const attpntPath = render.paper.set()\n      attpntPath.push(\n        attpntPath1,\n        render.paper\n          .path(\n            'M{0},{1}L{2},{3}M{4},{5}L{2},{3}L{6},{7}',\n            tfx(pos0.x),\n            tfx(pos0.y),\n            tfx(pos1.x),\n            tfx(pos1.y),\n            tfx(arrowLeft.x),\n            tfx(arrowLeft.y),\n            tfx(arrowRight.x),\n            tfx(arrowRight.y)\n          )\n          .attr(render.options.lineattr)\n          .attr({ 'stroke-width': options.lineWidth / 2 })\n      )\n      addReObjectPath(LayerMap.indices, atom.visel, attpntPath, ps)\n      lsb = lsb.rotate(Math.PI / 6)\n    }\n  }\n}\n\n// function getStereoLabelText(atom, aid, render) {\n// \tconst struct = render.ctab.molecule;\n// \tconst frag = struct.frags.get(atom.a.fragment);\n// \tconst stereo = frag.getStereoAtomMark(aid);\n// \tif (!stereo.type) return null;\n//\n// \treturn stereo.type + (stereo.number || '');\n// }\n\nfunction getAamText(atom) {\n  let aamText = ''\n  if (atom.a.aam > 0) aamText += atom.a.aam\n  if (atom.a.invRet > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.invRet === 1) aamText += 'Inv'\n    else if (atom.a.invRet === 2) aamText += 'Ret'\n    else throw new Error('Invalid value for the invert/retain flag')\n  }\n  if (atom.a.exactChangeFlag > 0) {\n    if (aamText.length > 0) aamText += ','\n    if (atom.a.exactChangeFlag === 1) aamText += 'ext'\n    else throw new Error('Invalid value for the exact change flag')\n  }\n  return aamText\n}\n\nfunction getQueryAttrsText(atom) {\n  let queryAttrsText = ''\n  if (atom.a.ringBondCount !== 0) {\n    if (atom.a.ringBondCount > 0) {\n      queryAttrsText += 'rb' + atom.a.ringBondCount.toString()\n    } else if (atom.a.ringBondCount === -1) queryAttrsText += 'rb0'\n    else if (atom.a.ringBondCount === -2) queryAttrsText += 'rb*'\n    else throw new Error('Ring bond count invalid')\n  }\n  if (atom.a.substitutionCount !== 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.substitutionCount > 0) {\n      queryAttrsText += 's' + atom.a.substitutionCount.toString()\n    } else if (atom.a.substitutionCount === -1) queryAttrsText += 's0'\n    else if (atom.a.substitutionCount === -2) queryAttrsText += 's*'\n    else throw new Error('Substitution count invalid')\n  }\n  if (atom.a.unsaturatedAtom > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    if (atom.a.unsaturatedAtom === 1) queryAttrsText += 'u'\n    else throw new Error('Unsaturated atom invalid value')\n  }\n  if (atom.a.hCount > 0) {\n    if (queryAttrsText.length > 0) queryAttrsText += ','\n    queryAttrsText += 'H' + (atom.a.hCount - 1).toString()\n  }\n  return queryAttrsText\n}\n\nfunction pathAndRBoxTranslate(path, rbb, x, y) {\n  path.translateAbs(x, y)\n  rbb.x += x\n  rbb.y += y\n}\n\nfunction bisectLargestSector(atom: ReAtom, struct: Struct) {\n  let angles: Array<number> = []\n  atom.a.neighbors.forEach((hbid) => {\n    const hb = struct.halfBonds.get(hbid)\n    hb && angles.push(hb.ang)\n  })\n  angles = angles.sort((a, b) => a - b)\n  const da: Array<number> = []\n  for (let i = 0; i < angles.length - 1; ++i) {\n    da.push(angles[(i + 1) % angles.length] - angles[i])\n  }\n  da.push(angles[0] - angles[angles.length - 1] + 2 * Math.PI)\n  let daMax = 0\n  let ang = -Math.PI / 2\n  for (let i = 0; i < angles.length; ++i) {\n    if (da[i] > daMax) {\n      daMax = da[i]\n      ang = angles[i] + da[i] / 2\n    }\n  }\n  return new Vec2(Math.cos(ang), Math.sin(ang))\n}\n\nfunction shiftBondEnd(atom, pos0, dir, margin) {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nexport default ReAtom\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  FunctionalGroup,\n  HalfBond,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport { LayerMap, StereoColoringType } from './generalEnumTypes'\nimport ReAtom, { getColorFromStereoLabel } from './reatom'\n\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReBond extends ReObject {\n  b: Bond\n  doubleBondShift: number\n  path: any\n  neihbid1 = -1\n  neihbid2 = -1\n  boldStereo?: boolean\n  rbb?: { x: number; y: number; width: number; height: number }\n\n  constructor(bond: Bond) {\n    super('bond')\n    this.b = bond // TODO rename b to item\n    this.doubleBondShift = 0\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  drawHover(render: Render) {\n    const ret = this.makeHoverPlate(render)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeHoverPlate(render: Render) {\n    const options = render.options\n    bondRecalc(this, render.ctab, options)\n    const bond = this.b\n    const sgroups = render.ctab.sgroups\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return render.paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.hoverStyle)\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any) {\n    bondRecalc(this, restruct, options)\n    const bond = this.b\n    const sgroups = restruct.render.ctab.sgroups\n    const functionalGroups = restruct.render.ctab.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        true\n      )\n    ) {\n      return null\n    }\n\n    const c = Scale.obj2scaled(this.b.center, options)\n    return paper\n      .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\n      .attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, bid: number, options: any): void {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const struct = restruct.molecule\n    const bond = restruct.molecule.bonds.get(bid)\n    const sgroups = restruct.molecule.sgroups\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isBondInContractedFunctionalGroup(\n        bond,\n        sgroups,\n        functionalGroups,\n        false\n      )\n    ) {\n      return\n    }\n\n    const paper = render.paper\n    const hb1 =\n      this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null\n    const hb2 =\n      this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null\n\n    checkStereoBold(bid, this, restruct)\n    bondRecalc(this, restruct, options)\n    setDoubleBondShift(this, struct)\n    if (!hb1 || !hb2) return\n    this.path = getBondPath(restruct, this, hb1, hb2)\n    this.rbb = util.relBox(this.path.getBBox())\n    restruct.addReObjectPath(LayerMap.data, this.visel, this.path, null, true)\n    const reactingCenter: any = {}\n    reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2)\n    if (reactingCenter.path) {\n      reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        reactingCenter.path,\n        null,\n        true\n      )\n    }\n    const topology: any = {}\n    topology.path = getTopologyMark(render, this, hb1, hb2)\n    if (topology.path) {\n      topology.rbb = util.relBox(topology.path.getBBox())\n      restruct.addReObjectPath(\n        LayerMap.data,\n        this.visel,\n        topology.path,\n        null,\n        true\n      )\n    }\n    this.setHover(this.hover, render)\n\n    let ipath = null\n    const bondIdxOff = options.subFontSize * 0.6\n    if (options.showBondIds) {\n      ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm)\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showHalfBondIds) {\n      ipath = getIdsPath(\n        this.b.hb1!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.8,\n        0.2,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        this.b.hb2!,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.2,\n        0.8,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n    if (options.showLoopIds && !options.showBondIds) {\n      ipath = getIdsPath(\n        hb1.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb2.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n      ipath = getIdsPath(\n        hb2.loop,\n        paper,\n        hb1,\n        hb2,\n        bondIdxOff,\n        0.5,\n        0.5,\n        hb1.norm\n      )\n      restruct.addReObjectPath(LayerMap.indices, this.visel, ipath)\n    }\n\n    // Checking whether bond is highlighted and what is the last color\n    const highlights = restruct.molecule.highlights\n    let isHighlighted = false\n    let highlightColor = ''\n    highlights.forEach((highlight) => {\n      const hasCurrentHighlight = highlight.bonds?.includes(bid)\n      isHighlighted = isHighlighted || hasCurrentHighlight\n      if (hasCurrentHighlight) {\n        highlightColor = highlight.color\n      }\n    })\n\n    // Drawing highlight\n    if (isHighlighted) {\n      const style = {\n        fill: highlightColor,\n        stroke: highlightColor,\n        'stroke-width': options.lineattr['stroke-width'] * 7,\n        'stroke-linecap': 'round'\n      }\n\n      const c = Scale.obj2scaled(this.b.center, restruct.render.options)\n\n      const highlightPath = getHighlightPath(restruct, hb1, hb2)\n      highlightPath.attr(style)\n\n      restruct.addReObjectPath(\n        LayerMap.hovering,\n        this.visel,\n        highlightPath,\n        c,\n        true\n      )\n    }\n  }\n}\n\nfunction getHighlightPath(restruct: ReStruct, hb1: HalfBond, hb2: HalfBond) {\n  const beginning = { x: hb1.p.x, y: hb1.p.y }\n  const end = { x: hb2.p.x, y: hb2.p.y }\n\n  const paper = restruct.render.paper\n\n  const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`\n\n  const path = paper.path(pathString)\n\n  return path\n}\n\nfunction findIncomingStereoUpBond(\n  atom: Atom,\n  bid0: number,\n  includeBoldStereoBond: boolean,\n  restruct: ReStruct\n): number {\n  return atom.neighbors.findIndex((hbid) => {\n    const hb = restruct.molecule.halfBonds.get(hbid)\n\n    if (!hb || hb.bid === bid0) return false\n\n    const neibond = restruct.bonds.get(hb.bid)\n\n    if (!neibond) return false\n    const singleUp =\n      neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.UP\n\n    if (singleUp) {\n      return (\n        neibond.b.end === hb.begin ||\n        (neibond.boldStereo && includeBoldStereoBond)\n      )\n    }\n\n    return !!(\n      neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\n      neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n      includeBoldStereoBond &&\n      neibond.boldStereo\n    )\n  })\n}\n\nfunction findIncomingUpBonds(\n  bid0: number,\n  bond: ReBond,\n  restruct: ReStruct\n): void {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    if (!atom) return -1\n    const pos = findIncomingStereoUpBond(atom, bid0, true, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n\n  bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\n    ? -1\n    : halfbonds[0]\n  bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1]\n}\n\nfunction checkStereoBold(bid0, bond, restruct) {\n  const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const pos = findIncomingStereoUpBond(atom, bid0, false, restruct)\n    return pos < 0 ? -1 : atom.neighbors[pos]\n  })\n  bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0\n}\n\nfunction getBondPath(\n  restruct: ReStruct,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  let path = null\n  const render = restruct.render\n  const struct = restruct.molecule\n  const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel\n  const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel\n\n  switch (bond.b.type) {\n    case Bond.PATTERN.TYPE.SINGLE:\n      switch (bond.b.stereo) {\n        case Bond.PATTERN.STEREO.UP:\n          findIncomingUpBonds(hb1.bid, bond, restruct)\n          if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\n            path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n          } else path = getBondSingleUpPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.DOWN:\n          path = getBondSingleDownPath(render, hb1, hb2, bond, struct)\n          break\n        case Bond.PATTERN.STEREO.EITHER:\n          path = getBondSingleEitherPath(render, hb1, hb2, bond, struct)\n          break\n        default:\n          path = draw.bondSingle(\n            render.paper,\n            hb1,\n            hb2,\n            render.options,\n            getStereoBondColor(render.options, bond, struct)\n          )\n          break\n      }\n      break\n    case Bond.PATTERN.TYPE.DOUBLE:\n      findIncomingUpBonds(hb1.bid, bond, restruct)\n      if (\n        bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\n        bond.boldStereo &&\n        bond.neihbid1 >= 0 &&\n        bond.neihbid2 >= 0\n      ) {\n        path = getBondDoubleStereoBoldPath(\n          render,\n          hb1,\n          hb2,\n          bond,\n          struct,\n          shiftA,\n          shiftB\n        )\n      } else path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.TRIPLE:\n      path = draw.bondTriple(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.AROMATIC: {\n      const inAromaticLoop =\n        (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\n        (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic)\n      path = inAromaticLoop\n        ? draw.bondSingle(render.paper, hb1, hb2, render.options)\n        : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    }\n    case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\n      path = getSingleOrDoublePath(render, hb1, hb2)\n      break\n    case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\n      path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB)\n      break\n    case Bond.PATTERN.TYPE.ANY:\n      path = draw.bondAny(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.HYDROGEN:\n      path = draw.bondHydrogen(render.paper, hb1, hb2, render.options)\n      break\n    case Bond.PATTERN.TYPE.DATIVE:\n      path = draw.bondDative(render.paper, hb1, hb2, render.options)\n      break\n    default:\n      throw new Error('Bond type ' + bond.b.type + ' not supported')\n  }\n  return path\n}\n\n/* Get Path */\nfunction getBondSingleUpPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const options = render.options\n  const bsp = 0.7 * options.stereoBond\n  let b2 = b.addScaled(n, bsp)\n  let b3 = b.addScaled(n, -bsp)\n  if (bond.neihbid2 >= 0) {\n    // if the end is shared with another up-bond heading this way\n    const coords = stereoUpBondGetCoordinates(\n      hb2,\n      bond.neihbid2,\n      options.stereoBond,\n      struct\n    )\n    b2 = coords[0]\n    b3 = coords[1]\n  }\n  return draw.bondSingleUp(\n    render.paper,\n    a,\n    b2,\n    b3,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getStereoBondColor(\n  options: any,\n  bond: ReBond,\n  struct: Struct\n): string {\n  const defaultColor = '#000'\n\n  if (bond.b.stereo === 0) return defaultColor\n\n  const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel\n  const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel\n\n  let stereoLabel = ''\n  if (beginAtomStereoLabel && !endAtomStereoLabel) {\n    stereoLabel = beginAtomStereoLabel\n  } else if (!beginAtomStereoLabel && endAtomStereoLabel) {\n    stereoLabel = endAtomStereoLabel\n  }\n\n  if (\n    // if no stereolabel presents or presents in both then use default color\n    !stereoLabel ||\n    options.colorStereogenicCenters === StereoColoringType.Off ||\n    options.colorStereogenicCenters === StereoColoringType.LabelsOnly\n  ) {\n    return defaultColor\n  }\n\n  return getColorFromStereoLabel(options, stereoLabel)\n}\n\nfunction getBondSingleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  // eslint-disable-line max-params\n  const options = render.options\n  const coords1 = stereoUpBondGetCoordinates(\n    hb1,\n    bond.neihbid1,\n    options.stereoBond,\n    struct\n  )\n  const coords2 = stereoUpBondGetCoordinates(\n    hb2,\n    bond.neihbid2,\n    options.stereoBond,\n    struct\n  )\n  const a1 = coords1[0]\n  const a2 = coords1[1]\n  const a3 = coords2[0]\n  const a4 = coords2[1]\n  return draw.bondSingleStereoBold(\n    render.paper,\n    a1,\n    a2,\n    a3,\n    a4,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoubleStereoBoldPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = bond.doubleBondShift\n  const bsp = 1.5 * render.options.stereoBond\n  let b1 = a.addScaled(n, bsp * shift)\n  let b2 = b.addScaled(n, bsp * shift)\n  if (shift > 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        bsp * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  const sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct)\n  return draw.bondDoubleStereoBold(\n    render.paper,\n    sgBondPath,\n    b1,\n    b2,\n    render.options,\n    getStereoBondColor(render.options, bond, struct)\n  )\n}\n\nfunction getBondLineShift(cos: number, sin: number): number {\n  if (sin < 0 || Math.abs(cos) > 0.9) return 0\n  return sin / (1 - cos)\n}\n\nfunction stereoUpBondGetCoordinates(\n  hb: HalfBond,\n  neihbid: number,\n  bondSpace: any,\n  struct: Struct\n): [Vec2, Vec2] {\n  const neihb = struct.halfBonds.get(neihbid)\n  const cos = Vec2.dot(hb.dir, neihb!.dir)\n  const sin = Vec2.cross(hb.dir, neihb!.dir)\n  const cosHalf = Math.sqrt(0.5 * (1 - cos))\n  const biss = neihb!.dir.rotateSC(\n    (sin >= 0 ? -1 : 1) * cosHalf,\n    Math.sqrt(0.5 * (1 + cos))\n  )\n\n  const denomAdd = 0.3\n  const scale = 0.7\n  const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd))\n  const a2 = hb.p.addScaled(\n    biss.negated(),\n    (scale * bondSpace) / (cosHalf + denomAdd)\n  )\n  return sin > 0 ? [a1, a2] : [a2, a1]\n}\n\nfunction getBondSingleDownPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length() + 0.2\n  d = d.normalized()\n  const interval = 1.2 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 1)\n  return draw.bondSingleDown(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondSingleEitherPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  struct: Struct\n) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n  let d = b.sub(a)\n  const len = d.length()\n  d = d.normalized()\n  const interval = 0.6 * options.lineWidth\n  const nlines =\n    Math.max(\n      Math.floor((len - options.lineWidth) / (options.lineWidth + interval)),\n      0\n    ) + 2\n  const step = len / (nlines - 0.5)\n  return draw.bondSingleEither(\n    render.paper,\n    hb1,\n    d,\n    nlines,\n    step,\n    options,\n    getStereoBondColor(options, bond, struct)\n  )\n}\n\nfunction getBondDoublePath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params, max-statements\n  const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS\n\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const shift = cisTrans ? 0 : bond.doubleBondShift\n\n  const options = render.options\n  const bsp = options.bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n\n  let a1 = a.addScaled(n, s1)\n  let b1 = b.addScaled(n, s1)\n  let a2 = a.addScaled(n, s2)\n  let b2 = b.addScaled(n, s2)\n\n  if (shift > 0) {\n    if (shiftA) {\n      a1 = a1.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b1 = b1.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n\n  return draw.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options)\n}\n\nfunction getSingleOrDoublePath(render: Render, hb1: HalfBond, hb2: HalfBond) {\n  const a = hb1.p\n  const b = hb2.p\n  const options = render.options\n\n  let nSect =\n    Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed())\n  if (!(nSect & 1)) nSect += 1\n  return draw.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options)\n}\n\nfunction getBondAromaticPath(\n  render: Render,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bond: ReBond,\n  shiftA: boolean,\n  shiftB: boolean\n) {\n  // eslint-disable-line max-params\n  const dashdotPattern = [0.125, 0.125, 0.005, 0.125]\n  let mark: number | null = null\n  let dash: number[] | null = null\n  const options = render.options\n  const bondShift = bond.doubleBondShift\n\n  if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\n    mark = bondShift > 0 ? 1 : 2\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\n    mark = 3\n    dash = dashdotPattern.map((v) => v * options.scale)\n  }\n  const paths = getAromaticBondPaths(\n    hb1,\n    hb2,\n    bondShift,\n    shiftA,\n    shiftB,\n    options.bondSpace,\n    mark,\n    dash\n  )\n  return draw.bondAromatic(render.paper, paths, bondShift, options)\n}\n\nfunction getAromaticBondPaths(\n  hb1: HalfBond,\n  hb2: HalfBond,\n  shift: number,\n  shiftA: boolean,\n  shiftB: boolean,\n  bondSpace: number,\n  mask: number | null,\n  dash: number[] | null\n) {\n  // eslint-disable-line max-params, max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const n = hb1.norm\n  const bsp = bondSpace / 2\n  const s1 = bsp + shift * bsp\n  const s2 = -bsp + shift * bsp\n  let a2 = a.addScaled(n, s1)\n  let b2 = b.addScaled(n, s1)\n  let a3 = a.addScaled(n, s2)\n  let b3 = b.addScaled(n, s2)\n  if (shift > 0) {\n    if (shiftA) {\n      a2 = a2.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin)\n      )\n    }\n    if (shiftB) {\n      b2 = b2.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin)\n      )\n    }\n  } else if (shift < 0) {\n    if (shiftA) {\n      a3 = a3.addScaled(\n        hb1.dir,\n        bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin)\n      )\n    }\n    if (shiftB) {\n      b3 = b3.addScaled(\n        hb1.dir,\n        -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin)\n      )\n    }\n  }\n  return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash)\n}\n\nfunction getReactingCenterPath(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  const n = d.rotateSC(1, 0)\n\n  const p: Array<Vec2> = []\n\n  const lw = render.options.lineWidth\n  const bs = render.options.bondSpace / 2\n  const alongIntRc = lw // half interval along for CENTER\n  const alongIntMadeBroken = 2 * lw // half interval between along for MADE_OR_BROKEN\n  const alongSz = 1.5 * bs // half size along for CENTER\n  const acrossInt = 1.5 * bs // half interval across for CENTER\n  const acrossSz = 3.0 * bs // half size across for all\n  const tiltTan = 0.2 // tangent of the tilt angle\n\n  switch (bond.b.reactingCenterStatus) {\n    case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\n      p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.CENTER: // #\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, acrossSz)\n          .addScaled(d, tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(\n        c\n          .addScaled(n, -acrossSz)\n          .addScaled(d, -tiltTan * acrossSz)\n          .addScaled(d, -alongIntRc)\n      )\n      p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt))\n      p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt))\n      p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt))\n      break\n    // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      break\n    case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\n      p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken))\n      p.push(c.addScaled(n, acrossSz))\n      p.push(c.addScaled(n, -acrossSz))\n      break\n    default:\n      return null\n  }\n  return draw.reactingCenter(render.paper, p, render.options)\n}\n\nfunction getTopologyMark(\n  render: Render,\n  bond: ReBond,\n  hb1: HalfBond,\n  hb2: HalfBond\n) {\n  // eslint-disable-line max-statements\n  const options = render.options\n  let mark: string | null = null\n\n  if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING) mark = 'rng'\n  else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN) mark = 'chn'\n  else return null\n\n  const a = hb1.p\n  const b = hb2.p\n  const c = b.add(a).scaled(0.5)\n  const d = b.sub(a).normalized()\n  let n = d.rotateSC(1, 0)\n  let fixed = options.lineWidth\n  if (bond.doubleBondShift > 0) n = n.scaled(-bond.doubleBondShift)\n  else if (bond.doubleBondShift === 0) fixed += options.bondSpace / 2\n\n  const s = new Vec2(2, 1).scaled(options.bondSpace)\n  if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE) fixed += options.bondSpace\n  const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)))\n\n  return draw.topologyMark(render.paper, p, mark, options)\n}\n\nfunction getIdsPath(\n  bid: number,\n  paper: any,\n  hb1: HalfBond,\n  hb2: HalfBond,\n  bondIdxOff: number,\n  param1: number,\n  param2: number,\n  norm: Vec2\n) {\n  // eslint-disable-line max-params\n  const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff)\n  const ipath = paper.text(pb.x, pb.y, bid.toString())\n  const irbb = util.relBox(ipath.getBBox())\n  draw.recenterText(ipath, irbb)\n  return ipath\n}\n/* ----- */\n\nfunction setDoubleBondShift(bond: ReBond, struct: Struct): void {\n  const hb1 = bond.b.hb1\n  const hb2 = bond.b.hb2\n\n  if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n    return\n  }\n\n  const loop1 = struct.halfBonds.get(hb1)!.loop\n  const loop2 = struct.halfBonds.get(hb2)!.loop\n  if (loop1 >= 0 && loop2 >= 0) {\n    const d1 = struct.loops.get(loop1)!.dblBonds\n    const d2 = struct.loops.get(loop2)!.dblBonds\n    const n1 = struct.loops.get(loop1)!.hbs.length\n    const n2 = struct.loops.get(loop2)!.hbs.length\n    bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2)\n  } else if (loop1 >= 0) {\n    bond.doubleBondShift = -1\n  } else if (loop2 >= 0) {\n    bond.doubleBondShift = 1\n  } else {\n    bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond)\n  }\n}\n\nfunction bondRecalc(bond: ReBond, restruct: ReStruct, options: any): void {\n  const render = restruct.render\n  const atom1 = restruct.atoms.get(bond.b.begin)\n  const atom2 = restruct.atoms.get(bond.b.end)\n\n  if (\n    !atom1 ||\n    !atom2 ||\n    bond.b.hb1 === undefined ||\n    bond.b.hb2 === undefined\n  ) {\n    return\n  }\n\n  const p1 = Scale.obj2scaled(atom1.a.pp, render.options)\n  const p2 = Scale.obj2scaled(atom2.a.pp, render.options)\n  const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n  const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n  if (!hb1?.dir || !hb2?.dir) return\n\n  hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth)\n  hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth)\n  bond.b.center = Vec2.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5)\n  bond.b.len = Vec2.dist(p1, p2)\n  bond.b.sb = options.lineWidth * 5\n  /* eslint-disable no-mixed-operators */\n  bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2)\n  /* eslint-enable no-mixed-operators */\n  bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI\n}\n\nfunction shiftBondEnd(\n  atom: ReAtom,\n  pos0: Vec2,\n  dir: Vec2,\n  margin: number\n): Vec2 {\n  let t = 0\n  const visel = atom.visel\n  for (let k = 0; k < visel.exts.length; ++k) {\n    const box = visel.exts[k].translate(pos0)\n    t = Math.max(t, util.shiftRayBox(pos0, dir, box))\n  }\n  if (t > 0) pos0 = pos0.addScaled(dir, t + margin)\n  return pos0\n}\n\nfunction selectDoubleBondShift(\n  n1: number,\n  n2: number,\n  d1: number,\n  d2: number\n): number {\n  if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1)) return -1\n  if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1)) return 1\n  if (n2 * d1 > n1 * d2) return -1\n  if (n2 * d1 < n1 * d2) return 1\n  if (n2 > n1) return -1\n  return 1\n}\n\nfunction selectDoubleBondShiftChain(struct: Struct, bond: ReBond): number {\n  if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\n    return 0\n  }\n\n  const hb1 = struct.halfBonds.get(bond.b.hb1)\n  const hb2 = struct.halfBonds.get(bond.b.hb2)\n  if (!hb1 || !hb2) return 0\n  const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0)\n  const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0)\n  if (nLeft > nRight) return -1\n  if (nLeft < nRight) return 1\n  if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1) return 1\n  return 0\n}\n\nexport default ReBond\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Fragment, StereoFlag } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\n\nclass ReEnhancedFlag extends ReObject {\n  #path: any\n\n  constructor() {\n    super('enhancedFlag')\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render: Render): any {\n    const box = Box2Abs.fromRelBox(this.#path.getBBox())\n    const sz = box.p1.sub(box.p0)\n    const p0 = box.p0.sub(render.options.offset)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render: Render): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper: any, options: any): any {\n    // TODO: after the enhanced flag stops being displayed, need to remove the reEnhancedflag object from ctab\n    if (!this.#path?.attrs) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, fragmentId: number, options: any): void {\n    const render = restruct.render\n    const fragment = restruct.molecule.frags.get(fragmentId)\n    if (!fragment?.enhancedStereoFlag) return\n\n    const position = fragment.stereoFlagPosition\n      ? fragment.stereoFlagPosition\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, fragmentId)!\n\n    const paper = render.paper\n    const ps = Scale.obj2scaled(position, options)\n\n    const stereoFlagMap = {\n      [StereoFlag.Abs]: options.absFlagLabel,\n      [StereoFlag.And]: options.andFlagLabel,\n      [StereoFlag.Mixed]: options.mixedFlagLabel,\n      [StereoFlag.Or]: options.orFlagLabel\n    }\n\n    if (options.showStereoFlags) {\n      this.#path = paper\n        .text(\n          ps.x,\n          ps.y,\n          fragment.enhancedStereoFlag\n            ? stereoFlagMap[fragment.enhancedStereoFlag]\n            : ''\n        )\n        .attr({\n          font: options.font,\n          'font-size': options.fontsz,\n          fill: '#000'\n        })\n    }\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      this.#path,\n      null,\n      true\n    )\n  }\n}\n\nexport default ReEnhancedFlag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReFrag extends ReObject {\n  constructor(/* Struct.Fragment */ frag) {\n    super('frag')\n    this.item = frag\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  fragGetAtoms(restruct, fid) {\n    return Array.from(restruct.atoms.keys()).filter(\n      (aid) => restruct.atoms.get(aid).a.fragment === fid\n    )\n  }\n\n  fragGetBonds(restruct, fid) {\n    return Array.from(restruct.bonds.keys()).filter((bid) => {\n      const bond = restruct.bonds.get(bid).b\n\n      const firstFrag = restruct.atoms.get(bond.begin).a.fragment\n      const secondFrag = restruct.atoms.get(bond.end).a.fragment\n\n      return firstFrag === fid && secondFrag === fid\n    })\n  }\n\n  calcBBox(restruct, fid, render) {\n    // TODO need to review parameter list\n    let ret\n    restruct.atoms.forEach((atom) => {\n      if (atom.a.fragment !== fid) return\n\n      // TODO ReObject.calcBBox to be used instead\n      let bba = atom.visel.boundingBox\n      if (!bba) {\n        bba = new Box2Abs(atom.a.pp, atom.a.pp)\n        const ext = new Vec2(0.05 * 3, 0.05 * 3)\n        bba = bba.extend(ext, ext)\n      } else {\n        if (!render) render = global._ui_editor.render // eslint-disable-line\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n      }\n      ret = ret ? Box2Abs.union(ret, bba) : bba\n    })\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, fid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    const bb = this.calcBBox(render.ctab, fid, render)\n\n    if (bb) {\n      const p0 = Scale.obj2scaled(new Vec2(bb.p0.x, bb.p0.y), render.options)\n      const p1 = Scale.obj2scaled(new Vec2(bb.p1.x, bb.p1.y), render.options)\n      return render.paper\n        .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n        .attr(attrs)\n    }\n\n    // TODO abnormal situation, empty fragments must be destroyed by tools\n  }\n\n  draw(render) {\n    // eslint-disable-line no-unused-vars\n    return null // this._draw(render, fid, { 'stroke' : 'lightgray' }); // [RB] for debugging only\n  }\n\n  drawHover(render) {\n    // eslint-disable-line no-unused-vars\n    // Do nothing. This method shouldn't actually be called.\n  }\n\n  setHover(hover, render) {\n    let fid = render.ctab.frags.keyOf(this)\n\n    if (!fid && fid !== 0) {\n      console.warn('Fragment does not belong to the render')\n      return\n    }\n\n    fid = parseInt(fid, 10)\n\n    render.ctab.atoms.forEach((atom) => {\n      if (atom.a.fragment === fid) atom.setHover(hover, render)\n    })\n\n    render.ctab.bonds.forEach((bond) => {\n      if (render.ctab.atoms.get(bond.b.begin).a.fragment === fid) {\n        bond.setHover(hover, render)\n      }\n    })\n  }\n}\nexport default ReFrag\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst BORDER_EXT = new Vec2(0.05 * 3, 0.05 * 3)\nclass ReRGroup extends ReObject {\n  constructor(/* RGroup */ rgroup) {\n    super('rgroup')\n    this.labelBox = null\n    this.item = rgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  getAtoms(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetAtoms(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  getBonds(render) {\n    let ret = []\n    this.item.frags.forEach((fid) => {\n      ret = ret.concat(\n        render.ctab.frags.get(fid).fragGetBonds(render.ctab, fid)\n      )\n    })\n    return ret\n  }\n\n  calcBBox(render) {\n    let ret = null\n    this.item.frags.forEach((fid) => {\n      const bbf = render.ctab.frags.get(fid).calcBBox(render.ctab, fid, render)\n      if (bbf) ret = ret ? Box2Abs.union(ret, bbf) : bbf\n    })\n\n    if (ret) ret = ret.extend(BORDER_EXT, BORDER_EXT)\n\n    return ret\n  }\n\n  // TODO need to review parameter list\n  draw(render, options) {\n    // eslint-disable-line max-statements\n    const bb = this.calcBBox(render)\n\n    if (!bb) {\n      console.error(\n        'Abnormal situation, empty fragments must be destroyed by tools'\n      )\n      return {}\n    }\n\n    const ret = { data: [] }\n    const p0 = Scale.obj2scaled(bb.p0, options)\n    const p1 = Scale.obj2scaled(bb.p1, options)\n    const brackets = render.paper.set()\n\n    rGroupdrawBrackets(brackets, render, bb) // eslint-disable-line new-cap\n\n    ret.data.push(brackets)\n    const key = render.ctab.rgroups.keyOf(this)\n    const labelSet = render.paper.set()\n    const label = render.paper\n      .text(p0.x, (p0.y + p1.y) / 2, 'R' + key + '=')\n      .attr({\n        font: options.font,\n        'font-size': options.fontRLabel,\n        fill: 'black'\n      })\n\n    const labelBox = util.relBox(label.getBBox())\n    label.translateAbs(-labelBox.width / 2 - options.lineWidth, 0)\n\n    labelSet.push(label)\n    const logicStyle = {\n      font: options.font,\n      'font-size': options.fontRLogic,\n      fill: 'black'\n    }\n\n    const logic = [rLogicToString(key, this.item)]\n\n    let shift = labelBox.height / 2 + options.lineWidth / 2\n    for (let i = 0; i < logic.length; ++i) {\n      const logicPath = render.paper\n        .text(p0.x, (p0.y + p1.y) / 2, logic[i])\n        .attr(logicStyle)\n      const logicBox = util.relBox(logicPath.getBBox())\n      shift += logicBox.height / 2\n      logicPath.translateAbs(-logicBox.width / 2 - 6 * options.lineWidth, shift)\n      shift += logicBox.height / 2 + options.lineWidth / 2\n      ret.data.push(logicPath)\n      labelSet.push(logicPath)\n    }\n\n    ret.data.push(label)\n    this.labelBox = Box2Abs.fromRelBox(labelSet.getBBox()).transform(\n      Scale.scaled2obj,\n      render.options\n    )\n    return ret\n  }\n\n  // TODO need to review parameter list\n  _draw(render, rgid, attrs) {\n    // eslint-disable-line no-underscore-dangle\n    if (!this.getVBoxObj(render)) return null\n    const bb = this.getVBoxObj(render).extend(BORDER_EXT, BORDER_EXT) // eslint-disable-line no-underscore-dangle\n\n    if (!bb) return null\n\n    const p0 = Scale.obj2scaled(bb.p0, render.options)\n    const p1 = Scale.obj2scaled(bb.p1, render.options)\n    return render.paper\n      .rect(p0.x, p0.y, p1.x - p0.x, p1.y - p0.y, 0)\n      .attr(attrs)\n  }\n\n  drawHover(render) {\n    const rgid = render.ctab.rgroups.keyOf(this)\n\n    if (!rgid) {\n      console.error(\n        'Abnormal situation, fragment does not belong to the render'\n      )\n      return null\n    }\n\n    const ret = this._draw(\n      render,\n      rgid,\n      render.options.hoverStyle /* { 'fill' : 'red' } */\n    ) // eslint-disable-line no-underscore-dangle\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n\n    this.item.frags.forEach((fnum, fid) => {\n      render.ctab.frags.get(fid).drawHover(render)\n    })\n\n    return ret\n  }\n\n  show(restruct, id, options) {\n    const drawing = this.draw(restruct.render, options)\n\n    Object.keys(drawing).forEach((group) => {\n      while (drawing[group].length > 0) {\n        restruct.addReObjectPath(\n          LayerMap.data,\n          this.visel,\n          drawing[group].shift(),\n          null,\n          true\n        )\n      }\n    })\n    // TODO rgroup selection & highlighting\n  }\n}\n\nfunction rGroupdrawBrackets(set, render, bb, d) {\n  d = Scale.obj2scaled(d || new Vec2(1, 0), render.options)\n  const bracketWidth = Math.min(0.25, bb.sz().x * 0.3)\n  const bracketHeight = bb.p1.y - bb.p0.y\n  const cy = 0.5 * (bb.p1.y + bb.p0.y)\n\n  const leftBracket = draw.bracket(\n    render.paper,\n    d.negated(),\n    d.negated().rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p0.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  const rightBracket = draw.bracket(\n    render.paper,\n    d,\n    d.rotateSC(1, 0),\n    Scale.obj2scaled(new Vec2(bb.p1.x, cy), render.options),\n    bracketWidth,\n    bracketHeight,\n    render.options\n  )\n\n  return set.push(leftBracket, rightBracket)\n}\n\nfunction rLogicToString(id, rLogic) {\n  const ifThen = rLogic.ifthen > 0 ? 'IF ' : ''\n\n  const rangeExists =\n    rLogic.range.startsWith('>') ||\n    rLogic.range.startsWith('<') ||\n    rLogic.range.startsWith('=')\n\n  let range = null\n  if (rLogic.range.length > 0) {\n    range = rangeExists ? rLogic.range : '=' + rLogic.range\n  } else range = '>0'\n\n  const restH = rLogic.resth ? ' (RestH)' : ''\n  const nextRg = rLogic.ifthen > 0 ? '\\nTHEN R' + rLogic.ifthen.toString() : ''\n\n  return `${ifThen}R${id.toString()}${range}${restH}${nextRg}`\n}\n\nexport default ReRGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport Raphael from '../raphael-ext'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\ntype Arrow = {\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n  height?: number\n}\n\ntype ArrowParams = {\n  length: number\n  angle: number\n}\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\n\nclass ReRxnArrow extends ReObject {\n  item: Arrow\n\n  constructor(/* chem.RxnArrow */ arrow: Arrow) {\n    super('rxnArrow')\n    this.item = arrow\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const pos = item.pos\n\n    let dist: number = calculateDistanceToLine(pos, point)\n\n    if (RxnArrow.isElliptical(item)) {\n      // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\n      // that form a triangle from the arrow's 3 reference points\n      // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\n      const [startPoint, endPoint, middlePoint] = this.getReferencePoints()\n      dist = Math.min(\n        dist,\n        calculateDistanceToLine([startPoint, middlePoint], point),\n        calculateDistanceToLine([middlePoint, endPoint], point)\n      )\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  hoverPath(render: Render) {\n    const path = this.generatePath(render, render.options, 'selection')\n\n    return render.paper.path(path)\n  }\n\n  drawHover(render: Render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    const item = this.item\n    const [a, b] = item.pos\n    const height = item.height\n    refPoints.push(new Vec2(a.x, a.y))\n    refPoints.push(new Vec2(b.x, b.y))\n\n    if (RxnArrow.isElliptical(item)) {\n      const middlePoint = findMiddlePoint(height!, a, b)\n      refPoints.push(middlePoint)\n    }\n    return refPoints\n  }\n\n  makeSelectionPlate(restruct: ReStruct, _paper, styles) {\n    const render = restruct.render\n    const options = restruct.render.options\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      render.paper\n        .path(this.generatePath(render, options, 'selection'))\n        .attr(styles.selectionStyle)\n    )\n\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  generatePath(render: Render, options, type) {\n    let path\n    const item = this.item\n    const height = RxnArrow.isElliptical(item) && item.height! * options.scale\n    const pos = item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n    const { length, angle } = this.getArrowParams(\n      pos[0].x,\n      pos[0].y,\n      pos[1].x,\n      pos[1].y\n    )\n\n    switch (type) {\n      case 'selection':\n        path = draw.rectangleArrowHighlightAndSelection(\n          render.paper,\n          { pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n      case 'arrow':\n        path = draw.arrow(\n          render.paper,\n          { ...item, pos, height },\n          length,\n          angle,\n          options\n        )\n        break\n    }\n\n    return path\n  }\n\n  getArrowParams(x1, y1, x2, y2): ArrowParams {\n    const length = Math.hypot(x2 - x1, y2 - y1)\n    const angle = Raphael.angle(x1, y1, x2, y2) - 180\n\n    return { length, angle }\n  }\n\n  show(restruct: ReStruct, _id, options) {\n    const path = this.generatePath(restruct.render, options, 'arrow')\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\nfunction findMiddlePoint(height: number, a: Vec2, b: Vec2) {\n  if (+util.tfx(height) === 0) {\n    const minX = Math.min(a.x, b.x)\n    const minY = Math.min(a.y, b.y)\n    const x = minX + Math.abs(a.x - b.x) / 2\n    const y = minY + Math.abs(a.y - b.y) / 2\n    return new Vec2(x, y)\n  }\n  const length = Math.hypot(b.x - a.x, b.y - a.y)\n  const lengthHyp = Math.hypot(length / 2, height)\n  const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1\n  const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2\n\n  if (height > 0) {\n    if (b.x < a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x > a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  } else {\n    if (b.x > a.x) {\n      return new Vec2(coordinates1?.x, coordinates1?.y)\n    }\n    if (b.x < a.x) {\n      return new Vec2(coordinates2?.x, coordinates2?.y)\n    }\n    if (b.x === a.x) {\n      if (b.y > a.y) {\n        return new Vec2(coordinates1?.x, coordinates1?.y)\n      }\n      if (b.y < a.y) {\n        return new Vec2(coordinates2?.x, coordinates2?.y)\n      }\n      if (b.y === a.y) {\n        return new Vec2(a.x, a.y)\n      }\n    }\n  }\n  return new Vec2(a.x, a.y)\n}\n\nexport default ReRxnArrow\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs } from 'domain/entities'\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nclass ReRxnPlus extends ReObject {\n  constructor(/* chem.RxnPlus */ plus) {\n    super('rxnPlus')\n    this.item = plus\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const p = Scale.obj2scaled(this.item.pp, render.options)\n    const s = render.options.scale\n    /* eslint-disable no-mixed-operators */\n    return render.paper.rect(p.x - s / 4, p.y - s / 4, s / 2, s / 2, s / 8)\n    /* eslint-enable no-mixed-operators */\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n\n  show(restruct, id, options) {\n    const render = restruct.render\n    const centre = Scale.obj2scaled(this.item.pp, options)\n    const path = draw.plus(render.paper, centre, options)\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\n\nexport default ReRxnPlus\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\n\nclass ReDataSGroupData extends ReObject {\n  constructor(sgroup) {\n    super('sgroupData')\n    this.sgroup = sgroup\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  hoverPath(render) {\n    const box = this.sgroup.dataArea\n    const p0 = Scale.obj2scaled(box.p0, render.options)\n    const sz = Scale.obj2scaled(box.p1, render.options).sub(p0)\n    return render.paper.rect(p0.x, p0.y, sz.x, sz.y)\n  }\n\n  drawHover(render) {\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct, paper, styles) {\n    // TODO [MK] review parameters\n    return this.hoverPath(restruct.render).attr(styles.selectionStyle)\n  }\n}\n\nexport default ReDataSGroupData\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, FunctionalGroup, Pile, SGroup, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReSGroup extends ReObject {\n  constructor(sgroup) {\n    super('sgroup')\n    this.item = sgroup\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  draw(remol, sgroup) {\n    this.render = remol.render\n    let set = this.render.paper.set()\n    const atomSet = new Pile(sgroup.atoms)\n    const crossBonds = SGroup.getCrossBonds(remol.molecule, atomSet)\n    SGroup.bracketPos(sgroup, remol.molecule, crossBonds)\n    const bracketBox = sgroup.bracketBox\n    const d = sgroup.bracketDir\n    sgroup.areas = [bracketBox]\n    const functionalGroups = remol.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      sgroup.atoms.forEach((aid) => {\n        if (FunctionalGroup.isAttachmentPointAtom(aid, remol.molecule)) {\n          sgroup.firstSgroupAtom = remol.molecule.atoms.get(aid)\n          sgroup.functionalGroup = true\n        }\n      })\n    } else {\n      switch (sgroup.type) {\n        case 'MUL':\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.mul\n          )\n          break\n        case 'SRU': {\n          let connectivity = sgroup.data.connectivity || 'eu'\n          if (connectivity === 'ht') connectivity = ''\n          const subscript = sgroup.data.subscript || 'n'\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            subscript,\n            connectivity\n          )\n          break\n        }\n        case 'SUP': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d,\n            sgroup.data.name,\n            null,\n            { 'font-style': 'italic' }\n          )\n          break\n        }\n        case 'GEN': {\n          SGroupdrawBrackets(\n            set,\n            this.render,\n            sgroup,\n            crossBonds,\n            atomSet,\n            bracketBox,\n            d\n          )\n          break\n        }\n        case 'DAT': {\n          set = drawGroupDat(remol, sgroup)\n          break\n        }\n        default:\n          break\n      }\n    }\n    return set\n  }\n\n  makeSelectionPlate(restruct, paper, options) {\n    const sgroup = this.item\n    const { startX, startY, size } = getHighlighPathInfo(sgroup, options)\n    const functionalGroups = restruct.molecule.functionalGroups\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(sgroup.id, functionalGroups)\n    ) {\n      return paper.rect(startX, startY, size, size).attr(options.selectionStyle)\n    }\n  }\n\n  drawHover(render) {\n    // eslint-disable-line max-statements\n    const options = render.options\n    const paper = render.paper\n    const sGroupItem = this.item\n    const { a0, a1, b0, b1 } = getHighlighPathInfo(sGroupItem, options)\n\n    const functionalGroups = render.ctab.molecule.functionalGroups\n    const set = paper.set()\n    if (\n      FunctionalGroup.isContractedFunctionalGroup(\n        sGroupItem.id,\n        functionalGroups\n      )\n    ) {\n      const { startX, startY, size } = getHighlighPathInfo(sGroupItem, options)\n      sGroupItem.hovering = paper\n        .rect(startX, startY, size, size)\n        .attr(options.hoverStyle)\n    } else {\n      sGroupItem.hovering = paper\n        .path(\n          'M{0},{1}L{2},{3}L{4},{5}L{6},{7}L{0},{1}',\n          tfx(a0.x),\n          tfx(a0.y),\n          tfx(a1.x),\n          tfx(a1.y),\n          tfx(b1.x),\n          tfx(b1.y),\n          tfx(b0.x),\n          tfx(b0.y)\n        )\n        .attr(options.hoverStyle)\n    }\n    set.push(sGroupItem.hovering)\n\n    SGroup.getAtoms(render.ctab.molecule, sGroupItem).forEach((aid) => {\n      set.push(render.ctab.atoms.get(aid).makeHoverPlate(render))\n    }, this)\n    SGroup.getBonds(render.ctab.molecule, sGroupItem).forEach((bid) => {\n      set.push(render.ctab.bonds.get(bid).makeHoverPlate(render))\n    }, this)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, set)\n  }\n\n  show(restruct) {\n    const render = restruct.render\n    const sgroup = this.item\n    if (sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const remol = render.ctab\n      const path = this.draw(remol, sgroup)\n      restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n      this.setHover(this.hover, render) // TODO: fix this\n    }\n  }\n}\n\nfunction SGroupdrawBrackets(\n  set,\n  render,\n  sg,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  lowerIndexText,\n  upperIndexText,\n  indexAttribute\n) {\n  // eslint-disable-line max-params\n  const brackets = getBracketParameters(\n    render.ctab.molecule,\n    crossBonds,\n    atomSet,\n    bracketBox,\n    d,\n    render,\n    sg.id\n  )\n  let ir = -1\n  for (let i = 0; i < brackets.length; ++i) {\n    const bracket = brackets[i]\n    const path = draw.bracket(\n      render.paper,\n      Scale.obj2scaled(bracket.d, render.options),\n      Scale.obj2scaled(bracket.n, render.options),\n      Scale.obj2scaled(bracket.c, render.options),\n      bracket.w,\n      bracket.h,\n      render.options\n    )\n    set.push(path)\n    if (\n      ir < 0 ||\n      brackets[ir].d.x < bracket.d.x ||\n      (brackets[ir].d.x === bracket.d.x && brackets[ir].d.y > bracket.d.y)\n    ) {\n      ir = i\n    }\n  }\n  const bracketR = brackets[ir]\n  function renderIndex(text, shift) {\n    const indexPos = Scale.obj2scaled(\n      bracketR.c.addScaled(bracketR.n, shift * bracketR.h),\n      render.options\n    )\n    const indexPath = render.paper.text(indexPos.x, indexPos.y, text).attr({\n      font: render.options.font,\n      'font-size': render.options.fontszsub\n    })\n    if (indexAttribute) indexPath.attr(indexAttribute)\n    const indexBox = Box2Abs.fromRelBox(util.relBox(indexPath.getBBox()))\n    const t =\n      Math.max(util.shiftRayBox(indexPos, bracketR.d.negated(), indexBox), 3) +\n      2\n    indexPath.translateAbs(t * bracketR.d.x, t * bracketR.d.y)\n    set.push(indexPath)\n  }\n  if (lowerIndexText) renderIndex(lowerIndexText, 0.5)\n  if (upperIndexText) renderIndex(upperIndexText, -0.5)\n}\n\nfunction showValue(paper, pos, sg, options) {\n  const text = paper.text(pos.x, pos.y, sg.data.fieldValue).attr({\n    font: options.font,\n    'font-size': options.fontsz\n  })\n  const box = text.getBBox()\n  let rect = paper.rect(\n    box.x - 1,\n    box.y - 1,\n    box.width + 2,\n    box.height + 2,\n    3,\n    3\n  )\n  rect = sg.selected\n    ? rect.attr(options.selectionStyle)\n    : rect.attr({ fill: '#fff', stroke: '#fff' })\n  const st = paper.set()\n  st.push(rect, text.toFront())\n  return st\n}\n\nfunction drawGroupDat(restruct, sgroup) {\n  SGroup.bracketPos(sgroup, restruct.molecule)\n  sgroup.areas = sgroup.bracketBox ? [sgroup.bracketBox] : []\n\n  if (sgroup.pp === null) sgroup.calculatePP(restruct.molecule)\n\n  return sgroup.data.attached\n    ? drawAttachedDat(restruct, sgroup)\n    : drawAbsoluteDat(restruct, sgroup)\n}\n\nfunction drawAbsoluteDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  const ps = sgroup.pp.scaled(options.scale)\n  const name = showValue(paper, ps, sgroup, options)\n  const box = util.relBox(name.getBBox())\n\n  name.translateAbs(0.5 * box.width, -0.5 * box.height)\n  set.push(name)\n\n  const sbox = Box2Abs.fromRelBox(util.relBox(name.getBBox()))\n  sgroup.dataArea = sbox.transform(Scale.scaled2obj, render.options)\n\n  if (!restruct.sgroupData.has(sgroup.id)) {\n    restruct.sgroupData.set(sgroup.id, new ReDataSGroupData(sgroup))\n  }\n\n  return set\n}\n\nfunction drawAttachedDat(restruct, sgroup) {\n  const render = restruct.render\n  const options = render.options\n  const paper = render.paper\n  const set = paper.set()\n\n  SGroup.getAtoms(restruct, sgroup).forEach((aid) => {\n    const atom = restruct.atoms.get(aid)\n    const p = Scale.obj2scaled(atom.a.pp, options)\n    const bb = atom.visel.boundingBox\n\n    if (bb !== null) p.x = Math.max(p.x, bb.p1.x)\n\n    p.x += options.lineWidth // shift a bit to the right\n\n    const nameI = showValue(paper, p, sgroup, options)\n    const boxI = util.relBox(nameI.getBBox())\n\n    nameI.translateAbs(0.5 * boxI.width, -0.3 * boxI.height)\n    set.push(nameI)\n\n    let sboxI = Box2Abs.fromRelBox(util.relBox(nameI.getBBox()))\n    sboxI = sboxI.transform(Scale.scaled2obj, render.options)\n    sgroup.areas.push(sboxI)\n  })\n\n  return set\n}\n\nfunction getBracketParameters(\n  mol,\n  crossBonds,\n  atomSet,\n  bracketBox,\n  d,\n  render,\n  id\n) {\n  // eslint-disable-line max-params\n  function BracketParams(c, d, w, h) {\n    this.c = c\n    this.d = d\n    this.n = d.rotateSC(1, 0)\n    this.w = w\n    this.h = h\n  }\n  const brackets = []\n  let n = d.rotateSC(1, 0)\n\n  const crossBondsPerAtom = Object.values(crossBonds)\n  const crossBondsValues = crossBondsPerAtom.flat()\n  if (crossBondsValues.length < 2) {\n    ;(function () {\n      d = d || new Vec2(1, 0)\n      n = n || d.rotateSC(1, 0)\n      const bracketWidth = Math.min(0.25, bracketBox.sz().x * 0.3)\n      const cl = Vec2.lc2(\n        d,\n        bracketBox.p0.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const cr = Vec2.lc2(\n        d,\n        bracketBox.p1.x,\n        n,\n        0.5 * (bracketBox.p0.y + bracketBox.p1.y)\n      )\n      const bracketHeight = bracketBox.sz().y\n\n      brackets.push(\n        new BracketParams(cl, d.negated(), bracketWidth, bracketHeight),\n        new BracketParams(cr, d, bracketWidth, bracketHeight)\n      )\n    })()\n  } else if (crossBondsValues.length === 2 && crossBondsPerAtom.length === 2) {\n    ;(function () {\n      // eslint-disable-line max-statements\n      const b1 = mol.bonds.get(crossBondsValues[0])\n      const b2 = mol.bonds.get(crossBondsValues[1])\n      const cl0 = b1.getCenter(mol)\n      const cr0 = b2.getCenter(mol)\n      let tl = -1\n      let tr = -1\n      let tt = -1\n      let tb = -1\n      const cc = Vec2.centre(cl0, cr0)\n      const dr = Vec2.diff(cr0, cl0).normalized()\n      const dl = dr.negated()\n      const dt = dr.rotateSC(1, 0)\n      const db = dt.negated()\n\n      mol.sGroupForest.children.get(id).forEach((sgid) => {\n        let bba = render.ctab.sgroups.get(sgid).visel.boundingBox\n        bba = bba\n          .translate((render.options.offset || new Vec2()).negated())\n          .transform(Scale.scaled2obj, render.options)\n        tl = Math.max(tl, util.shiftRayBox(cl0, dl, bba))\n        tr = Math.max(tr, util.shiftRayBox(cr0, dr, bba))\n        tt = Math.max(tt, util.shiftRayBox(cc, dt, bba))\n        tb = Math.max(tb, util.shiftRayBox(cc, db, bba))\n      }, this)\n      tl = Math.max(tl + 0.2, 0)\n      tr = Math.max(tr + 0.2, 0)\n      tt = Math.max(Math.max(tt, tb) + 0.1, 0)\n      const bracketWidth = 0.25\n      const bracketHeight = 1.5 + tt\n      brackets.push(\n        new BracketParams(\n          cl0.addScaled(dl, tl),\n          dl,\n          bracketWidth,\n          bracketHeight\n        ),\n        new BracketParams(\n          cr0.addScaled(dr, tr),\n          dr,\n          bracketWidth,\n          bracketHeight\n        )\n      )\n    })()\n  } else {\n    ;(function () {\n      for (let i = 0; i < crossBondsValues.length; ++i) {\n        const b = mol.bonds.get(crossBondsValues[i])\n        const c = b.getCenter(mol)\n        const d = atomSet.has(b.begin) ? b.getDir(mol) : b.getDir(mol).negated()\n        brackets.push(new BracketParams(c, d, 0.2, 1.0))\n      }\n    })()\n  }\n  return brackets\n}\n\nfunction getHighlighPathInfo(sgroup, options) {\n  let bracketBox = sgroup.bracketBox.transform(Scale.obj2scaled, options)\n  const lineWidth = options.lineWidth\n  const vext = new Vec2(lineWidth * 4, lineWidth * 6)\n  bracketBox = bracketBox.extend(vext, vext)\n  const d = sgroup.bracketDir\n  const n = d.rotateSC(1, 0)\n  const a0 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p0.y)\n  const a1 = Vec2.lc2(d, bracketBox.p0.x, n, bracketBox.p1.y)\n  const b0 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p0.y)\n  const b1 = Vec2.lc2(d, bracketBox.p1.x, n, bracketBox.p1.y)\n  const size = options.contractedFunctionalGroupSize\n  let startX = (b0.x + a0.x) / 2 - size / 2\n  let startY = (a1.y + a0.y) / 2 - size / 2\n  if (sgroup.firstSgroupAtom) {\n    const shift = new Vec2(size / 2, size / 2, 0)\n    const hoverPp = Vec2.diff(sgroup.firstSgroupAtom.pp.scaled(40), shift)\n    startX = hoverPp.x\n    startY = hoverPp.y\n  }\n  return {\n    a0,\n    a1,\n    b0,\n    b1,\n    startX,\n    startY,\n    size\n  }\n}\n\nexport default ReSGroup\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Render } from '../raphaelRender'\nimport { Scale } from 'domain/helpers'\nimport draw from '../draw'\nimport util from '../util'\n\nconst tfx = util.tfx\ninterface MinDistanceWithReferencePoint {\n  minDist: number\n  refPoint: Vec2 | null\n}\ninterface StyledPath {\n  path: any\n  stylesApplied: boolean\n}\nclass ReSimpleObject extends ReObject {\n  private item: any\n\n  constructor(simpleObject: any) {\n    super('simpleObject')\n    this.item = simpleObject\n  }\n\n  static isSelectable(): boolean {\n    return true\n  }\n\n  calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint {\n    const point: Vec2 = new Vec2(p.x, p.y)\n\n    const distRef: MinDistanceWithReferencePoint =\n      this.getReferencePointDistance(p)\n    const item = this.item\n    const mode = item.mode\n    const pos = item.pos\n    let dist: number\n\n    switch (mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(pos[1], pos[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        const center = Vec2.sum(pos[0], new Vec2(rx, ry))\n        const pointToCenter = Vec2.diff(point, center)\n        if (rx !== 0 && ry !== 0) {\n          dist = Math.abs(\n            1 -\n              (pointToCenter.x * pointToCenter.x) / (rx * rx) -\n              (pointToCenter.y * pointToCenter.y) / (ry * ry)\n          )\n        } else {\n          // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\n          // in such case distance need to be calculated as a distance between line and current point\n          dist = calculateDistanceToLine(pos, point)\n        }\n        break\n      }\n      case SimpleObjectMode.rectangle: {\n        const topX = Math.min(pos[0].x, pos[1].x)\n        const topY = Math.min(pos[0].y, pos[1].y)\n        const bottomX = Math.max(pos[0].x, pos[1].x)\n        const bottomY = Math.max(pos[0].y, pos[1].y)\n\n        const distances: Array<number> = []\n\n        if (point.x >= topX && point.x <= bottomX) {\n          if (point.y < topY) {\n            distances.push(topY - point.y)\n          } else if (point.y > bottomY) {\n            distances.push(point.y - bottomY)\n          } else {\n            distances.push(point.y - topY, bottomY - point.y)\n          }\n        }\n        if (point.x < topX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(topX, topY), point))\n        }\n        if (point.x > bottomX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point))\n        }\n        if (point.x < topX && point.y > bottomY) {\n          distances.push(Vec2.dist(new Vec2(topX, bottomY), point))\n        }\n        if (point.x > bottomX && point.y < topY) {\n          distances.push(Vec2.dist(new Vec2(bottomX, topY), point))\n        }\n        if (point.y >= topY && point.y <= bottomY) {\n          if (point.x < topX) {\n            distances.push(topX - point.x)\n          } else if (point.x > bottomX) {\n            distances.push(point.x - bottomX)\n          } else {\n            distances.push(point.x - topX, bottomX - point.x)\n          }\n        }\n        dist = Math.min(...distances)\n        break\n      }\n      case SimpleObjectMode.line: {\n        dist = calculateDistanceToLine(pos, point)\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const refPoint: Vec2 | null =\n      distRef.minDist <= 8 / s ? distRef.refPoint : null\n    // distance is a smallest between dist to figure and it's reference points\n    dist = Math.min(distRef.minDist, dist)\n    return { minDist: dist, refPoint }\n  }\n\n  getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint {\n    const dist: any = []\n    const refPoints = this.getReferencePoints()\n    refPoints.forEach((rp) => {\n      dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp })\n    })\n\n    const minDist: MinDistanceWithReferencePoint = dist.reduce(\n      (acc, current) =>\n        !acc ? current : acc.minDist < current.minDist ? acc : current,\n      null\n    )\n\n    return minDist\n  }\n\n  getReferencePoints(onlyOnObject = false): Array<Vec2> {\n    const refPoints: Array<Vec2> = []\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse:\n      case SimpleObjectMode.rectangle: {\n        const p0: Vec2 = new Vec2(\n          Math.min(this.item.pos[0].x, this.item.pos[1].x),\n          Math.min(this.item.pos[0].y, this.item.pos[1].y)\n        )\n        const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x)\n        const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y)\n\n        refPoints.push(\n          new Vec2(p0.x + 0.5 * w, p0.y),\n          new Vec2(p0.x + w, p0.y + 0.5 * h),\n          new Vec2(p0.x + 0.5 * w, p0.y + h),\n          new Vec2(p0.x, p0.y + 0.5 * h)\n        )\n        if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\n          refPoints.push(\n            p0,\n            new Vec2(p0.x, p0.y + h),\n            new Vec2(p0.x + w, p0.y + h),\n            new Vec2(p0.x + w, p0.y)\n          )\n        }\n        break\n      }\n      case SimpleObjectMode.line: {\n        this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)))\n        break\n      }\n\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n    return refPoints\n  }\n\n  hoverPath(render: Render): Array<StyledPath> {\n    const point: Array<Vec2> = []\n\n    this.item.pos.forEach((p, index) => {\n      point[index] = Scale.obj2scaled(p, render.options)\n    })\n    const scaleFactor = render.options.scale\n\n    const path: Array<any> = []\n\n    // TODO: It seems that inheritance will be the better approach here\n    switch (this.item.mode) {\n      case SimpleObjectMode.ellipse: {\n        const rad = Vec2.diff(point[1], point[0])\n        const rx = rad.x / 2\n        const ry = rad.y / 2\n        path.push(\n          render.paper.ellipse(\n            tfx(point[0].x + rx),\n            tfx(point[0].y + ry),\n            tfx(Math.abs(rx) + scaleFactor / 8),\n            tfx(Math.abs(ry) + scaleFactor / 8)\n          )\n        )\n        if (\n          Math.abs(rx) - scaleFactor / 8 > 0 &&\n          Math.abs(ry) - scaleFactor / 8 > 0\n        ) {\n          path.push(\n            render.paper.ellipse(\n              tfx(point[0].x + rx),\n              tfx(point[0].y + ry),\n              tfx(Math.abs(rx) - scaleFactor / 8),\n              tfx(Math.abs(ry) - scaleFactor / 8)\n            )\n          )\n        }\n        break\n      }\n\n      case SimpleObjectMode.rectangle: {\n        path.push(\n          render.paper.rect(\n            tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8),\n            tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8),\n            tfx(\n              Math.max(point[0].x, point[1].x) -\n                Math.min(point[0].x, point[1].x) +\n                scaleFactor / 4\n            ),\n            tfx(\n              Math.max(point[0].y, point[1].y) -\n                Math.min(point[0].y, point[1].y) +\n                scaleFactor / 4\n            )\n          )\n        )\n\n        if (\n          Math.max(point[0].x, point[1].x) -\n            Math.min(point[0].x, point[1].x) -\n            scaleFactor / 4 >\n            0 &&\n          Math.max(point[0].y, point[1].y) -\n            Math.min(point[0].y, point[1].y) -\n            scaleFactor / 4 >\n            0\n        ) {\n          path.push(\n            render.paper.rect(\n              tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8),\n              tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8),\n              tfx(\n                Math.max(point[0].x, point[1].x) -\n                  Math.min(point[0].x, point[1].x) -\n                  scaleFactor / 4\n              ),\n              tfx(\n                Math.max(point[0].y, point[1].y) -\n                  Math.min(point[0].y, point[1].y) -\n                  scaleFactor / 4\n              )\n            )\n          )\n        }\n\n        break\n      }\n      case SimpleObjectMode.line: {\n        // TODO: reuse this code for polyline\n        const poly: Array<string | number> = []\n\n        const angle = Math.atan(\n          (point[1].y - point[0].y) / (point[1].x - point[0].x)\n        )\n\n        const p0 = { x: 0, y: 0 }\n        const p1 = { x: 0, y: 0 }\n\n        const k = point[0].x > point[1].x ? -1 : 1\n\n        p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle))\n        p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle))\n        p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle))\n        p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle))\n\n        poly.push(\n          'M',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p1.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p1.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x - ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y + ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n        poly.push(\n          'L',\n          p0.x + ((k * scaleFactor) / 8) * Math.sin(angle),\n          p0.y - ((k * scaleFactor) / 8) * Math.cos(angle)\n        )\n\n        path.push(render.paper.path(poly))\n        break\n      }\n      default: {\n        throw new Error('Unsupported shape type')\n      }\n    }\n\n    const enhPaths: Array<StyledPath> = path.map((p) => {\n      return { path: p, stylesApplied: false }\n    })\n\n    return enhPaths\n  }\n\n  drawHover(render: Render): Array<any> {\n    const paths: Array<any> = this.hoverPath(render).map((enhPath) => {\n      if (!enhPath.stylesApplied) {\n        return enhPath.path.attr(render.options.hoverStyle)\n      }\n      return enhPath.path\n    })\n\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths)\n    return paths\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any {\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, restruct.render.options) || new Vec2()\n    })\n\n    const refPoints = this.getReferencePoints()\n    const scaleFactor = restruct.render.options.scale\n    const selectionSet = restruct.render.paper.set()\n    selectionSet.push(\n      generatePath(this.item.mode, paper, pos).attr(\n        styles.hoverStyleSimpleObject\n      )\n    )\n    refPoints.forEach((rp) => {\n      const scaledRP = Scale.obj2scaled(rp, restruct.render.options)\n      selectionSet.push(\n        restruct.render.paper\n          .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\n          .attr({ fill: 'black' })\n      )\n    })\n    return selectionSet\n  }\n\n  show(restruct: ReStruct, options: any): void {\n    const render = restruct.render\n    const pos = this.item.pos.map((p) => {\n      return Scale.obj2scaled(p, options) || new Vec2()\n    })\n\n    const path = generatePath(this.item.mode, render.paper, pos, options)\n\n    const offset = options.offset\n    if (offset != null) path.translateAbs(offset.x, offset.y)\n\n    this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())))\n  }\n}\nfunction calculateDistanceToLine(pos: Array<Vec2>, point: Vec2): number {\n  let dist: number\n  if (\n    (point.x < Math.min(pos[0].x, pos[1].x) ||\n      point.x > Math.max(pos[0].x, pos[1].x)) &&\n    (point.y < Math.min(pos[0].y, pos[1].y) ||\n      point.y > Math.max(pos[0].y, pos[1].y))\n  ) {\n    dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point))\n  } else {\n    const a = Vec2.dist(pos[0], pos[1])\n    const b = Vec2.dist(pos[0], point)\n    const c = Vec2.dist(pos[1], point)\n    const per = (a + b + c) / 2\n    dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c))\n  }\n  return dist\n}\n\nfunction generatePath(mode: SimpleObjectMode, paper, pos: Vec2, options?): any {\n  let path: any\n  switch (mode) {\n    case SimpleObjectMode.ellipse: {\n      path = draw.ellipse(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.rectangle: {\n      path = draw.rectangle(paper, pos, options)\n      break\n    }\n    case SimpleObjectMode.line: {\n      path = draw.line(paper, pos, options)\n      break\n    }\n    default: {\n      throw new Error('Unsupported shape type')\n    }\n  }\n\n  return path\n}\n\nexport default ReSimpleObject\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport { Scale } from 'domain/helpers'\nimport util from '../util'\n\nconst tfx = util.tfx\n\nclass ReLoop extends ReObject {\n  constructor(loop) {\n    super('loop')\n    this.loop = loop\n    this.centre = new Vec2()\n    this.radius = new Vec2()\n  }\n\n  static isSelectable() {\n    return false\n  }\n\n  show(restruct, rlid, options) {\n    // eslint-disable-line max-statements\n    const render = restruct.render\n    const paper = render.paper\n    const molecule = restruct.molecule\n    const loop = this.loop\n    this.centre = new Vec2()\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const bond = restruct.bonds.get(hb.bid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      if (bond.b.type !== Bond.PATTERN.TYPE.AROMATIC) loop.aromatic = false\n      this.centre.add_(apos) // eslint-disable-line no-underscore-dangle\n    })\n    loop.convex = true\n    for (let k = 0; k < this.loop.hbs.length; ++k) {\n      const hba = molecule.halfBonds.get(loop.hbs[k])\n      const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n      const angle = Math.atan2(\n        Vec2.cross(hba.dir, hbb.dir),\n        Vec2.dot(hba.dir, hbb.dir)\n      )\n      if (angle > 0) loop.convex = false\n    }\n\n    this.centre = this.centre.scaled(1.0 / loop.hbs.length)\n    this.radius = -1\n    loop.hbs.forEach((hbid) => {\n      const hb = molecule.halfBonds.get(hbid)\n      const apos = Scale.obj2scaled(restruct.atoms.get(hb.begin).a.pp, options)\n      const bpos = Scale.obj2scaled(restruct.atoms.get(hb.end).a.pp, options)\n      const n = Vec2.diff(bpos, apos).rotateSC(1, 0).normalized()\n      const dist = Vec2.dot(Vec2.diff(apos, this.centre), n)\n      this.radius = this.radius < 0 ? dist : Math.min(this.radius, dist)\n    })\n    this.radius *= 0.7\n    if (!loop.aromatic) return\n    let path = null\n    if (loop.convex && options.aromaticCircle) {\n      path = paper.circle(this.centre.x, this.centre.y, this.radius).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width']\n      })\n    } else {\n      let pathStr = ''\n      for (let k = 0; k < loop.hbs.length; ++k) {\n        const hba = molecule.halfBonds.get(loop.hbs[k])\n        const hbb = molecule.halfBonds.get(loop.hbs[(k + 1) % loop.hbs.length])\n        const angle = Math.atan2(\n          Vec2.cross(hba.dir, hbb.dir),\n          Vec2.dot(hba.dir, hbb.dir)\n        )\n        const halfAngle = (Math.PI - angle) / 2\n        const dir = hbb.dir.rotate(halfAngle)\n        const pi = Scale.obj2scaled(restruct.atoms.get(hbb.begin).a.pp, options)\n        let sin = Math.sin(halfAngle)\n        const minSin = 0.1\n        if (Math.abs(sin) < minSin) sin = (sin * minSin) / Math.abs(sin)\n        const offset = options.bondSpace / sin\n        const qi = pi.addScaled(dir, -offset)\n        pathStr += k === 0 ? 'M' : 'L'\n        pathStr += tfx(qi.x) + ',' + tfx(qi.y)\n      }\n      pathStr += 'Z'\n      path = paper.path(pathStr).attr({\n        stroke: '#000',\n        'stroke-width': options.lineattr['stroke-width'],\n        'stroke-dasharray': '- '\n      })\n    }\n    restruct.addReObjectPath(LayerMap.data, this.visel, path, null, true)\n  }\n\n  isValid(struct, rlid) {\n    const halfBonds = struct.halfBonds\n    return this.loop.hbs.every(\n      (hbid) => halfBonds.has(hbid) && halfBonds.get(hbid).loop === rlid\n    )\n  }\n}\n\nexport default ReLoop\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  DraftInlineStyleType,\n  RawDraftContentBlock,\n  RawDraftContentState,\n  RawDraftInlineStyleRange\n} from 'draft-js'\nimport { Text, TextCommand, Vec2 } from 'domain/entities'\nimport { flatten, isEqual } from 'lodash/fp'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReObject from './reobject'\nimport ReStruct from './restruct'\nimport { Scale } from 'domain/helpers'\nimport { RaphaelBaseElement } from 'raphael'\n\ninterface CustomRawDraftInlineStyleRange\n  extends Omit<RawDraftInlineStyleRange, 'style'> {\n  style:\n    | DraftInlineStyleType\n    | TextCommand.Subscript\n    | TextCommand.Superscript\n    | TextCommand.FontSize\n}\n\nconst SCALE = 40 // from ketcher-core\n\nclass ReText extends ReObject {\n  private item: Text\n  paths: Array<Array<RaphaelBaseElement>> = []\n\n  constructor(text: Text) {\n    super('text')\n    this.item = text\n  }\n\n  static isSelectable() {\n    return true\n  }\n\n  getReferencePoints(): Array<Vec2> {\n    if (!this.paths.length) return []\n\n    const { p0, p1 } = this.getRelBox(this.paths)\n\n    const p = this.item.position\n    const width = Math.abs(Vec2.diff(p0, p1).x) / SCALE\n    const height = Math.abs(Vec2.diff(p0, p1).y) / SCALE\n\n    const refPoints: Array<Vec2> = []\n\n    refPoints.push(\n      this.item.position,\n      new Vec2(p.x, p.y + height),\n      new Vec2(p.x + width, p.y + height),\n      new Vec2(p.x + width, p.y)\n    )\n\n    return refPoints\n  }\n\n  hoverPath(render: any): any {\n    const { p0, p1 } = this.getRelBox(this.paths)\n    const topLeft = p0.sub(render.options.offset)\n    const { x: width, y: height } = p1.sub(p0)\n\n    return render.paper.rect(topLeft.x, topLeft.y, width, height, 5)\n  }\n\n  getRelBox(paths: Array<Array<RaphaelBaseElement>>): { p0: Vec2; p1: Vec2 } {\n    const firstElOfFirstRow: RaphaelBaseElement = paths[0][0]\n    const leftEdge = firstElOfFirstRow.getBBox().x\n\n    const firstRow: Array<RaphaelBaseElement> = paths[0]\n    const topEdge: number = Math.min(\n      ...firstRow.map((path) => path.getBBox().y)\n    )\n\n    const widestRow: Array<RaphaelBaseElement> = paths.reduce(\n      (widestRow, nextRow) =>\n        this.getRowWidth(nextRow) > this.getRowWidth(widestRow)\n          ? nextRow\n          : widestRow,\n      paths[0]\n    )\n    const lastElOfWidestRow: RaphaelBaseElement =\n      widestRow[widestRow.length - 1]\n    const rightEdge: number =\n      lastElOfWidestRow.getBBox().x + lastElOfWidestRow.getBBox().width\n\n    const lastRow: Array<RaphaelBaseElement> = paths[paths.length - 1]\n    const bottomEdge: number = Math.max(\n      ...lastRow.map((path) => path.getBBox().y + path.getBBox().height)\n    )\n\n    return {\n      p0: new Vec2(leftEdge, topEdge),\n      p1: new Vec2(rightEdge, bottomEdge)\n    }\n  }\n\n  getRowWidth(row: Array<RaphaelBaseElement>): number {\n    return row.reduce((rowWidth, nextRow) => {\n      rowWidth += nextRow.getBBox().width\n      return rowWidth\n    }, 0)\n  }\n\n  drawHover(render: any): any {\n    if (!this.paths.length) return null\n    const ret = this.hoverPath(render).attr(render.options.hoverStyle)\n    render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret)\n    return ret\n  }\n\n  makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any {\n    if (!this.paths.length || !paper) return null\n    return this.hoverPath(restruct.render).attr(options.selectionStyle)\n  }\n\n  show(restruct: ReStruct, _id: number, options: any): void {\n    const render = restruct.render\n    const paper = render.paper\n    const paperScale = Scale.obj2scaled(this.item.position!, options)\n\n    let shiftY = 0\n    this.paths = []\n    // TODO: create parser in ketcher-core package\n    const rawContentState: RawDraftContentState | null = this.item.content\n      ? (JSON.parse(this.item.content) as RawDraftContentState)\n      : null\n    if (!rawContentState) {\n      return\n    }\n\n    rawContentState.blocks.forEach((block: RawDraftContentBlock) => {\n      const ranges: Array<[number, number, Record<string, any>]> =\n        this.getRanges(block, options)\n      let shiftX = 0\n      const row: Array<RaphaelBaseElement> = []\n      ranges.forEach(([start, end, styles]) => {\n        block.text = block.text.replace(/[^\\S\\r\\n]/g, '\\u00a0')\n        const path = paper\n          .text(\n            paperScale.x,\n            paperScale.y,\n            block.text.substring(start, end + 1) || '\\u00a0'\n          )\n          .attr({\n            font: options.font,\n            'font-size': options.fontsz,\n            'text-anchor': 'start',\n            fill: '#000000',\n            ...styles\n          })\n        path.translateAbs(shiftX, shiftY + (styles.shiftY || 0))\n        row.push(path)\n        shiftX += path.getBBox().width\n      })\n\n      this.paths.push(row)\n\n      const { p0, p1 } = this.getRelBox([row])\n      shiftY += Math.abs(Vec2.diff(p0, p1).y)\n    })\n\n    this.item.setPos(this.getReferencePoints())\n\n    render.ctab.addReObjectPath(\n      LayerMap.data,\n      this.visel,\n      flatten(this.paths),\n      null,\n      true\n    )\n  }\n\n  getRanges(\n    block: RawDraftContentBlock,\n    options: any\n  ): Array<[number, number, Record<string, any>]> {\n    const ranges: Array<[number, number, Record<string, any>]> = []\n\n    let start = 0\n    let styles: Record<string, any> = this.getStyles(block, start, options)\n    for (let i = 1; i < block.text.length; i++) {\n      const nextStyles = this.getStyles(block, i, options)\n\n      if (!isEqual(styles, nextStyles)) {\n        ranges.push([start, i - 1, styles])\n        styles = nextStyles\n        start = i\n      }\n    }\n    ranges.push([start, block.text.length - 1, styles])\n\n    return ranges\n  }\n\n  getStyles(\n    block: RawDraftContentBlock,\n    index: number,\n    options: any\n  ): Record<string, string> {\n    const ranges = block.inlineStyleRanges.filter(\n      (inlineRange: CustomRawDraftInlineStyleRange) =>\n        inlineRange.offset <= index &&\n        index < inlineRange.offset + inlineRange.length\n    )\n\n    const customFontSize: number | null = ranges.reduce(\n      (acc: number | null, range: any) => {\n        if (range.style.includes(TextCommand.FontSize)) {\n          return range.style.match(/\\d+/)?.[0]\n        }\n        return acc\n      },\n      null\n    )\n\n    return ranges.reduce(\n      (styles: any, textRange: CustomRawDraftInlineStyleRange) => {\n        const fontsz = customFontSize || options.fontsz\n        const fontszsub = (customFontSize || options.fontszsub) * 0.8\n        switch (textRange.style) {\n          case TextCommand.Bold:\n            styles['font-weight'] = 'bold'\n            break\n\n          case TextCommand.Italic:\n            styles['font-style'] = 'italic'\n            break\n\n          case TextCommand.Subscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = fontsz / 3\n\n            break\n\n          case TextCommand.Superscript:\n            styles['font-size'] = fontszsub + 'px'\n            styles.shiftY = -fontsz / 3\n            break\n\n          case `${TextCommand.FontSize}_${customFontSize}px`:\n            styles['font-size'] = customFontSize + 'px'\n            break\n\n          default:\n        }\n\n        return styles\n      },\n      {}\n    )\n  }\n}\n\nexport default ReText\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Box2Abs,\n  FunctionalGroup,\n  Pile,\n  Pool,\n  Struct,\n  Vec2\n} from 'domain/entities'\n\nimport { LayerMap } from './generalEnumTypes'\nimport ReAtom from './reatom'\nimport ReBond from './rebond'\nimport ReDataSGroupData from './redatasgroupdata'\nimport ReEnhancedFlag from './reenhancedFlag'\nimport ReFrag from './refrag'\nimport ReLoop from './reloop'\nimport ReRGroup from './rergroup'\nimport ReRxnArrow from './rerxnarrow'\nimport ReRxnPlus from './rerxnplus'\nimport ReSGroup from './resgroup'\nimport ReSimpleObject from './resimpleObject'\nimport ReText from './retext'\nimport { Render } from '../raphaelRender'\nimport Visel from './visel'\nimport util from '../util'\n\nclass ReStruct {\n  public static maps = {\n    atoms: ReAtom,\n    bonds: ReBond,\n    rxnPluses: ReRxnPlus,\n    rxnArrows: ReRxnArrow,\n    frags: ReFrag,\n    rgroups: ReRGroup,\n    sgroupData: ReDataSGroupData,\n    enhancedFlags: ReEnhancedFlag,\n    sgroups: ReSGroup,\n    reloops: ReLoop,\n    simpleObjects: ReSimpleObject,\n    texts: ReText\n  }\n\n  public render: Render\n  public molecule: Struct\n  public atoms: Map<number, ReAtom> = new Map()\n  public bonds: Map<number, ReBond> = new Map()\n  public reloops: Map<number, ReLoop> = new Map()\n  public rxnPluses: Map<number, ReRxnPlus> = new Map()\n  public rxnArrows: Map<number, ReRxnArrow> = new Map()\n  public frags: Pool = new Pool()\n  public rgroups: Pool = new Pool()\n  public sgroups: Map<number, ReSGroup> = new Map()\n  public sgroupData: Map<number, ReDataSGroupData> = new Map()\n  public enhancedFlags: Map<number, ReEnhancedFlag> = new Map()\n  private simpleObjects: Map<number, ReSimpleObject> = new Map()\n  public texts: Map<number, ReText> = new Map()\n  private initialized = false\n  private layers: Array<any> = []\n  public connectedComponents: Pool = new Pool()\n  private ccFragmentType: Pool = new Pool()\n  private structChanged = false\n\n  private atomsChanged: Map<number, ReAtom> = new Map()\n  private simpleObjectsChanged: Map<number, ReSimpleObject> = new Map()\n  private rxnArrowsChanged: Map<number, ReRxnArrow> = new Map()\n  private rxnPlusesChanged: Map<number, ReRxnPlus> = new Map()\n  private enhancedFlagsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private bondsChanged: Map<number, ReEnhancedFlag> = new Map()\n  private textsChanged: Map<number, ReText> = new Map()\n  constructor(molecule, render: Render) {\n    // eslint-disable-line max-statements\n    this.render = render\n    this.molecule = molecule || new Struct()\n    this.initLayers()\n    this.clearMarks()\n    // TODO: eachItem ?\n\n    molecule.atoms.forEach((atom, aid) => {\n      this.atoms.set(aid, new ReAtom(atom))\n    })\n\n    molecule.bonds.forEach((bond, bid) => {\n      this.bonds.set(bid, new ReBond(bond))\n    })\n\n    molecule.loops.forEach((loop, lid) => {\n      this.reloops.set(lid, new ReLoop(loop))\n    })\n\n    molecule.rxnPluses.forEach((item, id) => {\n      this.rxnPluses.set(id, new ReRxnPlus(item))\n    })\n\n    molecule.rxnArrows.forEach((item, id) => {\n      this.rxnArrows.set(id, new ReRxnArrow(item))\n    })\n\n    molecule.simpleObjects.forEach((item, id) => {\n      this.simpleObjects.set(id, new ReSimpleObject(item))\n    })\n\n    molecule.texts.forEach((item, id) => {\n      this.texts.set(id, new ReText(item))\n    })\n\n    molecule.frags.forEach((item, id) => {\n      this.frags.set(id, new ReFrag(item))\n      if (item) this.enhancedFlags.set(id, new ReEnhancedFlag())\n    })\n\n    molecule.rgroups.forEach((item, id) => {\n      this.rgroups.set(id, new ReRGroup(item))\n    })\n\n    molecule.sgroups.forEach((item, id) => {\n      this.sgroups.set(id, new ReSGroup(item))\n      if (item.type === 'DAT' && !item.data.attached) {\n        this.sgroupData.set(id, new ReDataSGroupData(item))\n      } // [MK] sort of a hack, we use the SGroup id for the data field id\n      if (FunctionalGroup.isFunctionalGroup(item)) {\n        this.molecule.functionalGroups.set(id, new FunctionalGroup(item))\n      }\n    })\n  }\n\n  connectedComponentRemoveAtom(aid: number, reAtom?: ReAtom): void {\n    const atom = reAtom || this.atoms.get(aid)\n    if (!atom || atom.component < 0) return\n    const cc = this.connectedComponents.get(atom.component)\n\n    cc.delete(aid)\n    if (cc.size < 1) this.connectedComponents.delete(atom.component)\n\n    atom.component = -1\n  }\n\n  clearConnectedComponents(): void {\n    this.connectedComponents.clear()\n    this.atoms.forEach((atom) => {\n      atom.component = -1\n    })\n  }\n\n  getConnectedComponent(\n    aid: Array<number> | number,\n    adjacentComponents: Pile\n  ): Pile {\n    const list = Array.isArray(aid) ? Array.from(aid) : [aid]\n    const ids = new Pile()\n\n    while (list.length > 0) {\n      const aid = list.pop()!\n      ids.add(aid)\n      const atom = this.atoms.get(aid)\n      if (!atom) continue\n      if (atom.component >= 0) adjacentComponents.add(atom.component)\n\n      atom.a.neighbors.forEach((neighbor) => {\n        const halfBond = this.molecule.halfBonds.get(neighbor)\n        if (!halfBond) return\n        const neiId = halfBond.end\n        if (!ids.has(neiId)) list.push(neiId)\n      })\n    }\n\n    return ids\n  }\n\n  addConnectedComponent(idSet: Pile<number>): number {\n    const compId = this.connectedComponents.add(idSet)\n    const adjacentComponents = new Pile()\n    const aidSet = this.getConnectedComponent(\n      Array.from(idSet),\n      adjacentComponents\n    )\n\n    adjacentComponents.delete(compId)\n\n    let type = -1\n    aidSet.forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (!atom) return\n      atom.component = compId\n      if (atom.a.rxnFragmentType !== -1) type = atom.a.rxnFragmentType\n    })\n\n    this.ccFragmentType.set(compId, type)\n    return compId\n  }\n\n  removeConnectedComponent(ccid: number): boolean {\n    this.connectedComponents.get(ccid).forEach((aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.component = -1\n    })\n\n    return this.connectedComponents.delete(ccid)\n  }\n\n  assignConnectedComponents(): void {\n    this.atoms.forEach((atom, aid) => {\n      if (atom.component >= 0) return\n\n      const adjacentComponents = new Pile()\n      const idSet = this.getConnectedComponent(aid, adjacentComponents)\n      adjacentComponents.forEach((ccid) => {\n        this.removeConnectedComponent(ccid)\n      })\n\n      this.addConnectedComponent(idSet)\n    })\n  }\n\n  initLayers(): void {\n    for (const group in LayerMap) {\n      this.layers[LayerMap[group]] = this.render.paper\n        .rect(0, 0, 10, 10)\n        .attr({\n          class: group + 'Layer',\n          fill: '#000',\n          opacity: '0.0'\n        })\n        .toFront()\n    }\n  }\n\n  addReObjectPath(\n    group: LayerMap,\n    visel: Visel,\n    path,\n    pos: Vec2 | null = null,\n    visible = false\n  ): void {\n    // eslint-disable-line max-params\n    if (!path || !this.layers[group].node.parentNode) return\n\n    const paths = Array.isArray(path) ? path : [path]\n\n    paths.forEach((path) => {\n      const offset = this.render.options.offset\n      let bb = visible ? Box2Abs.fromRelBox(util.relBox(path.getBBox())) : null\n      const ext = pos && bb ? bb.translate(pos.negated()) : null\n      if (offset !== null) {\n        path.translateAbs(offset.x, offset.y)\n        bb = bb ? bb.translate(offset) : null\n      }\n      visel.add(path, bb, ext)\n      path.insertBefore(this.layers[LayerMap[group]])\n    })\n  }\n\n  clearMarks(): void {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map + 'Changed'] = new Map()\n    })\n\n    this.structChanged = false\n  }\n\n  markItemRemoved(): void {\n    this.structChanged = true\n  }\n\n  markBond(bid: number, mark: number): void {\n    this.markItem('bonds', bid, mark)\n  }\n\n  markAtom(aid: number, mark: number): void {\n    this.markItem('atoms', aid, mark)\n  }\n\n  markItem(map: string, id: number, mark: number): void {\n    const mapChanged = this[map + 'Changed']\n\n    const value = mapChanged.has(id) ? Math.max(mark, mapChanged.get(id)) : mark\n\n    mapChanged.set(id, value)\n\n    if (this[map].has(id)) this.clearVisel(this[map].get(id).visel)\n  }\n\n  clearVisel(visel: Visel): void {\n    visel.paths.forEach((path) => {\n      path.remove()\n    })\n    visel.clear()\n  }\n\n  eachItem(func) {\n    Object.keys(ReStruct.maps).forEach((map) => {\n      this[map].forEach(func)\n    })\n  }\n\n  getVBoxObj(selection?): Box2Abs | null {\n    selection = selection || {}\n\n    if (isSelectionEmpty(selection)) {\n      Object.keys(ReStruct.maps).forEach((map) => {\n        selection[map] = Array.from(this[map].keys())\n      })\n    }\n\n    let vbox: Box2Abs | null = null\n    Object.keys(ReStruct.maps).forEach((map) => {\n      if (!selection[map]) return\n\n      selection[map].forEach((id) => {\n        const box = this[map].get(id).getVBoxObj(this.render)\n        if (box) vbox = vbox ? Box2Abs.union(vbox, box) : box.clone()\n      })\n    })\n\n    vbox = vbox || new Box2Abs(0, 0, 0, 0)\n    return vbox\n  }\n\n  translate(d): void {\n    this.eachItem((item) => item.visel.translate(d))\n  }\n\n  scale(s: number): void {\n    // NOTE: bounding boxes are not valid after scaling\n    this.eachItem((item) => scaleVisel(item.visel, s))\n  }\n\n  clearVisels(): void {\n    this.eachItem((item) => this.clearVisel(item.visel))\n  }\n\n  update(force: boolean): boolean {\n    // eslint-disable-line max-statements\n    force = force || !this.initialized\n\n    // check items to update\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n      if (force) {\n        this[map].forEach((_item, id) => mapChanged.set(id, 1))\n      } else {\n        // check if some of the items marked are already gone\n        mapChanged.forEach((_value, id) => {\n          if (!this[map].has(id)) mapChanged.delete(id)\n        })\n      }\n    })\n\n    this.atomsChanged.forEach((_value, aid) =>\n      this.connectedComponentRemoveAtom(aid)\n    )\n\n    // clean up empty fragments\n    // TODO: fragment removal should be triggered by the action responsible for the fragment contents removal and form an operation of its own\n    const emptyFrags = this.frags.filter(\n      (fid, frag) => !frag.calcBBox(this.render.ctab, fid, this.render)\n    )\n\n    emptyFrags.forEach((frag, fid) => {\n      this.clearVisel(frag.visel)\n      this.frags.delete(fid)\n      this.molecule.frags.delete(fid)\n    })\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const mapChanged = this[map + 'Changed']\n\n      mapChanged.forEach((_value, id) => {\n        this.clearVisel(this[map].get(id).visel)\n        this.structChanged = this.structChanged || mapChanged.get(id) > 0\n      })\n    })\n\n    // TODO: when to update sgroup?\n    this.sgroups.forEach((sgroup) => {\n      this.clearVisel(sgroup.visel)\n      sgroup.hovering = null\n      sgroup.selectionPlate = null\n    })\n\n    // TODO [RB] need to implement update-on-demand for fragments and r-groups\n    this.frags.forEach((frag) => {\n      this.clearVisel(frag.visel)\n    })\n\n    this.rgroups.forEach((rgroup) => {\n      this.clearVisel(rgroup.visel)\n    })\n\n    if (force) {\n      // clear and recreate all half-bonds\n      this.clearConnectedComponents()\n      this.molecule.initHalfBonds()\n      this.molecule.initNeighbors()\n    }\n\n    // only update half-bonds adjacent to atoms that have moved\n    const atomsChangedArray = Array.from(this.atomsChanged.keys())\n    this.molecule.updateHalfBonds(atomsChangedArray)\n    this.molecule.sortNeighbors(atomsChangedArray)\n\n    this.assignConnectedComponents()\n    this.initialized = true\n\n    this.verifyLoops()\n    const updLoops = force || this.structChanged\n    if (updLoops) this.updateLoops()\n    this.showLabels()\n    this.showBonds()\n    if (updLoops) this.showLoops()\n    this.showReactionSymbols()\n    this.showSGroups()\n\n    this.showFragments()\n    this.showRGroups()\n    this.showEnhancedFlags()\n    this.showSimpleObjects()\n    this.showTexts()\n    this.clearMarks()\n\n    return true\n  }\n\n  updateLoops(): void {\n    this.reloops.forEach((reloop) => {\n      this.clearVisel(reloop.visel)\n    })\n    const ret = this.molecule.findLoops()\n    ret.bondsToMark.forEach((bid) => {\n      this.markBond(bid, 1)\n    })\n    ret.newLoops.forEach((loopId) => {\n      this.reloops.set(loopId, new ReLoop(this.molecule.loops.get(loopId)))\n    })\n  }\n\n  showLoops(): void {\n    const options = this.render.options\n    this.reloops.forEach((reloop, rlid) => {\n      reloop.show(this, rlid, options)\n    })\n  }\n\n  showSimpleObjects(): void {\n    const options = this.render.options\n\n    this.simpleObjectsChanged.forEach((_value, id) => {\n      const simpleObject = this.simpleObjects.get(id)\n      if (simpleObject) simpleObject.show(this, options)\n    })\n  }\n\n  showTexts() {\n    const options = this.render.options\n\n    this.textsChanged.forEach((_value, id) => {\n      const text = this.texts.get(id)\n      if (text) text.show(this, id, options)\n    })\n  }\n\n  showReactionSymbols(): void {\n    const options = this.render.options\n\n    this.rxnArrowsChanged.forEach((_value, id) => {\n      const arrow = this.rxnArrows.get(id)\n      if (arrow) arrow.show(this, id, options)\n    })\n\n    this.rxnPlusesChanged.forEach((_value, id) => {\n      const plus = this.rxnPluses.get(id)\n      if (plus) plus.show(this, id, options)\n    })\n  }\n\n  showSGroups(): void {\n    this.molecule.sGroupForest\n      .getSGroupsBFS()\n      .reverse()\n      .forEach((id) => {\n        const resgroup = this.sgroups.get(id)\n        if (!resgroup) return\n        resgroup.show(this)\n      })\n  }\n\n  showFragments(): void {\n    this.frags.forEach((frag, id) => {\n      const path = frag.draw(this.render, id)\n      if (path) {\n        this.addReObjectPath(LayerMap.data, frag.visel, path, null, true)\n      }\n      // TODO fragment selection & highlighting\n    })\n  }\n\n  showRGroups(): void {\n    const options = this.render.options\n    this.rgroups.forEach((rgroup, id) => {\n      rgroup.show(this, id, options)\n    })\n  }\n\n  loopRemove(loopId: number): void {\n    const reloop = this.reloops.get(loopId)\n    if (!reloop) {\n      return\n    }\n    this.clearVisel(reloop.visel)\n\n    const bondlist: Array<number> = []\n\n    reloop.loop.hbs.forEach((hbid) => {\n      const hb = this.molecule.halfBonds.get(hbid)\n      if (!hb) return\n      hb.loop = -1\n      this.markBond(hb.bid, 1)\n      this.markAtom(hb.begin, 1)\n      bondlist.push(hb.bid)\n    })\n\n    this.reloops.delete(loopId)\n    this.molecule.loops.delete(loopId)\n  }\n\n  verifyLoops(): void {\n    this.reloops.forEach((reloop, rlid) => {\n      if (!reloop.isValid(this.molecule, rlid)) this.loopRemove(rlid)\n    })\n  }\n\n  showLabels(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.atomsChanged.forEach((_value, aid) => {\n      const atom = this.atoms.get(aid)\n      if (atom) atom.show(this, aid, options)\n    })\n  }\n\n  showEnhancedFlags(): void {\n    const options = this.render.options\n\n    this.enhancedFlagsChanged.forEach((_value, chid) => {\n      const flag = this.enhancedFlags.get(chid)\n      if (flag) flag.show(this, chid, options)\n    })\n  }\n\n  showBonds(): void {\n    // eslint-disable-line max-statements\n    const options = this.render.options\n\n    this.bondsChanged.forEach((_value, bid) => {\n      const bond = this.bonds.get(bid)\n      if (bond) {\n        bond.show(this, bid, options)\n      }\n    })\n  }\n\n  setSelection(selection?) {\n    const atoms: { selected: boolean; sgroup: number }[] = []\n\n    Object.keys(ReStruct.maps).forEach((map) => {\n      const [mapValues] = this[map].values() // hack to include ReSGroup, figure out better solution\n      if (ReStruct.maps[map].isSelectable() || mapValues instanceof ReSGroup) {\n        this[map].forEach((item, id) => {\n          if (item instanceof ReAtom) {\n            let sgroup\n            for (const sgId of item.a.sgs.values()) {\n              sgroup = sgId\n            }\n            atoms.push({\n              selected: item.selected,\n              sgroup: sgroup\n            })\n          }\n          if (\n            item instanceof ReSGroup &&\n            FunctionalGroup.isContractedFunctionalGroup(\n              item.item.id,\n              this.molecule.functionalGroups\n            )\n          ) {\n            const sGroupAtoms = atoms.filter(\n              (atom) => atom.sgroup === item.item.id\n            )\n            item.selected = sGroupAtoms.length > 0 && sGroupAtoms[0].selected\n          }\n\n          let selected = selection?.[map]\n            ? selection[map].indexOf(id) > -1\n            : item.selected\n\n          if (selection === null) {\n            selected = false\n          }\n\n          this.showItemSelection(item, selected)\n        })\n      }\n    })\n  }\n\n  showItemSelection(item, selected) {\n    const exists = isSelectionSvgObjectExists(item)\n    // TODO: simplify me, who sets `removed`?\n    item.selected = selected\n    if (item instanceof ReDataSGroupData) item.sgroup.selected = selected\n    if (selected) {\n      if (!exists) {\n        const render = this.render\n        const options = render.options\n        const paper = render.paper\n\n        item.selectionPlate = item.makeSelectionPlate(this, paper, options)\n        this.addReObjectPath(\n          LayerMap.selectionPlate,\n          item.visel,\n          item.selectionPlate\n        )\n      }\n      if (item.selectionPlate) item.selectionPlate.show() // TODO [RB] review\n    } else if (exists && item.selectionPlate) {\n      item.selectionPlate.hide() // TODO [RB] review\n    }\n  }\n}\n\nfunction isSelectionEmpty(selection) {\n  if (!selection) return true\n\n  const anySelection = Object.keys(ReStruct.maps).some(\n    (map) => selection[map] && selection[map].length > 0\n  )\n\n  return !anySelection\n}\n\nfunction scaleRPath(path, scaleFactor: number): void {\n  if (path.type === 'set') {\n    // TODO: rework scaling\n    for (let i = 0; i < path.length; ++i) scaleRPath(path[i], scaleFactor)\n  } else {\n    if (!(typeof path.attrs === 'undefined')) {\n      if ('font-size' in path.attrs) {\n        path.attr('font-size', path.attrs['font-size'] * scaleFactor)\n      } else if ('stroke-width' in path.attrs) {\n        path.attr('stroke-width', path.attrs['stroke-width'] * scaleFactor)\n      }\n    }\n    path.scale(scaleFactor, scaleFactor, 0, 0)\n  }\n}\n\nfunction scaleVisel(visel, s) {\n  for (let i = 0; i < visel.paths.length; ++i) scaleRPath(visel.paths[i], s)\n}\n\n/**\n * SelectionPlate could be an item then value would be in it\n * or it could be a set of items then removed value need to be check on at least one of items in set\n * @param item\n * @returns {boolean}\n */\nfunction isSelectionSvgObjectExists(item) {\n  return (\n    item &&\n    item.selectionPlate !== null &&\n    ((!item.selectionPlate?.items && !item.selectionPlate?.removed) ||\n      (Array.isArray(item.selectionPlate?.items) &&\n        !item.selectionPlate[0]?.removed))\n  )\n}\n\nexport default ReStruct\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport { inRange } from 'lodash'\n\nlet FRAC = Math.PI / 12 // '15º'\n\nfunction setFracAngle(angle) {\n  FRAC = (Math.PI / 180) * angle\n}\n\nfunction calcAngle(pos0, pos1) {\n  const v = Vec2.diff(pos1, pos0)\n  return Math.atan2(v.y, v.x)\n}\n\nfunction fracAngle(angle, angle2) {\n  if (angle2) angle = calcAngle(angle, angle2)\n  return Math.round(angle / FRAC) * FRAC\n}\n\nfunction calcNewAtomPos(pos0, pos1, ctrlKey) {\n  const v = new Vec2(1, 0).rotate(\n    ctrlKey ? calcAngle(pos0, pos1) : fracAngle(pos0, pos1)\n  )\n  v.add_(pos0) // eslint-disable-line no-underscore-dangle\n  return v\n}\n\nfunction degrees(angle) {\n  let degree = Math.round((angle / Math.PI) * 180)\n  if (degree > 180) degree -= 360\n  else if (degree <= -180) degree += 360\n  return degree\n}\n\nconst BONDS_MERGE_ANGLE = 10 // 'º'\nconst BONDS_MERGE_SCALE = 0.2\n\nfunction mergeBondsParams(struct1, bond1, struct2, bond2) {\n  const begin1 = struct1.atoms.get(bond1.begin)\n  const begin2 = struct2.atoms.get(bond2.begin)\n  const end1 = struct1.atoms.get(bond1.end)\n  const end2 = struct2.atoms.get(bond2.end)\n\n  const angle = calcAngle(begin1.pp, end1.pp) - calcAngle(begin2.pp, end2.pp)\n  const mergeAngle = Math.abs(degrees(angle) % 180)\n\n  const scale = Vec2.dist(begin1.pp, end1.pp) / Vec2.dist(begin2.pp, end2.pp)\n\n  const merged =\n    !inRange(mergeAngle, BONDS_MERGE_ANGLE, 180 - BONDS_MERGE_ANGLE) &&\n    inRange(scale, 1 - BONDS_MERGE_SCALE, 1 + BONDS_MERGE_SCALE)\n\n  return { merged, angle, scale, cross: Math.abs(degrees(angle)) > 90 }\n}\n\nexport default {\n  calcAngle,\n  fracAngle,\n  calcNewAtomPos,\n  degrees,\n  setFracAngle,\n  mergeBondsParams\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Vec2 } from 'domain/entities'\nimport utils from '../editor/shared/utils'\n\nfunction defaultOptions(opt) {\n  const scaleFactor = opt.scale || 100\n\n  if (opt.rotationStep) utils.setFracAngle(opt.rotationStep)\n\n  const labelFontSize = Math.ceil(1.9 * (scaleFactor / 6))\n  const subFontSize = Math.ceil(0.7 * labelFontSize)\n\n  const defaultOptions = {\n    'dearomatize-on-load': false,\n    // flags for debugging\n    showAtomIds: false,\n    showBondIds: false,\n    showHalfBondIds: false,\n    showLoopIds: false,\n    // rendering customization flags\n    // TODO: hide enhanced flags opts\n    showValenceWarnings: true,\n    autoScale: false, // scale structure to fit into the given view box, used in view mode\n    autoScaleMargin: 0,\n    maxBondLength: 0, // 0 stands for \"not specified\"\n    atomColoring: true,\n    hideImplicitHydrogen: false,\n    hideTerminalLabels: false,\n    // atoms\n    carbonExplicitly: false,\n    showCharge: true,\n    showHydrogenLabels: 'on',\n    showValence: true,\n    // bonds\n    aromaticCircle: true,\n\n    scale: scaleFactor,\n    zoom: 1.0,\n    offset: new Vec2(),\n\n    lineWidth: scaleFactor / 20,\n    bondSpace: opt.doubleBondWidth || scaleFactor / 7,\n    stereoBond: opt.stereoBondWidth || scaleFactor / 7,\n    subFontSize,\n    font: '30px Arial',\n    fontsz: labelFontSize,\n    fontszsub: subFontSize,\n    fontRLabel: labelFontSize * 1.2,\n    fontRLogic: labelFontSize * 0.7,\n\n    /* styles */\n    lineattr: {\n      stroke: '#000',\n      'stroke-width': opt.bondThickness || scaleFactor / 20,\n      'stroke-linecap': 'round',\n      'stroke-linejoin': 'round'\n    },\n    /* eslint-enable quote-props */\n    selectionStyle: {\n      fill: '#7f7',\n      stroke: 'none'\n    },\n    hoverStyle: {\n      stroke: '#0c0',\n      'stroke-width': (0.6 * scaleFactor) / 20\n    },\n    sgroupBracketStyle: {\n      stroke: 'darkgray',\n      'stroke-width': (0.5 * scaleFactor) / 20\n    },\n    lassoStyle: {\n      stroke: 'gray',\n      'stroke-width': '1px'\n    },\n    hoverStyleSimpleObject: {\n      stroke: '#0c0',\n      'stroke-width': scaleFactor / 4,\n      'stroke-linecap': 'round',\n      'stroke-opacity': 0.6\n    },\n    atomSelectionPlateRadius: labelFontSize * 1.2,\n    contractedFunctionalGroupSize: 50\n  }\n\n  return Object.assign({}, defaultOptions, opt)\n}\n\nexport default defaultOptions\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Box2Abs, Struct, Vec2 } from 'domain/entities'\n\nimport Raphael from './raphael-ext'\nimport { ReStruct } from './restruct'\nimport { Scale } from 'domain/helpers'\nimport defaultOptions from './options'\nimport draw from './draw'\n\nexport function Render(clientArea, opt) {\n  let renderWidth = opt.width || clientArea.clientWidth - 10\n  let renderHeight = opt.height || clientArea.clientHeight - 10\n  renderWidth = renderWidth > 0 ? renderWidth : 0\n  renderHeight = renderHeight > 0 ? renderHeight : 0\n\n  this.userOpts = opt\n  this.clientArea = clientArea\n  this.paper = new Raphael(clientArea, renderWidth, renderHeight)\n  this.sz = Vec2.ZERO\n  this.ctab = new ReStruct(new Struct(), this)\n  this.options = defaultOptions(this.userOpts)\n}\n\nRender.prototype.updateOptions = function (opts) {\n  try {\n    const passedOptions = JSON.parse(opts)\n    if (passedOptions && typeof passedOptions === 'object') {\n      this.options = { ...this.options, ...passedOptions }\n      return this.options\n    }\n  } catch (e) {\n    console.log('Not a valid settings object')\n  }\n  return false\n}\n\nRender.prototype.selectionPolygon = function (r) {\n  return draw.selectionPolygon(this.paper, r, this.options)\n}\n\nRender.prototype.selectionLine = function (p0, p1) {\n  return draw.selectionLine(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.selectionRectangle = function (p0, p1) {\n  return draw.selectionRectangle(this.paper, p0, p1, this.options)\n}\n\nRender.prototype.view2obj = function (p, isRelative) {\n  let scroll = this.scrollPos()\n  if (!this.useOldZoom) {\n    p = p.scaled(1 / this.options.zoom)\n    scroll = scroll.scaled(1 / this.options.zoom)\n  }\n  p = isRelative ? p : p.add(scroll).sub(this.options.offset)\n  return Scale.scaled2obj(p, this.options)\n}\n\nRender.prototype.obj2view = function (v, isRelative) {\n  let p = Scale.obj2scaled(v, this.options)\n  p = isRelative\n    ? p\n    : p\n        .add(this.options.offset)\n        .sub(this.scrollPos().scaled(1 / this.options.zoom))\n  if (!this.useOldZoom) p = p.scaled(this.options.zoom)\n  return p\n}\n\nRender.prototype.scrollPos = function () {\n  return new Vec2(this.clientArea.scrollLeft, this.clientArea.scrollTop)\n}\n\nRender.prototype.page2obj = function (event) {\n  const clientArea = this.clientArea\n\n  const { top: offsetTop, left: offsetLeft } =\n    clientArea.getBoundingClientRect()\n\n  const pp = new Vec2(event.clientX - offsetLeft, event.clientY - offsetTop)\n  return this.view2obj(pp)\n}\n\nRender.prototype.setPaperSize = function (sz) {\n  this.sz = sz\n  this.paper.setSize(sz.x * this.options.zoom, sz.y * this.options.zoom)\n  this.setViewBox(this.options.zoom)\n}\n\nRender.prototype.setOffset = function (newoffset) {\n  const delta = new Vec2(\n    newoffset.x - this.options.offset.x,\n    newoffset.y - this.options.offset.y\n  )\n  this.clientArea.scrollLeft += delta.x\n  this.clientArea.scrollTop += delta.y\n  this.options.offset = newoffset\n}\n\nRender.prototype.setZoom = function (zoom) {\n  // when scaling the canvas down it may happen that the scaled canvas is smaller than the view window\n  // don't forget to call setScrollOffset after zooming (or use extendCanvas directly)\n  this.options.zoom = zoom\n  this.paper.setSize(this.sz.x * zoom, this.sz.y * zoom)\n  this.setViewBox(zoom)\n}\n\nfunction calcExtend(sSz, x0, y0, x1, y1) {\n  // eslint-disable-line max-params\n  let ex = x0 < 0 ? -x0 : 0\n  let ey = y0 < 0 ? -y0 : 0\n\n  if (sSz.x < x1) ex += x1 - sSz.x\n  if (sSz.y < y1) ey += y1 - sSz.y\n  return new Vec2(ex, ey)\n}\n\nRender.prototype.setScrollOffset = function (x, y) {\n  const clientArea = this.clientArea\n  const cx = clientArea.clientWidth\n  const cy = clientArea.clientHeight\n  const e = calcExtend(\n    this.sz.scaled(this.options.zoom),\n    x,\n    y,\n    cx + x,\n    cy + y\n  ).scaled(1 / this.options.zoom)\n  if (e.x > 0 || e.y > 0) {\n    this.setPaperSize(this.sz.add(e))\n    const d = new Vec2(x < 0 ? -x : 0, y < 0 ? -y : 0).scaled(\n      1 / this.options.zoom\n    )\n    if (d.x > 0 || d.y > 0) {\n      this.ctab.translate(d)\n      this.setOffset(this.options.offset.add(d))\n    }\n  }\n  // clientArea.scrollLeft = x\n  // clientArea.scrollTop = y\n  clientArea.scrollLeft = x * this.options.scale\n  clientArea.scrollTop = y * this.options.scale\n  // TODO: store drag position in scaled systems\n  // scrollLeft = clientArea.scrollLeft;\n  // scrollTop = clientArea.scrollTop;\n  this.update(false)\n}\n\nRender.prototype.setScale = function (z) {\n  if (this.options.offset) {\n    this.options.offset = this.options.offset.scaled(1 / z).scaled(z)\n  }\n  this.userOpts.scale *= z\n  this.options = null\n  this.update(true)\n}\n\nRender.prototype.setViewBox = function (z) {\n  if (!this.useOldZoom) {\n    this.paper.canvas.setAttribute(\n      'viewBox',\n      '0 0 ' + this.sz.x + ' ' + this.sz.y\n    )\n  } else this.setScale(z)\n}\n\nRender.prototype.setMolecule = function (ctab) {\n  this.paper.clear()\n  this.ctab = new ReStruct(ctab, this)\n  this.options.offset = new Vec2()\n  this.update(false)\n}\n\nRender.prototype.update = function (force = false, viewSz = null) {\n  // eslint-disable-line max-statements\n  viewSz =\n    viewSz ||\n    new Vec2(\n      this.clientArea.clientWidth || 100,\n      this.clientArea.clientHeight || 100\n    )\n\n  const changes = this.ctab.update(force)\n  this.ctab.setSelection() // [MK] redraw the selection bits where necessary\n  if (changes) {\n    const sf = this.options.scale\n    const bb = this.ctab\n      .getVBoxObj()\n      .transform(Scale.obj2scaled, this.options)\n      .translate(this.options.offset || new Vec2())\n\n    if (!this.options.autoScale) {\n      const ext = Vec2.UNIT.scaled(sf)\n      const eb = bb.sz().length() > 0 ? bb.extend(ext, ext) : bb\n      const vb = new Box2Abs(\n        this.scrollPos(),\n        viewSz.scaled(1 / this.options.zoom).sub(Vec2.UNIT.scaled(20))\n      )\n      const cb = Box2Abs.union(vb, eb)\n      if (!this.oldCb) this.oldCb = new Box2Abs()\n\n      const sz = cb.sz().floor()\n      const delta = this.oldCb.p0.sub(cb.p0).ceil()\n      this.oldBb = bb\n      if (!this.sz || sz.x !== this.sz.x || sz.y !== this.sz.y) {\n        this.setPaperSize(sz)\n      }\n\n      this.options.offset = this.options.offset || new Vec2()\n      if (delta.x !== 0 || delta.y !== 0) {\n        this.setOffset(this.options.offset.add(delta))\n        this.ctab.translate(delta)\n      }\n    } else {\n      const sz1 = bb.sz()\n      const marg = this.options.autoScaleMargin\n      const mv = new Vec2(marg, marg)\n      const csz = viewSz\n      if (marg && (csz.x < 2 * marg + 1 || csz.y < 2 * marg + 1)) {\n        throw new Error('View box too small for the given margin')\n      }\n      let rescale =\n        this.options.rescaleAmount ||\n        Math.max(sz1.x / (csz.x - 2 * marg), sz1.y / (csz.y - 2 * marg))\n      if (this.options.maxBondLength / rescale > 1.0) rescale = 1.0\n      const sz2 = sz1.add(mv.scaled(2 * rescale))\n      /* eslint-disable no-mixed-operators */\n      this.paper.setViewBox(\n        bb.pos().x - marg * rescale - (csz.x * rescale - sz2.x) / 2,\n        bb.pos().y - marg * rescale - (csz.y * rescale - sz2.y) / 2,\n        csz.x * rescale,\n        csz.y * rescale\n      )\n      /* eslint-enable no-mixed-operators */\n    }\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\n// todo: rename file in another PR\nimport { ReStruct, StereLabelStyleType } from '../../render'\n\nimport { OperationType } from './OperationType'\n\ntype ValueOf<TObject extends object> = Readonly<TObject[keyof TObject]>\ntype OperationType = ValueOf<typeof OperationType>\n\nclass BaseOperation {\n  // eslint-disable-next-line no-use-before-define\n  private _inverted: BaseOperation | undefined\n  type: OperationType\n  priority: number\n  data: any\n\n  constructor(type: OperationType, priority = 0) {\n    this.type = type\n    this.priority = priority\n  }\n\n  execute(_restruct: ReStruct): void {\n    throw new Error('Operation.execute() is not implemented')\n  }\n\n  perform(restruct: ReStruct): BaseOperation {\n    this.execute(restruct)\n    if (!this._inverted) {\n      this._inverted = this.invert()\n      this._inverted._inverted = this\n    }\n    return this._inverted\n  }\n\n  invert(): BaseOperation {\n    throw new Error('Operation.invert() is not implemented')\n  }\n\n  isDummy(_restruct: ReStruct): boolean {\n    return false\n  }\n\n  protected static invalidateAtom(restruct: ReStruct, atomId: number, level?) {\n    const atom = restruct.atoms.get(atomId)\n    if (!atom) {\n      return\n    }\n\n    restruct.markAtom(atomId, level ? 1 : 0)\n\n    const halfBonds = restruct.molecule.halfBonds\n\n    atom.a.neighbors.forEach((halfBondId) => {\n      if (!halfBonds.has(halfBondId)) {\n        return\n      }\n\n      const halfBond = halfBonds.get(halfBondId)\n      if (!halfBond) {\n        return\n      }\n\n      restruct.markBond(halfBond.bid, 1)\n      restruct.markAtom(halfBond.end, 0)\n\n      if (level) {\n        BaseOperation.invalidateLoop(restruct, halfBond.bid)\n      }\n    })\n\n    const fragment = atom.a.fragment\n    const stereoLabelStyle = restruct.render.options.stereoLabelStyle\n\n    restruct.atoms.forEach((atom, atomId) => {\n      if (\n        stereoLabelStyle === StereLabelStyleType.IUPAC ||\n        stereoLabelStyle === StereLabelStyleType.Classic\n      ) {\n        if (atom.a.fragment === fragment) restruct.markAtom(atomId, 0)\n      }\n    })\n  }\n\n  protected static invalidateLoop(restruct: ReStruct, bondId: number) {\n    const bond = restruct.bonds.get(bondId)\n    if (!bond || !bond.b.hb1 || !bond.b.hb2) {\n      return\n    }\n\n    const halfBond1 = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const halfBond2 = restruct.molecule.halfBonds.get(bond.b.hb2)\n\n    if (halfBond1 && halfBond1.loop >= 0) {\n      restruct.loopRemove(halfBond1.loop)\n    }\n\n    if (halfBond2 && halfBond2.loop >= 0) {\n      restruct.loopRemove(halfBond2.loop)\n    }\n  }\n\n  protected static invalidateBond(restruct: ReStruct, bondId: number) {\n    BaseOperation.invalidateLoop(restruct, bondId)\n\n    const bond = restruct.bonds.get(bondId)\n    if (!bond) {\n      return\n    }\n    BaseOperation.invalidateAtom(restruct, bond.b.begin, 0)\n    BaseOperation.invalidateAtom(restruct, bond.b.end, 0)\n  }\n\n  protected static invalidateItem(\n    restruct: ReStruct,\n    map,\n    id: number,\n    level?: any\n  ) {\n    if (map === 'atoms') {\n      BaseOperation.invalidateAtom(restruct, id, level)\n      return\n    }\n\n    if (map === 'bonds') {\n      BaseOperation.invalidateBond(restruct, id)\n\n      if (level > 0) {\n        BaseOperation.invalidateLoop(restruct, id)\n      }\n      return\n    }\n\n    restruct.markItem(map, id, level)\n  }\n\n  protected static invalidateEnhancedFlag(\n    restruct: ReStruct,\n    fragmentId: number\n  ) {\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', fragmentId, 1)\n  }\n}\n\nexport { BaseOperation }\nexport default BaseOperation\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const OperationType = Object.freeze({\n  ATOM_ADD: 'Add atom',\n  ATOM_DELETE: 'Delete atom',\n  ATOM_ATTR: 'Set atom attribute',\n  ATOM_MOVE: 'Move atom',\n  CALC_IMPLICIT_H: 'Calculate implicit hydrogen',\n  BOND_ADD: 'Add bond',\n  BOND_DELETE: 'Delete bond',\n  BOND_ATTR: 'Set bond attribute',\n  BOND_MOVE: 'Move bond',\n  LOOP_MOVE: 'Move loop',\n  S_GROUP_ATOM_ADD: 'Add atom to s-group',\n  S_GROUP_ATOM_REMOVE: 'Remove atom from s-group',\n  S_GROUP_ATTR: 'Set s-group attribute',\n  S_GROUP_CREATE: 'Create s-group',\n  S_GROUP_DELETE: 'Delete s-group',\n  S_GROUP_ADD_TO_HIERACHY: 'Add s-group to hierarchy',\n  S_GROUP_REMOVE_FROM_HIERACHY: 'Delete s-group from hierarchy',\n  R_GROUP_ATTR: 'Set r-group attribute',\n  R_GROUP_FRAGMENT: 'R-group fragment',\n  UPDATE_IF_THEN: 'Update',\n  RESTORE_IF_THEN: 'Restore',\n  RXN_ARROW_ADD: 'Add rxn arrow',\n  RXN_ARROW_DELETE: 'Delete rxn arrow',\n  RXN_ARROW_MOVE: 'Move rxn arrow',\n  RXN_ARROW_RESIZE: 'Resize rxn arrow',\n  RXN_PLUS_ADD: 'Add rxn plus',\n  RXN_PLUS_DELETE: 'Delete rxn plus',\n  RXN_PLUS_MOVE: 'Move rxn plus',\n  S_GROUP_DATA_MOVE: 'Move s-group data',\n  CANVAS_LOAD: 'Load canvas',\n  ALIGN_DESCRIPTORS: 'Align descriptors',\n  SIMPLE_OBJECT_ADD: 'Add simple object',\n  SIMPLE_OBJECT_DELETE: 'Delete simple object',\n  SIMPLE_OBJECT_MOVE: 'Move simple object',\n  SIMPLE_OBJECT_RESIZE: 'Resize simple object',\n  RESTORE_DESCRIPTORS_POSITION: 'Restore descriptors position',\n  FRAGMENT_ADD: 'Add fragment',\n  FRAGMENT_DELETE: 'Delete fragment',\n  FRAGMENT_STEREO_FLAG: 'Add fragment stereo flag',\n  FRAGMENT_ADD_STEREO_ATOM: 'Add stereo atom to fragment',\n  FRAGMENT_DELETE_STEREO_ATOM: 'Delete stereo atom from fragment',\n  ENHANCED_FLAG_MOVE: 'Move enhanced flag',\n  TEXT_CREATE: 'Add text',\n  TEXT_UPDATE: 'Edit text',\n  TEXT_DELETE: 'Delete text',\n  TEXT_MOVE: 'Move text',\n  ADD_HIGHLIGHT: 'Highlight',\n  UPDATE_HIGHLIGHT: 'Update highlight',\n  REMOVE_HIGHLIGHT: 'Remove highlight'\n})\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  aid?: any\n  attribute?: any\n  value?: any\n}\n\nexport class AtomAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(atomId?: any, attribute?: any, value?: any) {\n    super(OperationType.ATOM_ATTR, 1)\n    this.data = { aid: atomId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { aid, attribute, value } = this.data\n\n      const atom = restruct.molecule.atoms.get(aid)!\n      if (!this.data2) {\n        this.data2 = {\n          aid,\n          attribute,\n          value: atom[attribute]\n        }\n      }\n\n      atom[attribute] = value\n      BaseOperation.invalidateAtom(restruct, aid)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    return (\n      restruct.molecule.atoms.get(this.data?.aid)![this.data?.attribute] ===\n      this.data?.value\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class AtomMove extends BaseOperation {\n  data: {\n    aid: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(atomId?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.ATOM_MOVE, 2)\n    this.data = { aid: atomId, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { aid, d } = this.data\n    const atom = struct.atoms.get(aid)\n    if (!atom) return\n    atom!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n    const reatom = restruct.atoms.get(aid)\n    if (reatom) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reatom.visel.translate(scaled)\n    }\n\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateAtom(restruct, aid, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new AtomMove()\n    inverted.data = this.data\n    return inverted\n  }\n\n  isDummy() {\n    const { d } = this.data\n    return d.x === 0 && d.y === 0\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Pile, Vec2 } from 'domain/entities'\nimport { ReAtom, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  aid: any\n  atom: any\n  pos: any\n}\n\nclass AtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(atom?: any, pos?: any) {\n    super(OperationType.ATOM_ADD)\n    this.data = { atom, pos, aid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atom, pos } = this.data\n\n    const struct = restruct.molecule\n\n    const pp: { label: string } = { label: '' }\n    if (atom) {\n      Object.keys(atom).forEach((p) => {\n        pp[p] = atom[p]\n      })\n    }\n\n    pp.label = pp.label || 'C'\n    if (typeof this.data.aid !== 'number') {\n      this.data.aid = struct.atoms.add(new Atom(pp))\n    } else {\n      struct.atoms.set(this.data.aid, new Atom(pp))\n    }\n\n    const { aid } = this.data\n\n    // notifyAtomAdded\n    const atomData = new ReAtom(struct.atoms.get(aid)!)\n\n    atomData.component = restruct.connectedComponents.add(new Pile([aid]))\n    restruct.atoms.set(aid, atomData)\n    restruct.markAtom(aid, 1)\n\n    struct.atomSetPos(aid, new Vec2(pos))\n\n    const arrow = struct.rxnArrows.get(0)\n    if (arrow) {\n      const atom = struct.atoms.get(aid)!\n      atom.rxnFragmentType = struct.defineRxnFragmentTypeForAtomset(\n        new Pile([aid]),\n        arrow.pos[0].x\n      )\n    }\n  }\n\n  invert() {\n    const inverted = new AtomDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass AtomDelete extends BaseOperation {\n  data: Data\n\n  constructor(atomId?: any) {\n    super(OperationType.ATOM_DELETE, 5)\n    this.data = { aid: atomId, atom: null, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.atom) {\n      this.data.atom = struct.atoms.get(aid)\n      this.data.pos = this.data.atom.pp\n    }\n\n    // notifyAtomRemoved(aid);\n    const restructedAtom = restruct.atoms.get(aid)\n    if (!restructedAtom) {\n      return\n    }\n\n    const set = restruct.connectedComponents.get(restructedAtom.component)\n    set.delete(aid)\n    if (set.size === 0) {\n      restruct.connectedComponents.delete(restructedAtom.component)\n    }\n\n    restruct.clearVisel(restructedAtom.visel)\n    restruct.atoms.delete(aid)\n    restruct.markItemRemoved()\n    struct.atoms.delete(aid)\n  }\n\n  invert() {\n    const inverted = new AtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { AtomAdd, AtomDelete }\nexport * from './AtomAttr'\nexport * from './AtomMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  bid: any\n  attribute: any\n  value: any\n}\n\nexport class BondAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(bondId?: any, attribute?: any, value?: any) {\n    super(OperationType.BOND_ATTR, 2)\n    this.data = { bid: bondId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n\n      if (!this.data2) {\n        this.data2 = {\n          bid: bid,\n          attribute: attribute,\n          value: bond[attribute]\n        }\n      }\n\n      bond[attribute] = value\n\n      BaseOperation.invalidateBond(restruct, bid)\n      if (attribute === 'type') {\n        BaseOperation.invalidateLoop(restruct, bid)\n      }\n    }\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { attribute, bid, value } = this.data\n      const bond = restruct.molecule.bonds.get(bid)!\n      return bond[attribute] === value\n    }\n    return false\n  }\n\n  invert() {\n    const inverted = new BondAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class BondMove extends BaseOperation {\n  data: {\n    bid: any\n    d: any\n  }\n\n  constructor(bondId?: any, d?: any) {\n    super(OperationType.BOND_MOVE, 2)\n    this.data = { bid: bondId, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid, d } = this.data\n    const bond = restruct.bonds.get(bid)\n    if (!bond) return\n\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    bond.visel.translate(scaled)\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new BondMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReBond, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { Bond } from 'domain/entities'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  bond: any\n  begin: any\n  end: any\n  bid: any\n}\n\nclass BondAdd extends BaseOperation {\n  data: Data\n\n  constructor(begin?: any, end?: any, bond?: any) {\n    super(OperationType.BOND_ADD, 1)\n    this.data = { bond, begin, end, bid: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { begin, bond, end } = this.data\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n\n    if (begin === end) {\n      throw new Error('Distinct atoms expected')\n    }\n\n    BaseOperation.invalidateAtom(restruct, begin, 1)\n    BaseOperation.invalidateAtom(restruct, end, 1)\n\n    const pp: {\n      type: number\n      begin: number\n      end: number\n    } = {\n      type: 0,\n      begin: 0,\n      end: 0\n    }\n\n    if (bond) {\n      Object.keys(bond).forEach((p) => {\n        pp[p] = bond[p]\n      })\n    }\n\n    pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE\n    pp.begin = begin\n    pp.end = end\n\n    const newBond = new Bond(pp)\n    if (typeof this.data.bid === 'number') {\n      struct.bonds.set(this.data.bid, newBond)\n    } else {\n      this.data.bid = struct.bonds.add(newBond)\n    }\n\n    const { bid } = this.data\n    const structBond = struct.bonds.get(bid)!\n\n    struct.bondInitHalfBonds(bid)\n    struct.atomAddNeighbor(structBond.hb1)\n    struct.atomAddNeighbor(structBond.hb2)\n\n    // notifyBondAdded\n    restruct.bonds.set(bid, new ReBond(structBond))\n    restruct.markBond(bid, 1)\n  }\n\n  invert() {\n    const inverted = new BondDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass BondDelete extends BaseOperation {\n  data: Data\n\n  constructor(bondId?: any) {\n    super(OperationType.BOND_DELETE, 3)\n    this.data = { bid: bondId, bond: null, begin: null, end: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { bid } = this.data\n\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    if (!this.data.bond) {\n      this.data.bond = struct.bonds.get(bid)\n      this.data.begin = this.data.bond.begin\n      this.data.end = this.data.bond.end\n    }\n\n    BaseOperation.invalidateBond(restruct, bid)\n\n    // notifyBondRemoved\n    const rebond = restruct.bonds.get(bid)\n    if (!rebond) return\n    ;[rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\n      if (hbid === undefined) return\n      const halfBond = restruct.molecule.halfBonds.get(hbid)\n      if (halfBond && halfBond.loop >= 0) {\n        restruct.loopRemove(halfBond.loop)\n      }\n    }, restruct)\n    restruct.clearVisel(rebond.visel)\n    restruct.bonds.delete(bid)\n    restruct.markItemRemoved()\n\n    const structBond = struct.bonds.get(bid)!\n    ;[structBond.hb1, structBond.hb2].forEach((hbid) => {\n      const halfBond = struct.halfBonds.get(hbid!)\n      if (!halfBond) {\n        return\n      }\n\n      const atom = struct.atoms.get(halfBond.begin)!\n      const pos = atom.neighbors.indexOf(hbid!)\n      const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length\n      const next = (pos + 1) % atom.neighbors.length\n      struct.setHbNext(atom.neighbors[prev], atom.neighbors[next])\n      atom.neighbors.splice(pos, 1)\n    })\n    struct.halfBonds.delete(structBond.hb1!)\n    struct.halfBonds.delete(structBond.hb2!)\n\n    struct.bonds.delete(bid)\n  }\n\n  invert() {\n    const inverted = new BondAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { BondAdd, BondDelete }\nexport * from './BondAttr'\nexport * from './BondMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Struct } from 'domain/entities'\n\nexport class CanvasLoad extends BaseOperation {\n  data: {\n    struct?: Struct\n  }\n\n  constructor(struct?: Struct) {\n    super(OperationType.CANVAS_LOAD)\n    this.data = { struct }\n  }\n\n  execute(restruct: ReStruct) {\n    const oldStruct = restruct.molecule\n    restruct.clearVisels() // TODO: What is it?\n    if (this.data.struct) {\n      restruct.render.setMolecule(this.data.struct)\n    }\n\n    this.data.struct = oldStruct\n  }\n\n  invert() {\n    const inverted = new CanvasLoad()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass AlignDescriptors extends BaseOperation {\n  history: any\n\n  constructor() {\n    super(OperationType.ALIGN_DESCRIPTORS)\n    this.history = {}\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values()).reverse()\n\n    const structBox: any = struct.getCoordBoundingBoxObj()\n    let alignPoint = new Vec2(structBox.max.x, structBox.min.y).add(\n      new Vec2(2.0, -1.0)\n    )\n\n    sgroups.forEach((sgroup) => {\n      this.history[sgroup.id] = new Vec2(sgroup.pp)\n      alignPoint = alignPoint.add(new Vec2(0.0, 0.5))\n      sgroup.pp = alignPoint\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new RestoreDescriptorsPosition(this.history)\n  }\n}\n\nclass RestoreDescriptorsPosition extends BaseOperation {\n  history: any\n\n  constructor(history: any) {\n    super(OperationType.RESTORE_DESCRIPTORS_POSITION)\n    this.history = history\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroups: any[] = Array.from(struct.sgroups.values())\n\n    sgroups.forEach((sgroup) => {\n      sgroup.pp = this.history[sgroup.id]\n      struct.sgroups.set(sgroup.id, sgroup)\n      BaseOperation.invalidateItem(restruct, 'sgroupData', sgroup.id, 1)\n    })\n  }\n\n  invert() {\n    return new AlignDescriptors()\n  }\n}\n\nexport { AlignDescriptors, RestoreDescriptorsPosition }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class EnhancedFlagMove extends BaseOperation {\n  data: {\n    frid: any\n    p: any\n  }\n\n  constructor(fragmentId?: any, p?: any) {\n    super(OperationType.ENHANCED_FLAG_MOVE)\n    this.data = { frid: fragmentId, p }\n  }\n\n  execute(restruct: ReStruct) {\n    const { frid } = this.data\n    const { p } = this.data\n    const fragment = restruct.molecule.frags.get(frid)\n    if (!fragment) return\n\n    const currentPosition = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, frid)!\n\n    const newPosition = Vec2.sum(currentPosition, p)\n    fragment.stereoFlagPosition = newPosition\n\n    this.data.p = p.negated()\n    BaseOperation.invalidateItem(restruct, 'enhancedFlags', frid, 1)\n  }\n\n  invert() {\n    const inverted = new EnhancedFlagMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass UpdateIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n  skipRgids: any[]\n\n  constructor(rgNew: any, rgOld: any, skipRgids: any = []) {\n    super(OperationType.UPDATE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = new Map()\n    this.skipRgids = skipRgids || []\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    struct.rgroups.forEach((rg, rgid) => {\n      if (rg.ifthen === this.rgid_old && !this.skipRgids.includes(rgid)) {\n        rg.ifthen = this.rgid_new\n        this.ifThenHistory.set(rgid, this.rgid_old)\n        struct.rgroups.set(rgid, rg)\n      }\n    })\n  }\n\n  invert() {\n    return new RestoreIfThen(this.rgid_new, this.rgid_old, this.ifThenHistory)\n  }\n}\n\nclass RestoreIfThen extends BaseOperation {\n  rgid_new: any\n  rgid_old: any\n  ifThenHistory: any\n\n  constructor(rgNew: any, rgOld: any, history: any) {\n    super(OperationType.RESTORE_IF_THEN)\n    this.rgid_new = rgNew\n    this.rgid_old = rgOld\n    this.ifThenHistory = history || new Map()\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    this.ifThenHistory.forEach((rg, rgid) => {\n      const rgValue = struct.rgroups.get(rgid)!\n      rgValue.ifthen = rg\n      struct.rgroups.set(rgid, rgValue)\n    })\n  }\n\n  invert() {\n    return new UpdateIfThen(this.rgid_old, this.rgid_new)\n  }\n}\n\nexport { UpdateIfThen, RestoreIfThen }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReEnhancedFlag, ReFrag, ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { Fragment } from 'domain/entities'\nimport { OperationType } from './OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\nclass FragmentAdd extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId?: any) {\n    super(OperationType.FRAGMENT_ADD)\n    this.frid = typeof fragmentId === 'undefined' ? null : fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const frag = new Fragment()\n\n    if (this.frid === null) {\n      this.frid = struct.frags.add(frag)\n    } else {\n      struct.frags.set(this.frid, frag)\n    }\n\n    restruct.frags.set(this.frid, new ReFrag(frag)) // TODO add restruct.notifyFragmentAdded\n    restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag())\n  }\n\n  invert() {\n    return new FragmentDelete(this.frid)\n  }\n}\n\nclass FragmentDelete extends BaseOperation {\n  frid: any\n\n  constructor(fragmentId: any) {\n    super(OperationType.FRAGMENT_DELETE, 100)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    if (!struct.frags.get(this.frid)) {\n      return\n    }\n\n    BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1)\n    restruct.frags.delete(this.frid)\n    struct.frags.delete(this.frid) // TODO add restruct.notifyFragmentRemoved\n\n    const enhancedFalg = restruct.enhancedFlags.get(this.frid)\n    if (!enhancedFalg) return\n    restruct.clearVisel(enhancedFalg.visel)\n    restruct.enhancedFlags.delete(this.frid)\n  }\n\n  invert() {\n    return new FragmentAdd(this.frid)\n  }\n}\n\nexport { FragmentAdd, FragmentDelete }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  frid: any\n  aid: any\n}\n\n// todo : merge add and delete stereo atom\nclass FragmentAddStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_ADD_STEREO_ATOM, 100)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, true)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    return new FragmentDeleteStereoAtom(this.data.frid, this.data.aid)\n  }\n}\n\nclass FragmentDeleteStereoAtom extends BaseOperation {\n  data: Data\n\n  constructor(fragmentId: any, atomId: any) {\n    super(OperationType.FRAGMENT_DELETE_STEREO_ATOM, 90)\n    this.data = { frid: fragmentId, aid: atomId }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, frid } = this.data\n\n    const frag = restruct.molecule.frags.get(frid)\n    if (frag) {\n      frag.updateStereoAtom(restruct.molecule, aid, frid, false)\n\n      BaseOperation.invalidateEnhancedFlag(restruct, frid)\n    }\n  }\n\n  invert() {\n    const { aid, frid } = this.data\n    return new FragmentAddStereoAtom(frid, aid)\n  }\n}\n\nexport { FragmentAddStereoAtom, FragmentDeleteStereoAtom }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class FragmentStereoFlag extends BaseOperation {\n  frid: number\n\n  constructor(fragmentId: number) {\n    super(OperationType.FRAGMENT_STEREO_FLAG, 6)\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const fragment = struct.frags.get(this.frid)!\n    fragment.updateStereoFlag(struct)\n\n    BaseOperation.invalidateEnhancedFlag(restruct, this.frid)\n  }\n\n  invert() {\n    const inverted = new FragmentStereoFlag(this.frid)\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\n\nexport class CalcImplicitH extends BaseOperation {\n  atomIds: Array<number>\n\n  constructor(aids: Array<number>) {\n    super(OperationType.CALC_IMPLICIT_H, 10)\n    this.atomIds = aids\n  }\n\n  execute(restruct: ReStruct) {\n    const aIds = this.atomIds\n\n    restruct.molecule.setImplicitHydrogen(aIds)\n  }\n\n  invert() {\n    return new CalcImplicitH(this.atomIds)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\nimport { ReStruct } from '../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class LoopMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.LOOP_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    // not sure if there should be an action to move a loop in the first place\n    // but we have to somehow move the aromatic ring,\n    // which is associated with the loop, rather than with any of the bonds\n    const { id, d } = this.data\n    const reloop = restruct.reloops.get(id)\n\n    if (reloop && reloop.visel) {\n      const scaled = Scale.obj2scaled(d, restruct.render.options)\n      reloop.visel.translate(scaled)\n    }\n    this.data.d = d.negated()\n  }\n\n  invert() {\n    const inverted = new LoopMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ntype Data = {\n  rgid: any\n  attribute: any\n  value: any\n}\n\nexport class RGroupAttr extends BaseOperation {\n  data: Data | null\n  data2: Data | null\n\n  constructor(rgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.R_GROUP_ATTR)\n    this.data = { rgid: rgroupId, attribute, value }\n    this.data2 = null\n  }\n\n  execute(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n\n      const rgp = restruct.molecule.rgroups.get(rgid)!\n\n      if (!rgp) {\n        return\n      }\n\n      if (!this.data2) {\n        this.data2 = {\n          rgid,\n          attribute,\n          value: rgp[attribute]\n        }\n      }\n\n      rgp[attribute] = value\n\n      BaseOperation.invalidateItem(restruct, 'rgroups', rgid)\n    }\n  }\n\n  invert() {\n    const inverted = new RGroupAttr()\n    inverted.data = this.data2\n    inverted.data2 = this.data\n    return inverted\n  }\n\n  isDummy(restruct: ReStruct) {\n    if (this.data) {\n      const { rgid, attribute, value } = this.data\n      const rgroup = restruct.molecule.rgroups.get(rgid)!\n      return rgroup[attribute] === value\n    }\n    return false\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { RGroup } from 'domain/entities'\n\nexport class RGroupFragment extends BaseOperation {\n  rgid_new: any\n  rg_new: any\n  rgid_old: any\n  rg_old: any\n  frid: any\n\n  constructor(rgroupId: any, fragmentId: any, rg?: any) {\n    super(OperationType.R_GROUP_FRAGMENT)\n    this.rgid_new = rgroupId\n    this.rg_new = rg\n    this.rgid_old = null\n    this.rg_old = null\n    this.frid = fragmentId\n  }\n\n  execute(restruct: ReStruct) {\n    // eslint-disable-line max-statements\n    const struct = restruct.molecule\n    this.rgid_old =\n      this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid)\n\n    this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null\n\n    this.removeOld(struct, restruct)\n    this.setNew(struct, restruct)\n  }\n\n  private removeOld(struct: any, restruct: any) {\n    if (!this.rg_old) {\n      return\n    }\n\n    this.rg_old.frags.delete(this.frid)\n    restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel)\n\n    if (this.rg_old.frags.size === 0) {\n      restruct.rgroups.delete(this.rgid_old)\n      struct.rgroups.delete(this.rgid_old)\n      restruct.markItemRemoved()\n    } else {\n      restruct.markItem('rgroups', this.rgid_old, 1)\n    }\n  }\n\n  private setNew(struct: any, restruct: ReStruct) {\n    if (!this.rgid_new) {\n      return\n    }\n\n    let rgNew = struct.rgroups.get(this.rgid_new)\n    if (!rgNew) {\n      rgNew = this.rg_new || new RGroup()\n      struct.rgroups.set(this.rgid_new, rgNew)\n      restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew))\n    } else {\n      restruct.markItem('rgroups', this.rgid_new, 1)\n    }\n\n    rgNew.frags.add(this.frid)\n  }\n\n  invert() {\n    return new RGroupFragment(this.rgid_old, this.frid, this.rg_old)\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\n\ninterface RxnArrowMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class RxnArrowMove extends Base {\n  data: RxnArrowMoveData\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_ARROW_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.rxnArrows.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert() {\n    const move = new RxnArrowMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    move.data = this.data\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { Scale } from 'domain/helpers'\nimport { RxnArrow, Vec2 } from 'domain/entities'\nimport { tfx } from 'utilities'\ninterface RxnArrowResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n}\nexport class RxnArrowResize extends Base {\n  data: RxnArrowResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean\n  ) {\n    super(OperationType.RXN_ARROW_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.rxnArrows.get(id)\n    const anchor = this.data.anchor\n    if (anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n      let middlePoint\n      let reItem\n\n      if (RxnArrow.isElliptical(item)) {\n        reItem = restruct.rxnArrows.get(id)\n        ;[, , middlePoint] = reItem.getReferencePoints()\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n      if (\n        tfx(anchor.x) === tfx(middlePoint?.x) &&\n        tfx(anchor.y) === tfx(middlePoint?.y)\n      ) {\n        const { angle } = reItem.getArrowParams(\n          item.pos[0].x,\n          item.pos[0].y,\n          item.pos[1].x,\n          item.pos[1].y\n        )\n        const angleInRadians = (angle * Math.PI) / 180\n        const cosAngle = Math.cos(angleInRadians)\n        const sinAngle = Math.sin(angleInRadians)\n\n        const diffX = current.x - anchor.x\n        const diffY = current.y - anchor.y\n\n        const diff = diffY * cosAngle - diffX * sinAngle\n        item.height -= diff\n\n        const [, , newMiddlePoint] = reItem.getReferencePoints()\n\n        anchor.y = newMiddlePoint.y\n        anchor.x = newMiddlePoint.x\n      }\n    } else {\n      item.pos[1].add_(d)\n    }\n\n    restruct.rxnArrows\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'rxnArrows', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new RxnArrowResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\nimport { ReStruct } from '../../../../render'\nimport { Scale } from 'domain/helpers'\n\nexport class RxnPlusMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n    noinvalidate: any\n  }\n\n  constructor(id?: any, d?: any, noinvalidate?: any) {\n    super(OperationType.RXN_PLUS_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, d, noinvalidate } = this.data\n\n    const struct = restruct.molecule\n    struct.rxnPluses.get(id)!.pp.add_(d) // eslint-disable-line no-underscore-dangle\n\n    const rxn = restruct.rxnPluses.get(id)!\n    const scaled = Scale.obj2scaled(d, restruct.render.options)\n    rxn.visel.translate(scaled)\n\n    this.data.d = d.negated()\n\n    if (!noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'rxnPluses', id, 1)\n    }\n  }\n\n  invert() {\n    const inverted = new RxnPlusMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReRxnPlus, ReStruct } from '../../../../render'\nimport { RxnPlus, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../../base'\nimport { OperationType } from '../../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  plid: any\n  pos: any\n}\n\nclass RxnPlusAdd extends BaseOperation {\n  data: Data\n\n  constructor(pos?: any) {\n    super(OperationType.RXN_PLUS_ADD)\n    this.data = { plid: null, pos }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n\n    const newRxn = new RxnPlus()\n    if (typeof this.data.plid === 'number') {\n      struct.rxnPluses.set(this.data.plid, newRxn)\n    } else {\n      this.data.plid = struct.rxnPluses.add(newRxn)\n    }\n\n    const { pos, plid } = this.data\n\n    const structRxn = struct.rxnPluses.get(plid)\n    // notifyRxnPlusAdded\n    restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn))\n\n    struct.rxnPlusSetPos(plid, new Vec2(pos))\n\n    BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1)\n  }\n\n  invert() {\n    const inverted = new RxnPlusDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass RxnPlusDelete extends BaseOperation {\n  data: Data\n\n  constructor(plid?: any) {\n    super(OperationType.RXN_PLUS_DELETE)\n    this.data = { plid, pos: null }\n  }\n\n  execute(restruct: ReStruct) {\n    const { plid } = this.data\n\n    const struct = restruct.molecule\n    if (!this.data.pos) {\n      this.data.pos = struct.rxnPluses.get(plid)!.pp\n    }\n\n    // notifyRxnPlusRemoved\n    restruct.markItemRemoved()\n    const rxn = restruct.rxnPluses.get(plid)\n    if (!rxn) return\n    restruct.clearVisel(rxn.visel)\n    restruct.rxnPluses.delete(plid)\n\n    struct.rxnPluses.delete(plid)\n  }\n\n  invert() {\n    const inverted = new RxnPlusAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { RxnPlusAdd, RxnPlusDelete }\nexport * from './RxnPlusMove'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RxnArrow, RxnArrowMode, Vec2 } from 'domain/entities'\n\nimport Base from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReRxnArrow } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype RxnArrowAddData = {\n  id?: number\n  pos: Array<Vec2>\n  mode: RxnArrowMode\n}\n\nclass RxnArrowAdd extends Base {\n  data: RxnArrowAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: RxnArrowMode = RxnArrowMode.OpenAngle,\n    id?: number\n  ) {\n    super(OperationType.RXN_ARROW_ADD)\n    this.data = { pos, mode, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new RxnArrow({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.rxnArrows.add(item)\n      this.data.id = index\n    } else {\n      struct.rxnArrows.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.rxnArrows.set(itemId, new ReRxnArrow(item))\n\n    const positions = [...this.data.pos]\n\n    struct.rxnArrowSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'rxnArrows', itemId, 1)\n  }\n\n  invert(): Base {\n    return new RxnArrowDelete(this.data.id!)\n  }\n}\n\ninterface RxnArrowDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: RxnArrowMode\n}\n\nclass RxnArrowDelete extends Base {\n  data: RxnArrowDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.RXN_ARROW_DELETE)\n    this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.rxnArrows.get(this.data.id) as any\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel)\n    restruct.rxnArrows.delete(this.data.id)\n\n    struct.rxnArrows.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id)\n  }\n}\n\nexport { RxnArrowAdd, RxnArrowDelete }\nexport * from './RxnArrowMove'\nexport * from './RxnArrowResize'\nexport * from './plus'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { SimpleObject, SimpleObjectMode, Vec2 } from 'domain/entities'\n\nimport Base from './base'\nimport { OperationType } from './OperationType'\nimport { ReSimpleObject } from '../../render'\nimport { Scale } from 'domain/helpers'\nimport { tfx } from 'utilities'\n\ninterface SimpleObjectAddData {\n  id?: number\n  pos: Array<Vec2>\n  mode: SimpleObjectMode\n  toCircle: boolean\n}\nexport class SimpleObjectAdd extends Base {\n  data: SimpleObjectAddData\n\n  constructor(\n    pos: Array<Vec2> = [],\n    mode: SimpleObjectMode = SimpleObjectMode.line,\n    toCircle = false,\n    id?: number\n  ) {\n    super(OperationType.SIMPLE_OBJECT_ADD)\n    this.data = { pos, mode, toCircle, id }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = new SimpleObject({ mode: this.data.mode })\n\n    if (this.data.id == null) {\n      const index = struct.simpleObjects.add(item)\n      this.data.id = index\n    } else {\n      struct.simpleObjects.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.simpleObjects.set(itemId, new ReSimpleObject(item))\n\n    const positions = [...this.data.pos]\n    if (this.data.toCircle) {\n      positions[1] = makeCircleFromEllipse(positions[0], positions[1])\n    }\n    struct.simpleObjectSetPos(\n      itemId,\n      positions.map((p) => new Vec2(p))\n    )\n\n    Base.invalidateItem(restruct, 'simpleObjects', itemId, 1)\n  }\n\n  invert(): Base {\n    return new SimpleObjectDelete(this.data.id!)\n  }\n}\n\ninterface SimpleObjectDeleteData {\n  id: number\n  pos?: Array<Vec2>\n  mode?: SimpleObjectMode\n  toCircle?: boolean\n}\n\nexport class SimpleObjectDelete extends Base {\n  data: SimpleObjectDeleteData\n  performed: boolean\n\n  constructor(id: number) {\n    super(OperationType.SIMPLE_OBJECT_DELETE)\n    this.data = { id, pos: [], mode: SimpleObjectMode.line, toCircle: false }\n    this.performed = false\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const item = struct.simpleObjects.get(this.data.id) as any\n    // save to data current values. In future they could be used in invert for restoring simple object\n    this.data.pos = item.pos\n    this.data.mode = item.mode\n    this.data.toCircle = item.toCircle\n    this.performed = true\n\n    restruct.markItemRemoved()\n    restruct.clearVisel(restruct.simpleObjects.get(this.data.id).visel)\n    restruct.simpleObjects.delete(this.data.id)\n\n    struct.simpleObjects.delete(this.data.id)\n  }\n\n  invert(): Base {\n    return new SimpleObjectAdd(\n      this.data.pos,\n      this.data.mode,\n      this.data.toCircle,\n      this.data.id\n    )\n  }\n}\n\ninterface SimpleObjectMoveData {\n  id: number\n  d: any\n  noinvalidate: boolean\n}\n\nexport class SimpleObjectMove extends Base {\n  data: SimpleObjectMoveData\n\n  constructor(id: number, d: any, noinvalidate: boolean) {\n    super(OperationType.SIMPLE_OBJECT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const item = struct.simpleObjects.get(id)\n    item.pos.forEach((p) => p.add_(d))\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    const move = new SimpleObjectMove(\n      this.data.id,\n      this.data.d,\n      this.data.noinvalidate\n    )\n    // todo Need further investigation on why this is needed?\n    move.data = this.data\n    return move\n  }\n}\n\ninterface SimpleObjectResizeData {\n  id: number\n  d: any\n  current: Vec2\n  anchor: Vec2\n  noinvalidate: boolean\n  toCircle: boolean\n}\n\nfunction handleRectangleChangeWithAnchor(item, anchor, current) {\n  const previousPos0 = item.pos[0].get_xy0()\n  const previousPos1 = item.pos[1].get_xy0()\n\n  if (tfx(anchor.x) === tfx(item.pos[1].x)) {\n    item.pos[1].x = anchor.x = current.x\n    current.x = previousPos1.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[1].y)) {\n    item.pos[1].y = anchor.y = current.y\n    current.y = previousPos1.y\n  }\n  if (tfx(anchor.x) === tfx(item.pos[0].x)) {\n    item.pos[0].x = anchor.x = current.x\n    current.x = previousPos0.x\n  }\n  if (tfx(anchor.y) === tfx(item.pos[0].y)) {\n    item.pos[0].y = anchor.y = current.y\n    current.y = previousPos0.y\n  }\n}\n\nexport class SimpleObjectResize extends Base {\n  data: SimpleObjectResizeData\n\n  constructor(\n    id: number,\n    d: any,\n    current: Vec2,\n    anchor: any,\n    noinvalidate: boolean,\n    toCircle: boolean\n  ) {\n    super(OperationType.SIMPLE_OBJECT_RESIZE)\n    this.data = { id, d, current, anchor, noinvalidate, toCircle }\n  }\n\n  execute(restruct: any): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const d = this.data.d\n    const current = this.data.current\n    const item = struct.simpleObjects.get(id)\n    const anchor = this.data.anchor\n    if (item.mode === SimpleObjectMode.ellipse) {\n      if (anchor) {\n        handleRectangleChangeWithAnchor(item, anchor, current)\n      } else if (this.data.toCircle) {\n        const previousPos1 = item.pos[1].get_xy0()\n        const circlePoint = makeCircleFromEllipse(item.pos[0], current)\n        item.pos[1].x = circlePoint.x\n        item.pos[1].y = circlePoint.y\n        this.data.current = previousPos1\n      } else {\n        const previousPos1 = item.pos[1].get_xy0()\n        item.pos[1].x = current.x\n        item.pos[1].y = current.y\n        this.data.current = previousPos1\n      }\n    } else if (item.mode === SimpleObjectMode.line && anchor) {\n      const previousPos0 = item.pos[0].get_xy0()\n      const previousPos1 = item.pos[1].get_xy0()\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[1].x) &&\n        tfx(anchor.y) === tfx(item.pos[1].y)\n      ) {\n        item.pos[1].x = anchor.x = current.x\n        current.x = previousPos1.x\n        item.pos[1].y = anchor.y = current.y\n        current.y = previousPos1.y\n      }\n\n      if (\n        tfx(anchor.x) === tfx(item.pos[0].x) &&\n        tfx(anchor.y) === tfx(item.pos[0].y)\n      ) {\n        item.pos[0].x = anchor.x = current.x\n        current.x = previousPos0.x\n        item.pos[0].y = anchor.y = current.y\n        current.y = previousPos0.y\n      }\n    } else if (item.mode === SimpleObjectMode.rectangle && anchor) {\n      handleRectangleChangeWithAnchor(item, anchor, current)\n    } else item.pos[1].add_(d)\n\n    restruct.simpleObjects\n      .get(id)\n      .visel.translate(Scale.obj2scaled(d, restruct.render.options))\n    this.data.d = d.negated()\n    if (!this.data.noinvalidate) {\n      Base.invalidateItem(restruct, 'simpleObjects', id, 1)\n    }\n  }\n\n  invert(): Base {\n    return new SimpleObjectResize(\n      this.data.id,\n      this.data.d,\n      this.data.current,\n      this.data.anchor,\n      this.data.noinvalidate,\n      this.data.toCircle\n    )\n  }\n}\n\nexport function makeCircleFromEllipse(position0: Vec2, position1: Vec2): Vec2 {\n  const diff = Vec2.diff(position1, position0)\n  const min = Math.abs(diff.x) < Math.abs(diff.y) ? diff.x : diff.y\n  return new Vec2(\n    position0.x + (diff.x > 0 ? 1 : -1) * Math.abs(min),\n    position0.y + (diff.y > 0 ? 1 : -1) * Math.abs(min),\n    0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { SGroup } from 'domain/entities'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  aid: any\n}\n\nclass SGroupAtomAdd extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_ADD, 3)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    if (sgroup.atoms.indexOf(aid) >= 0) {\n      throw new Error(\n        'The same atom cannot be added to an S-group more than once'\n      )\n    }\n\n    if (!atom) {\n      throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found')\n    }\n\n    struct.atomAddToSGroup(sgid, aid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomRemove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupAtomRemove extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, aid?: any) {\n    super(OperationType.S_GROUP_ATOM_REMOVE, 4)\n    this.data = { sgid: sgroupId, aid }\n  }\n\n  execute(restruct: ReStruct) {\n    const { aid, sgid } = this.data\n\n    const struct = restruct.molecule\n    const atom = struct.atoms.get(aid)!\n    const sgroup = struct.sgroups.get(sgid)!\n\n    SGroup.removeAtom(sgroup, aid)\n    atom.sgs.delete(sgid)\n    BaseOperation.invalidateAtom(restruct, aid)\n  }\n\n  invert() {\n    const inverted = new SGroupAtomAdd()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAtomAdd, SGroupAtomRemove }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupAttr extends BaseOperation {\n  data: {\n    sgid: any\n    attr: any\n    value: any\n  }\n\n  constructor(sgroupId?: any, attribute?: any, value?: any) {\n    super(OperationType.S_GROUP_ATTR, 4)\n    this.data = {\n      sgid: sgroupId,\n      attr: attribute,\n      value\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroupId = this.data.sgid\n    const sgroup = struct.sgroups.get(sgroupId)!\n\n    const sgroupData = restruct.sgroupData.get(sgroupId)\n    if (sgroup.type === 'DAT' && sgroupData) {\n      // clean the stuff here, else it might be left behind if the sgroups is set to \"attached\"\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgroupId)\n    }\n\n    this.data.value = sgroup.setAttr(this.data.attr, this.data.value)\n  }\n\n  invert() {\n    const inverted = new SGroupAttr()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\nexport class SGroupDataMove extends BaseOperation {\n  data: {\n    id: any\n    d: any\n  }\n\n  constructor(id?: any, d?: any) {\n    super(OperationType.S_GROUP_DATA_MOVE)\n    this.data = { id, d }\n  }\n\n  execute(restruct: ReStruct) {\n    const { d, id } = this.data\n    const { sgroups } = restruct.molecule\n\n    sgroups.get(id)!.pp?.add_(d) // eslint-disable-line no-underscore-dangle\n    this.data.d = d.negated()\n\n    // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\n    BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1)\n  }\n\n  invert() {\n    const inverted = new SGroupDataMove()\n    inverted.data = this.data\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  parent?: any\n  children?: any\n}\n\nclass SGroupAddToHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any, parent?: any, children?: any) {\n    super(OperationType.S_GROUP_ADD_TO_HIERACHY, 100)\n    this.data = { sgid: sgroupId, parent, children }\n  }\n\n  execute(restruct: ReStruct) {\n    const { sgid, parent, children } = this.data\n\n    const struct = restruct.molecule\n    const sgroup = struct.sgroups.get(sgid)!\n    const relations = struct.sGroupForest.insert(sgroup, parent, children)\n\n    this.data.parent = relations.parent\n    this.data.children = relations.children\n  }\n\n  invert() {\n    const inverted = new SGroupRemoveFromHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupRemoveFromHierarchy extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_REMOVE_FROM_HIERACHY, 110)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: any) {\n    const { sgid } = this.data\n    const struct = restruct.molecule\n\n    this.data.parent = struct.sGroupForest.parent.get(sgid)\n    this.data.children = struct.sGroupForest.children.get(sgid)\n    struct.sGroupForest.remove(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupAddToHierarchy()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupAddToHierarchy, SGroupRemoveFromHierarchy }\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { FunctionalGroup, SGroup, Vec2 } from 'domain/entities'\nimport { ReSGroup, ReStruct } from '../../../render'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\n// todo: separate classes: now here is circular dependency in `invert` method\n\ntype Data = {\n  sgid: any\n  type?: any\n  pp?: any\n  expanded?: boolean\n  name?: string\n}\n\nclass SGroupCreate extends BaseOperation {\n  data: Data\n\n  constructor(\n    sgroupId?: any,\n    type?: any,\n    pp?: any,\n    expanded?: boolean,\n    name?: string\n  ) {\n    super(OperationType.S_GROUP_CREATE)\n    this.data = {\n      sgid: sgroupId,\n      type,\n      pp,\n      expanded,\n      name\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const sgroup = new SGroup(this.data.type)\n    const { sgid, pp, expanded, name } = this.data\n\n    sgroup.id = sgid\n    struct.sgroups.set(sgid, sgroup)\n\n    if (pp) {\n      struct.sgroups.get(sgid)!.pp = new Vec2(pp)\n    }\n\n    if (expanded) {\n      sgroup.data.expanded = expanded\n    }\n\n    if (name) {\n      sgroup.data.name = name\n    }\n\n    restruct.sgroups.set(sgid, new ReSGroup(struct.sgroups.get(sgid)))\n    if (FunctionalGroup.isFunctionalGroup(sgroup)) {\n      restruct.molecule.functionalGroups.add(new FunctionalGroup(sgroup))\n    }\n    this.data.sgid = sgid\n  }\n\n  invert() {\n    const inverted = new SGroupDelete()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nclass SGroupDelete extends BaseOperation {\n  data: Data\n\n  constructor(sgroupId?: any) {\n    super(OperationType.S_GROUP_DELETE, 95)\n    this.data = { sgid: sgroupId }\n  }\n\n  execute(restruct: ReStruct) {\n    const struct = restruct.molecule\n    const { sgid } = this.data\n    const sgroup = restruct.sgroups.get(sgid)\n    const sgroupData = restruct.sgroupData.get(sgid)\n    if (!sgroup) return\n    this.data.type = sgroup.item.type\n    this.data.pp = sgroup.item.pp\n\n    if (sgroup.item.type === 'DAT' && sgroupData) {\n      restruct.clearVisel(sgroupData.visel)\n      restruct.sgroupData.delete(sgid)\n    }\n\n    restruct.clearVisel(sgroup.visel)\n    if (sgroup.item.atoms.length !== 0) {\n      throw new Error('S-Group not empty!')\n    }\n\n    if (FunctionalGroup.isFunctionalGroup(sgroup.item)) {\n      let relatedFGroupId\n      this.data.name = sgroup.item.data.name\n      this.data.expanded = sgroup.item.expanded\n      restruct.molecule.functionalGroups.forEach((fg, fgid) => {\n        if (fg.relatedSGroupId === sgid) {\n          relatedFGroupId = fgid\n        }\n      })\n      restruct.molecule.functionalGroups.delete(relatedFGroupId)\n    }\n\n    restruct.sgroups.delete(sgid)\n    struct.sgroups.delete(sgid)\n  }\n\n  invert() {\n    const inverted = new SGroupCreate()\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport { SGroupCreate, SGroupDelete }\nexport * from './sgroupAtom'\nexport * from './SGroupAttr'\nexport * from './SGroupDataMove'\nexport * from './sgroupHierarchy'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct, ReText } from '../../../render'\nimport { Text, Vec2 } from 'domain/entities'\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\n\ninterface TextCreateData {\n  id?: number\n  content: string\n  pos: Array<Vec2>\n  position: Vec2\n}\n\nexport class TextCreate extends BaseOperation {\n  data: TextCreateData\n\n  constructor(content: string, position: Vec2, pos: Array<Vec2>, id?: number) {\n    super(OperationType.TEXT_CREATE)\n    this.data = { content: content, position, pos, id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const item = new Text(this.data)\n\n    if (this.data.id == null) {\n      const index = restruct.molecule.texts.add(item)\n      this.data.id = index\n    } else {\n      restruct.molecule.texts.set(this.data.id!, item)\n    }\n\n    const itemId = this.data.id!\n\n    restruct.texts.set(itemId, new ReText(item))\n\n    restruct.molecule.textSetPosition(itemId, new Vec2(this.data.position))\n    BaseOperation.invalidateItem(restruct, 'texts', itemId, 1)\n  }\n\n  invert(): BaseOperation {\n    return new TextDelete(this.data.id!)\n  }\n}\n\ninterface TextDeleteData {\n  id: number\n  content?: string\n  position?: Vec2\n  pos?: Array<Vec2> | []\n}\n\nexport class TextDelete extends BaseOperation {\n  data: TextDeleteData\n\n  constructor(id: number) {\n    super(OperationType.TEXT_DELETE)\n    this.data = { id }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const item = struct.texts.get(this.data.id)!\n    if (!item) return\n\n    this.data.content = item.content!\n    this.data.position = item.position\n\n    restruct.markItemRemoved()\n\n    restruct.clearVisel(restruct.texts.get(this.data.id)!.visel)\n    restruct.texts.delete(this.data.id)\n\n    struct.texts.delete(this.data.id)\n  }\n\n  invert(): BaseOperation {\n    return new TextCreate(\n      this.data.content!,\n      this.data.position!,\n      this.data.pos!,\n      this.data.id\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\n\ninterface TextUpdateData {\n  id: number\n  content: string\n  previousContent?: string\n}\n\nexport class TextUpdate extends BaseOperation {\n  data: TextUpdateData\n\n  constructor(id: number, content: string) {\n    super(OperationType.TEXT_UPDATE)\n    this.data = { id, content: content }\n  }\n\n  execute(restruct: ReStruct) {\n    const { id, content } = this.data\n    const text = restruct.molecule.texts.get(id)\n\n    if (text) {\n      this.data.previousContent = text.content!\n      text.content = content\n    }\n\n    BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n  }\n\n  invert() {\n    const inverted = new TextUpdate(this.data.id, this.data.previousContent!)\n\n    inverted.data.previousContent = this.data.content\n    return inverted\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../base'\nimport { OperationType } from '../OperationType'\nimport { ReStruct } from '../../../render'\nimport { Scale } from 'domain/helpers'\n\ninterface TextMoveData {\n  id: any\n  d: any\n  noinvalidate: boolean\n}\n\nexport class TextMove extends BaseOperation {\n  data: TextMoveData\n\n  constructor(id: any, d: any, noinvalidate: boolean) {\n    super(OperationType.TEXT_MOVE)\n    this.data = { id, d, noinvalidate }\n  }\n\n  execute(restruct: ReStruct): void {\n    const struct = restruct.molecule\n    const id = this.data.id\n    const difference = this.data.d\n    const item = struct.texts.get(id)\n\n    item?.position?.add_(difference)\n    restruct.texts\n      .get(id)\n      ?.visel.translate(Scale.obj2scaled(difference, restruct.render.options))\n\n    this.data.d = difference.negated()\n\n    if (!this.data.noinvalidate) {\n      BaseOperation.invalidateItem(restruct, 'texts', id, 1)\n    }\n  }\n\n  invert(): BaseOperation {\n    const move = new TextMove(this.data.id, this.data.d, this.data.noinvalidate)\n\n    move.data = this.data\n\n    return move\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { BaseOperation } from '../operations/base'\nimport { ReStruct } from '../../render'\n//\n// Undo/redo actions\n//\nexport class Action {\n  operations: BaseOperation[]\n\n  constructor(operations = []) {\n    this.operations = operations\n  }\n\n  addOp(operation: BaseOperation, restruct?: ReStruct): BaseOperation {\n    if (!restruct || !operation.isDummy(restruct)) {\n      this.operations.push(operation)\n    }\n\n    return operation\n  }\n\n  mergeWith(action) {\n    this.operations = this.operations.concat(action.operations)\n    return this\n  }\n\n  // Perform action and return inverted one\n  perform(restruct: ReStruct) {\n    const action = new Action()\n    const sortedOperations = [...this.operations].sort(\n      (a, b) => a.priority - b.priority\n    )\n    sortedOperations.forEach((operation) => {\n      const invertedOperation = operation.perform(restruct)\n      action.addOp(invertedOperation)\n    })\n\n    return action\n  }\n\n  isDummy(restruct?: ReStruct) {\n    return (\n      this.operations.find(\n        // TODO [RB] the condition is always true for op.* operations\n        (operation) => (restruct ? !operation.isDummy(restruct) : true)\n      ) === undefined\n    )\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { Bond } from 'domain/entities'\nimport { BondAttr } from '../operations'\nimport { MolSerializer } from 'domain/serializers'\n\n/**\n * @param restruct { ReStruct }\n * @param events { Array<PipelineSubscription> }\n * @param bid { number }\n * @param template {{\n * \t\tmolecule: Struct,\n * \t\tbid: number\n *  }}\n * @param simpleFusing { Function }\n * @returns { Promise }\n */\nexport function fromAromaticTemplateOnBond(\n  restruct,\n  template,\n  bid,\n  events,\n  simpleFusing\n) {\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const frid = struct.getBondFragment(bid)\n  const beforeMerge = getFragmentWithBondMap(struct, frid)\n  let afterMerge: any = null\n  let pasteItems: any = null\n\n  let action = new Action()\n\n  if (true) {\n    action = simpleFusing(restruct, template, bid)\n    return Promise.resolve(action)\n  }\n\n  const molSerialzer = new MolSerializer()\n\n  return Promise.all([\n    events.aromatizeStruct\n      .dispatch(beforeMerge.frag)\n      .then((res) => molSerialzer.deserialize(res.struct)),\n    events.aromatizeStruct\n      .dispatch(tmpl)\n      .then((res) => molSerialzer.deserialize(res.struct))\n  ])\n    .then(([astruct, atmpl]) => {\n      // aromatize restruct fragment\n      const aromatizeAction = fromAromatize(\n        restruct,\n        astruct,\n        beforeMerge.bondMap\n      )\n      // merge template with fragment\n      const aromTemplate = { bid: template.bid, molecule: atmpl }\n      const templateFusingAction = simpleFusing(restruct, aromTemplate, bid)\n      pasteItems = templateFusingAction[1]\n\n      action = templateFusingAction[0].mergeWith(aromatizeAction)\n\n      afterMerge = getFragmentWithBondMap(restruct.molecule, frid)\n\n      return events.dearomatizeStruct\n        .dispatch(afterMerge.frag)\n        .then((res) => molSerialzer.deserialize(res.struct))\n    })\n    .then((destruct) => {\n      destruct.bonds.forEach((bond) => {\n        if (bond.type === Bond.PATTERN.TYPE.AROMATIC) {\n          throw Error('Bad dearomatize')\n        }\n      })\n\n      // dearomatize restruct fragment\n      const dearomatizeAction = fromDearomatize(\n        restruct,\n        destruct,\n        afterMerge.bondMap\n      )\n      action = dearomatizeAction.mergeWith(action)\n\n      return [action, pasteItems]\n    })\n    .catch((err) => {\n      console.info(err.message)\n      action.perform(restruct) // revert actions if error\n\n      return simpleFusing(restruct, template, bid)\n    })\n}\n\nfunction fromAromatize(restruct, astruct, bondMap) {\n  const action = new Action()\n\n  astruct.bonds.forEach((bond, bid) => {\n    if (bond.type !== Bond.PATTERN.TYPE.AROMATIC) return\n    action.addOp(\n      new BondAttr(\n        bondMap.get(bid),\n        'type',\n        Bond.PATTERN.TYPE.AROMATIC\n      ).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param dastruct { ReStruct }\n * @param bondMap { Map<number, number> }\n * @returns { Action }\n */\nfunction fromDearomatize(restruct, dastruct, bondMap) {\n  const action = new Action()\n\n  dastruct.bonds.forEach((bond, bid) => {\n    action.addOp(\n      new BondAttr(bondMap.get(bid), 'type', bond.type).perform(restruct)\n    )\n  })\n\n  return action\n}\n\n/* UTILS */\n\n// function canBeAromatized(struct) {\n//   // TODO correct this checking && move to chem.Struct ??\n//   if (struct.loops.size === 0) struct.prepareLoopStructure()\n//\n//   const hasAromLoop = struct.loops.find((_id, loop) => loop.aromatic)\n//   if (struct.loops.size === 0 || hasAromLoop) return false\n//\n//   const correctDblBonds = struct.loops.find(\n//     (_id, loop) => loop.dblBonds === loop.hbs.length / 2\n//   )\n//\n//   return correctDblBonds !== undefined\n// }\n\n/**\n * @param struct { Struct }\n * @param frid { number }\n * @returns {{\n * \t\tfrag: Struct,\n * \t\tbondMap: Map<number, number>\n *  }}\n */\nfunction getFragmentWithBondMap(struct, frid) {\n  const atomSet = struct.getFragmentIds(frid)\n  const atomsInStruct = Array.from(atomSet)\n\n  const frag = struct.clone(atomSet)\n  const bondMap = new Map()\n  frag.bonds.forEach((bond, bid) => {\n    bondMap.set(\n      bid,\n      struct.findBondId(atomsInStruct[bond.begin], atomsInStruct[bond.end])\n    )\n  })\n\n  return { frag, bondMap }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Fragment, Vec2 } from 'domain/entities'\n\nconst SELECTION_DISTANCE_COEFFICIENT = 0.4\nconst SELECTION_WITHIN_TEXT = 0\n\nconst findMaps = {\n  atoms: findClosestAtom,\n  bonds: findClosestBond,\n  enhancedFlags: findClosestEnhancedFlag,\n  sgroupData: findClosestDataSGroupData,\n  sgroups: findClosestSGroup,\n  rxnArrows: findClosestRxnArrow,\n  rxnPluses: findClosestRxnPlus,\n  frags: findClosestFrag,\n  rgroups: findClosestRGroup,\n  simpleObjects: findClosestSimpleObject,\n  texts: findClosestText\n}\n\nfunction findClosestText(restruct, cursorPosition) {\n  let minDist = null\n  let ret = null\n\n  restruct.texts.forEach((text, id) => {\n    const referencePoints = text.getReferencePoints(restruct)\n    const topX = referencePoints[0].x\n    const topY = referencePoints[0].y\n    const bottomX = referencePoints[2].x\n    const bottomY = referencePoints[2].y\n\n    const distances = []\n\n    if (cursorPosition.x >= topX && cursorPosition.x <= bottomX) {\n      if (cursorPosition.y < topY) {\n        distances.push(topY - cursorPosition.y)\n      } else if (cursorPosition.y > bottomY) {\n        distances.push(cursorPosition.y - bottomY)\n      } else {\n        distances.push(cursorPosition.y - topY, bottomY - cursorPosition.y)\n      }\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(topX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x < topX && cursorPosition.y > bottomY) {\n      distances.push(Vec2.dist(new Vec2(topX, bottomY), cursorPosition))\n    }\n\n    if (cursorPosition.x > bottomX && cursorPosition.y < topY) {\n      distances.push(Vec2.dist(new Vec2(bottomX, topY), cursorPosition))\n    }\n\n    if (cursorPosition.y >= topY && cursorPosition.y <= bottomY) {\n      if (cursorPosition.x < topX) {\n        distances.push(topX - cursorPosition.x)\n      } else if (cursorPosition.x > bottomX) {\n        distances.push(cursorPosition.x - bottomX)\n      } else {\n        distances.push(SELECTION_WITHIN_TEXT)\n      }\n    }\n\n    const dist = Math.min(...distances)\n\n    if (dist < SELECTION_DISTANCE_COEFFICIENT && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestSimpleObject(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.simpleObjects.forEach((simpleObject, id) => {\n    const dist = simpleObject.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestAtom(restruct, pos, skip, minDist) {\n  let closestAtom = null\n  const maxMinDist = SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'atoms' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  restruct.atoms.forEach((atom, aid) => {\n    if (aid === skipId) return\n\n    const dist = Vec2.dist(pos, atom.a.pp)\n\n    if (dist < minDist) {\n      closestAtom = aid\n      minDist = dist\n    }\n  })\n\n  if (closestAtom !== null) {\n    return {\n      id: closestAtom,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestBond(restruct, pos, skip, minDist, scale) {\n  // eslint-disable-line max-params\n  let closestBond = null\n  let closestBondCenter = null\n  const maxMinDist = 0.8 * SELECTION_DISTANCE_COEFFICIENT\n  const skipId = skip && skip.map === 'bonds' ? skip.id : null\n\n  minDist = minDist || maxMinDist\n  minDist = Math.min(minDist, maxMinDist)\n\n  let minCDist = minDist\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const mid = Vec2.lc2(p1, 0.5, p2, 0.5)\n    const cdist = Vec2.dist(pos, mid)\n\n    if (cdist < minCDist) {\n      minCDist = cdist\n      closestBondCenter = bid\n    }\n  })\n\n  restruct.bonds.forEach((bond, bid) => {\n    if (bid === skipId) return\n\n    const hb = restruct.molecule.halfBonds.get(bond.b.hb1)\n    const dir = hb.dir\n    const norm = hb.norm\n\n    const p1 = restruct.atoms.get(bond.b.begin).a.pp\n    const p2 = restruct.atoms.get(bond.b.end).a.pp\n\n    const inStripe = Vec2.dot(pos.sub(p1), dir) * Vec2.dot(pos.sub(p2), dir) < 0\n\n    if (inStripe) {\n      const dist = Math.abs(Vec2.dot(pos.sub(p1), norm))\n\n      if (dist < minDist) {\n        closestBond = bid\n        minDist = dist\n      }\n    }\n  })\n\n  if (closestBondCenter !== null) {\n    return {\n      id: closestBondCenter,\n      dist: minCDist\n    }\n  }\n\n  if (\n    closestBond !== null &&\n    minDist > SELECTION_DISTANCE_COEFFICIENT * scale\n  ) {\n    return {\n      id: closestBond,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestEnhancedFlag(restruct, pos, skip, _minDist, options) {\n  let minDist\n  let ret = null\n  restruct.enhancedFlags.forEach((item, id) => {\n    const fragment = restruct.molecule.frags.get(id)\n    if (!fragment || !fragment.enhancedStereoFlag || !options.showStereoFlags)\n      return\n\n    const p = fragment.stereoFlagPosition\n      ? new Vec2(fragment.stereoFlagPosition.x, fragment.stereoFlagPosition.y)\n      : Fragment.getDefaultStereoFlagPosition(restruct.molecule, id)\n    if (!p || Math.abs(pos.x - p.x) >= 1.0) return\n\n    const dist = Math.abs(pos.y - p.y)\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n  return ret\n}\n\nfunction findClosestDataSGroupData(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.sgroupData.forEach((item, id) => {\n    if (item.sgroup.type !== 'DAT') throw new Error('Data group expected')\n\n    if (item.sgroup.data.fieldName !== 'MRV_IMPLICIT_H') {\n      const box = item.sgroup.dataArea\n      const inBox =\n        box.p0.y < pos.y &&\n        box.p1.y > pos.y &&\n        box.p0.x < pos.x &&\n        box.p1.x > pos.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pos.x),\n        Math.abs(box.p1.x - pos.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = { id, dist: xDist }\n        minDist = xDist\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestFrag(restruct, pos, skip, minDist, scale) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  const struct = restruct.molecule\n\n  const closestAtom = findClosestAtom(restruct, pos, skip, minDist)\n\n  if (closestAtom) {\n    return {\n      id: struct.atoms.get(closestAtom.id).fragment,\n      dist: closestAtom.dist\n    }\n  }\n\n  const closestBond = findClosestBond(restruct, pos, skip, minDist, scale)\n\n  if (closestBond) {\n    const atomId = struct.bonds.get(closestBond.id).begin\n    return {\n      id: struct.atoms.get(atomId).fragment,\n      dist: closestBond.dist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestRGroup(restruct, pos, skip, minDist) {\n  minDist = Math.min(\n    minDist || SELECTION_DISTANCE_COEFFICIENT,\n    SELECTION_DISTANCE_COEFFICIENT\n  )\n\n  let ret = null\n\n  restruct.rgroups.forEach((rgroup, rgid) => {\n    if (\n      rgid !== skip &&\n      rgroup.labelBox &&\n      rgroup.labelBox.contains(pos, 0.5)\n    ) {\n      const dist = Vec2.dist(rgroup.labelBox.centre(), pos)\n\n      if (!ret || dist < minDist) {\n        minDist = dist\n        ret = { id: rgid, dist: minDist }\n      }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestRxnArrow(restruct, pos) {\n  let minDist = null\n  let refPoint = null\n  let ret = null\n\n  restruct.rxnArrows.forEach((rxnArrow, id) => {\n    const dist = rxnArrow.calcDistance(pos, restruct.render.options.scale)\n\n    if (dist.minDist < 0.3 && (!ret || dist.minDist < minDist)) {\n      minDist = dist.minDist\n      refPoint = dist.refPoint\n\n      ret = { id, dist: minDist, ref: refPoint }\n    }\n  })\n  return ret\n}\n\nfunction findClosestRxnPlus(restruct, pos) {\n  let minDist = null\n  let ret = null\n\n  restruct.rxnPluses.forEach((plus, id) => {\n    const p = plus.item.pp\n    const dist = Math.max(Math.abs(pos.x - p.x), Math.abs(pos.y - p.y))\n\n    if (dist < 0.3 && (!ret || dist < minDist)) {\n      minDist = dist\n      ret = { id, dist: minDist }\n    }\n  })\n\n  return ret\n}\n\nfunction findClosestSGroup(restruct, pos) {\n  let ret = null\n  let minDist = SELECTION_DISTANCE_COEFFICIENT\n\n  restruct.molecule.sgroups.forEach((sg, sgid) => {\n    if (sg.functionalGroup && !sg.expanded) {\n      const firstAtomPp = sg.firstSgroupAtom.pp\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n      const shift = new Vec2(0.625, 0.625)\n      const box = {\n        p0: Vec2.diff(firstAtomPp, shift),\n        p1: Vec2.sum(firstAtomPp, shift)\n      }\n\n      const inBox =\n        box.p0.y < pg.y && box.p1.y > pg.y && box.p0.x < pg.x && box.p1.x > pg.x\n      const xDist = Math.min(\n        Math.abs(box.p0.x - pg.x),\n        Math.abs(box.p1.x - pg.x)\n      )\n\n      if (inBox && (ret === null || xDist < minDist)) {\n        ret = sgid\n        minDist = xDist\n      }\n    } else {\n      const d = sg.bracketDir\n      const n = d.rotateSC(1, 0)\n      const pg = new Vec2(Vec2.dot(pos, d), Vec2.dot(pos, n))\n\n      sg.areas.forEach((box) => {\n        const inBox =\n          box.p0.y < pg.y &&\n          box.p1.y > pg.y &&\n          box.p0.x < pg.x &&\n          box.p1.x > pg.x\n        const xDist = Math.min(\n          Math.abs(box.p0.x - pg.x),\n          Math.abs(box.p1.x - pg.x)\n        )\n\n        if (inBox && (ret === null || xDist < minDist)) {\n          ret = sgid\n          minDist = xDist\n        }\n      })\n    }\n  })\n\n  if (ret !== null) {\n    return {\n      id: ret,\n      dist: minDist\n    }\n  }\n\n  return null\n}\n\nfunction findClosestItem(restruct, pos, maps, skip, scale) {\n  // eslint-disable-line max-params\n  maps = maps || Object.keys(findMaps)\n\n  return maps.reduce((res, mp) => {\n    const minDist = res ? res.dist : null\n    const item = findMaps[mp](restruct, pos, skip, minDist, scale)\n\n    if (item !== null && (res === null || item.dist < res.dist)) {\n      const { id, dist, ...other } = item\n      return {\n        map: mp,\n        id: id,\n        dist: dist,\n        ...other\n      }\n    }\n\n    return res\n  }, null)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param selected { object }\n * @param maps { Array<string> }\n * @param scale { number }\n * @return {{\n * \t\tatoms: Map<number, number>?\n * \t\tbonds: Map<number, number>?\n * }}\n */\nfunction findCloseMerge(restruct, selected, maps = ['atoms', 'bonds'], scale) {\n  const pos = {\n    atoms: new Map(), // aid -> position\n    bonds: new Map() // bid -> position\n  }\n\n  const struct = restruct.molecule\n\n  selected.atoms.forEach((aid) => {\n    pos.atoms.set(aid, struct.atoms.get(aid).pp)\n  })\n\n  selected.bonds.forEach((bid) => {\n    const bond = struct.bonds.get(bid)\n    pos.bonds.set(\n      bid,\n      Vec2.lc2(\n        struct.atoms.get(bond.begin).pp,\n        0.5,\n        struct.atoms.get(bond.end).pp,\n        0.5\n      )\n    )\n  })\n\n  const result = {}\n  maps.forEach((mp) => {\n    result[mp] = Array.from(pos[mp].keys()).reduce((res, srcId) => {\n      const skip = { map: mp, id: srcId }\n      const item = findMaps[mp](restruct, pos[mp].get(srcId), skip, null, scale)\n\n      if (item && !selected[mp].includes(item.id)) res.set(srcId, item.id)\n\n      return res\n    }, new Map())\n  })\n\n  return result\n}\n\nexport default {\n  atom: findClosestAtom, // used in Actions\n  item: findClosestItem,\n  merge: findCloseMerge\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Bond, Vec2 } from 'domain/entities'\n\nimport closest from '../shared/closest'\nimport { difference } from 'lodash'\n\nexport function atomGetAttr(restruct, aid, name) {\n  return restruct.molecule.atoms.get(aid)[name]\n}\n\nexport function atomGetDegree(restruct, aid) {\n  return restruct.atoms.get(aid).a.neighbors.length\n}\n\nexport function atomGetSGroups(restruct, aid) {\n  return Array.from(restruct.atoms.get(aid).a.sgs)\n}\n\nexport function atomGetPos(restruct, id) {\n  return restruct.molecule.atoms.get(id).pp\n}\n\nexport function findStereoAtoms(struct, aids) {\n  return aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null)\n}\n\nexport function structSelection(struct) {\n  return [\n    'atoms',\n    'bonds',\n    'frags',\n    'sgroups',\n    'rgroups',\n    'rxnArrows',\n    'rxnPluses',\n    'simpleObjects',\n    'texts'\n  ].reduce((res, key) => {\n    res[key] = Array.from(struct[key].keys())\n    return res\n  }, {})\n}\n\n// Get new atom id/label and pos for bond being added to existing atom\nexport function atomForNewBond(restruct, id, bond?) {\n  // eslint-disable-line max-statements\n  const neighbours: Array<{ id: number; v: Vec2 }> = []\n  const pos = atomGetPos(restruct, id)\n  const atomNeighbours = restruct.molecule.atomGetNeighbors(id)\n\n  const prevBondId = restruct.molecule.findBondId(\n    id,\n    atomNeighbours.length ? atomNeighbours[0]?.aid : undefined\n  )\n  const prevBond = restruct.molecule.bonds.get(prevBondId)\n  const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1\n\n  restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n    const neiPos = atomGetPos(restruct, nei.aid)\n\n    if (Vec2.dist(pos, neiPos) < 0.1) return\n\n    neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) })\n  })\n\n  neighbours.sort(\n    (nei1, nei2) =>\n      Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x)\n  )\n\n  let i\n  let maxI = 0\n  let angle\n  let maxAngle = 0\n\n  // TODO: impove layout: tree, ...\n\n  for (i = 0; i < neighbours.length; i++) {\n    angle = Vec2.angle(\n      neighbours[i].v,\n      neighbours[(i + 1) % neighbours.length].v\n    )\n\n    if (angle < 0) angle += 2 * Math.PI\n\n    if (angle > maxAngle) {\n      maxI = i\n      maxAngle = angle\n    }\n  }\n\n  let v = new Vec2(1, 0)\n\n  if (neighbours.length > 0) {\n    if (neighbours.length === 1) {\n      maxAngle = -((4 * Math.PI) / 3)\n\n      // zig-zag\n      const nei = restruct.molecule.atomGetNeighbors(id)[0]\n      if (atomGetDegree(restruct, nei.aid) > 1) {\n        const neiNeighbours: Array<any> = []\n        const neiPos = atomGetPos(restruct, nei.aid)\n        const neiV = Vec2.diff(pos, neiPos)\n        const neiAngle = Math.atan2(neiV.y, neiV.x)\n\n        restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\n          const neiNeiPos = atomGetPos(restruct, neiNei.aid)\n\n          if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\n            return\n          }\n\n          const vDiff = Vec2.diff(neiNeiPos, neiPos)\n          let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle\n\n          if (ang < 0) ang += 2 * Math.PI\n\n          neiNeighbours.push(ang)\n        })\n        neiNeighbours.sort((nei1, nei2) => nei1 - nei2)\n\n        if (\n          neiNeighbours[0] <= Math.PI * 1.01 &&\n          neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI\n        ) {\n          maxAngle *= -1\n        }\n      }\n    }\n\n    const shallBe180DegToPrevBond =\n      (neighbours.length === 1 &&\n        prevBondType === bond?.type &&\n        (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\n          bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\n      (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\n        bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\n      (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\n        bond?.type === Bond.PATTERN.TYPE.SINGLE)\n\n    if (shallBe180DegToPrevBond) {\n      const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle\n      if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\n        angle = (prevBondAngle * Math.PI) / 180 + Math.PI\n      } else {\n        angle = (prevBondAngle * Math.PI) / 180\n      }\n    } else {\n      angle =\n        maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x)\n    }\n\n    v = v.rotate(angle)\n  }\n\n  v.add_(pos) // eslint-disable-line no-underscore-dangle\n\n  let a: any = closest.atom(restruct, v, null, 0.1)\n  a = a === null ? { label: 'C' } : a.id\n\n  return { atom: a, pos: v }\n}\n\nexport function getRelSgroupsBySelection(restruct, selectedAtoms) {\n  return restruct.molecule.sgroups.filter(\n    (_sgid, sg) =>\n      !sg.data.attached &&\n      !sg.data.absolute &&\n      difference(sg.atoms, selectedAtoms).length === 0\n  )\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { RGroupAttr, RGroupFragment, UpdateIfThen } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromRGroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new RGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function fromRGroupFragment(restruct, rgidNew, frid) {\n  const action = new Action()\n  action.addOp(new RGroupFragment(rgidNew, frid))\n\n  return action.perform(restruct)\n}\n\nexport function fromUpdateIfThen(\n  restruct,\n  rgidNew,\n  rgidOld,\n  skipRgids: Array<number> = []\n) {\n  const action = new Action()\n  if (!restruct.molecule.rgroups.get(rgidOld)) {\n    action.addOp(new UpdateIfThen(rgidNew, rgidOld, skipRgids))\n  }\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAttr,\n  SGroupAddToHierarchy,\n  SGroupAtomAdd,\n  SGroupAtomRemove,\n  SGroupAttr,\n  SGroupCreate,\n  SGroupDelete,\n  SGroupRemoveFromHierarchy\n} from '../operations'\nimport { Pile, SGroup } from 'domain/entities'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\n\nimport { Action } from './action'\nimport { SgContexts } from '..'\nimport { uniq } from 'lodash/fp'\nimport { fromAtomsAttrs } from './atom'\n\nexport function fromSeveralSgroupAddition(restruct, type, atoms, attrs) {\n  const descriptors = attrs.fieldValue\n\n  if (typeof descriptors === 'string' || type !== 'DAT') {\n    return fromSgroupAddition(\n      restruct,\n      type,\n      atoms,\n      attrs,\n      restruct.molecule.sgroups.newId()\n    )\n  }\n\n  return descriptors.reduce((acc, fValue) => {\n    const localAttrs = Object.assign({}, attrs)\n    localAttrs.fieldValue = fValue\n\n    return acc.mergeWith(\n      fromSgroupAddition(\n        restruct,\n        type,\n        atoms,\n        localAttrs,\n        restruct.molecule.sgroups.newId()\n      )\n    )\n  }, new Action())\n}\n\nexport function fromSgroupAttrs(restruct, id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action.perform(restruct)\n}\n\nexport function setExpandSGroup(restruct, sgid, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(sgid, key, attrs[key]))\n  })\n\n  const sgroup = restruct.molecule.sgroups.get(sgid)\n  if (sgroup.firstSgroupAtom) delete sgroup.firstSgroupAtom\n  const atoms = SGroup.getAtoms(restruct, sgroup)\n\n  atoms.forEach((aid) => {\n    action.mergeWith(\n      fromAtomsAttrs(restruct, aid, restruct.atoms.get(aid).a, false)\n    )\n  })\n\n  return action.perform(restruct)\n}\n\nexport function sGroupAttributeAction(id, attrs) {\n  const action = new Action()\n\n  Object.keys(attrs).forEach((key) => {\n    action.addOp(new SGroupAttr(id, key, attrs[key]))\n  })\n\n  return action\n}\n\nexport function fromSgroupDeletion(restruct, id) {\n  let action = new Action()\n  const struct = restruct.molecule\n\n  const sG = restruct.sgroups.get(id).item\n\n  if (sG.type === 'SRU') {\n    struct.sGroupsRecalcCrossBonds()\n\n    sG.neiAtoms.forEach((aid) => {\n      if (atomGetAttr(restruct, aid, 'label') === '*') {\n        action.addOp(new AtomAttr(aid, 'label', 'C'))\n      }\n    })\n  }\n\n  const sg = struct.sgroups.get(id)\n  const atoms = SGroup.getAtoms(struct, sg)\n  const attrs = sg.getAttrs()\n\n  action.addOp(new SGroupRemoveFromHierarchy(id))\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomRemove(id, atom))\n  })\n\n  action.addOp(new SGroupDelete(id))\n\n  action = action.perform(restruct)\n\n  action.mergeWith(sGroupAttributeAction(id, attrs))\n\n  return action\n}\n\nexport function fromSgroupAddition(\n  restruct,\n  type,\n  atoms,\n  attrs,\n  sgid,\n  pp?,\n  expanded?,\n  name?\n) {\n  // eslint-disable-line\n  let action = new Action()\n\n  // TODO: shoud the id be generated when OpSGroupCreate is executed?\n  //      if yes, how to pass it to the following operations?\n  sgid = sgid - 0 === sgid ? sgid : restruct.molecule.sgroups.newId()\n\n  if (type === 'SUP') {\n    action.addOp(new SGroupCreate(sgid, type, pp, expanded, name))\n  } else {\n    action.addOp(new SGroupCreate(sgid, type, pp))\n  }\n\n  atoms.forEach((atom) => {\n    action.addOp(new SGroupAtomAdd(sgid, atom))\n  })\n\n  action.addOp(\n    type !== 'DAT'\n      ? new SGroupAddToHierarchy(sgid)\n      : new SGroupAddToHierarchy(sgid, -1, [])\n  )\n\n  action = action.perform(restruct)\n\n  if (type === 'SRU') {\n    restruct.molecule.sGroupsRecalcCrossBonds()\n    let asteriskAction = new Action()\n\n    restruct.sgroups.get(sgid).item.neiAtoms.forEach((aid) => {\n      const plainCarbon = restruct.atoms.get(aid).a.isPlainCarbon()\n\n      if (atomGetDegree(restruct, aid) === 1 && plainCarbon) {\n        asteriskAction.addOp(new AtomAttr(aid, 'label', '*'))\n      }\n    })\n\n    asteriskAction = asteriskAction.perform(restruct)\n    asteriskAction.mergeWith(action)\n    action = asteriskAction\n  }\n\n  return fromSgroupAttrs(restruct, sgid, attrs).mergeWith(action)\n}\n\nexport function fromSgroupAction(\n  context,\n  restruct,\n  newSg,\n  sourceAtoms,\n  selection\n) {\n  if (context === SgContexts.Bond) {\n    return fromBondAction(restruct, newSg, sourceAtoms, selection)\n  }\n\n  const atomsFromBonds = getAtomsFromBonds(restruct.molecule, selection.bonds)\n  const newSourceAtoms = uniq(sourceAtoms.concat(atomsFromBonds))\n\n  if (context === SgContexts.Fragment) {\n    return fromGroupAction(\n      restruct,\n      newSg,\n      newSourceAtoms,\n      Array.from(restruct.atoms.keys())\n    )\n  }\n\n  if (context === SgContexts.Multifragment) {\n    return fromMultiFragmentAction(restruct, newSg, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Group) {\n    return fromGroupAction(restruct, newSg, newSourceAtoms, newSourceAtoms)\n  }\n\n  if (context === SgContexts.Atom) {\n    return fromAtomAction(restruct, newSg, newSourceAtoms)\n  }\n\n  return {\n    action: fromSeveralSgroupAddition(\n      restruct,\n      newSg.type,\n      sourceAtoms,\n      newSg.attrs\n    )\n  }\n}\n\nfunction fromAtomAction(restruct, newSg, sourceAtoms) {\n  return sourceAtoms.reduce(\n    (acc, atom) => {\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, [atom], newSg.attrs)\n      )\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromGroupAction(restruct, newSg, sourceAtoms, targetAtoms) {\n  const allFragments = new Pile(\n    sourceAtoms.map((aid) => restruct.atoms.get(aid).a.fragment)\n  )\n\n  return Array.from(allFragments).reduce(\n    (acc, fragId) => {\n      const atoms = targetAtoms.reduce((res, aid) => {\n        const atom = restruct.atoms.get(aid).a\n        if (fragId === atom.fragment) res.push(aid)\n\n        return res\n      }, [])\n\n      const bonds = getAtomsBondIds(restruct.molecule, atoms)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs)\n      )\n\n      acc.selection.atoms = acc.selection.atoms.concat(atoms)\n      acc.selection.bonds = acc.selection.bonds.concat(bonds)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: [],\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromBondAction(restruct, newSg, sourceAtoms, currSelection) {\n  const struct = restruct.molecule\n  let bonds = getAtomsBondIds(struct, sourceAtoms)\n\n  if (currSelection.bonds) bonds = uniq(bonds.concat(currSelection.bonds))\n\n  return bonds.reduce(\n    (acc: any, bondid) => {\n      const bond = struct.bonds.get(bondid)\n\n      acc.action = acc.action.mergeWith(\n        fromSeveralSgroupAddition(\n          restruct,\n          newSg.type,\n          [bond.begin, bond.end],\n          newSg.attrs\n        )\n      )\n\n      acc.selection.bonds.push(bondid)\n\n      return acc\n    },\n    {\n      action: new Action(),\n      selection: {\n        atoms: sourceAtoms,\n        bonds: []\n      }\n    }\n  )\n}\n\nfunction fromMultiFragmentAction(restruct, newSg, atoms) {\n  const bonds = getAtomsBondIds(restruct.molecule, atoms)\n  return {\n    action: fromSeveralSgroupAddition(restruct, newSg.type, atoms, newSg.attrs),\n    selection: {\n      atoms,\n      bonds\n    }\n  }\n}\n\n// Add action operation to remove atom from s-group if needed\nexport function removeAtomFromSgroupIfNeeded(action, restruct, id) {\n  const sgroups = atomGetSGroups(restruct, id)\n\n  if (sgroups.length > 0) {\n    sgroups.forEach((sid) => {\n      action.addOp(new SGroupAtomRemove(sid, id))\n    })\n\n    return true\n  }\n\n  return false\n}\n\n// Add action operations to remove whole s-group if needed\nexport function removeSgroupIfNeeded(action, restruct, atoms) {\n  const struct = restruct.molecule\n  const sgCounts = new Map()\n\n  atoms.forEach((id) => {\n    const sgroups = atomGetSGroups(restruct, id)\n\n    sgroups.forEach((sid) => {\n      sgCounts.set(sid, sgCounts.has(sid) ? sgCounts.get(sid) + 1 : 1)\n    })\n  })\n\n  sgCounts.forEach((count, sid) => {\n    const sG = restruct.sgroups.get(sid).item\n    const sgAtoms = SGroup.getAtoms(restruct.molecule, sG)\n\n    if (sgAtoms.length === count) {\n      // delete whole s-group\n      const sgroup = struct.sgroups.get(sid)\n      action.mergeWith(sGroupAttributeAction(sid, sgroup.getAttrs()))\n      action.addOp(new SGroupRemoveFromHierarchy(sid))\n      action.addOp(new SGroupDelete(sid))\n    }\n  })\n}\n\nfunction getAtomsBondIds(struct, atoms) {\n  const atomSet = new Pile(atoms)\n\n  return Array.from(struct.bonds.keys()).filter((bid) => {\n    const bond = struct.bonds.get(bid)\n    return atomSet.has(bond.begin) && atomSet.has(bond.end)\n  })\n}\n\nfunction getAtomsFromBonds(struct, bonds) {\n  bonds = bonds || []\n  return bonds.reduce((acc, bondid) => {\n    const bond = struct.bonds.get(bondid)\n    acc = acc.concat([bond.begin, bond.end])\n    return acc\n  }, [])\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  Atom,\n  Bond,\n  Neighbor,\n  StereoLabel,\n  Struct,\n  Vec2\n} from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentStereoFlag\n} from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport {\n  fromAtomMerge,\n  fromStereoAtomAttrs,\n  mergeFragmentsIfNeeded,\n  mergeSgroups\n} from './atom'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { StereoValidator } from 'domain/helpers'\nimport utils from '../shared/utils'\n\nexport function fromBondAddition(\n  restruct: ReStruct,\n  bond: any,\n  begin: any,\n  end: any,\n  pos?: Vec2,\n  pos2?: Vec2\n): [Action, number, number, number] {\n  // eslint-disable-line\n  if (end === undefined) {\n    const atom = atomForNewBond(restruct, begin, bond)\n    end = atom.atom\n    pos = atom.pos\n  }\n  const action = new Action()\n  const struct = restruct.molecule\n  let mergeFragments = false\n\n  let frid = null\n\n  if (!(typeof begin === 'number')) {\n    if (typeof end === 'number') frid = atomGetAttr(restruct, end, 'fragment')\n  } else {\n    frid = atomGetAttr(restruct, begin, 'fragment')\n    if (typeof end === 'number') mergeFragments = true\n  }\n\n  if (frid == null) {\n    frid = (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd)\n      .frid\n  }\n\n  if (!(typeof begin === 'number')) {\n    begin.fragment = frid\n    begin = (action.addOp(new AtomAdd(begin, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof end === 'number') mergeSgroups(action, restruct, [begin], end)\n    pos = pos2\n  } else if (atomGetAttr(restruct, begin, 'label') === '*') {\n    action.addOp(new AtomAttr(begin, 'label', 'C').perform(restruct))\n  }\n\n  if (!(typeof end === 'number')) {\n    end.fragment = frid\n    // TODO: <op>.data.aid here is a hack, need a better way to access the id of a created atom\n    end = (action.addOp(new AtomAdd(end, pos).perform(restruct)) as AtomAdd)\n      .data.aid\n    if (typeof begin === 'number') mergeSgroups(action, restruct, [end], begin)\n  } else if (atomGetAttr(restruct, end, 'label') === '*') {\n    action.addOp(new AtomAttr(end, 'label', 'C').perform(restruct))\n  }\n\n  const bid = (\n    action.addOp(new BondAdd(begin, end, bond).perform(restruct)) as BondAdd\n  ).data.bid\n\n  const bnd = struct.bonds.get(bid)\n\n  if (bnd) {\n    action.addOp(new CalcImplicitH([bnd.begin, bnd.end]).perform(restruct))\n    action.mergeWith(fromBondStereoUpdate(restruct, bnd))\n  }\n\n  action.operations.reverse()\n\n  if (mergeFragments) mergeFragmentsIfNeeded(action, restruct, begin, end)\n\n  if (struct.frags.get(frid || 0)?.stereoAtoms && !bond.stereo) {\n    action.addOp(new FragmentStereoFlag(frid || 0).perform(restruct))\n  }\n\n  return [action, begin, end, bid]\n}\n\nexport function fromBondsAttrs(\n  restruct: ReStruct,\n  ids: Array<number> | number,\n  attrs: Bond,\n  reset?: boolean\n): Action {\n  const struct = restruct.molecule\n  const action = new Action()\n  const bids = Array.isArray(ids) ? ids : [ids]\n\n  bids.forEach((bid) => {\n    Object.keys(Bond.attrlist).forEach((key) => {\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Bond.attrGetDefault(key)\n\n      action.addOp(new BondAttr(bid, key, value).perform(restruct))\n      if (key === 'stereo' && key in attrs) {\n        const bond = struct.bonds.get(bid)\n        if (bond) {\n          action.addOp(\n            new CalcImplicitH([bond.begin, bond.end]).perform(restruct)\n          )\n          action.mergeWith(fromBondStereoUpdate(restruct, bond))\n        }\n      }\n    })\n  })\n\n  return action\n}\n\nexport function fromBondsMerge(\n  restruct: ReStruct,\n  mergeMap: Map<number, number>\n): Action {\n  const struct = restruct.molecule\n\n  const atomPairs = new Map()\n  let action = new Action()\n\n  mergeMap.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n    if (!bond || !bondCI) return\n    const params = utils.mergeBondsParams(struct, bond, struct, bondCI)\n    if (!params.merged) return\n    atomPairs.set(bond.begin, !params.cross ? bondCI.begin : bondCI.end)\n    atomPairs.set(bond.end, !params.cross ? bondCI.end : bondCI.begin)\n  })\n\n  atomPairs.forEach((dst, src) => {\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n  })\n\n  return action\n}\n\nfunction fromBondFlipping(restruct: ReStruct, id: number): Action {\n  const bond = restruct.molecule.bonds.get(id)\n\n  const action = new Action()\n  action.addOp(new BondDelete(id).perform(restruct))\n\n  // TODO: find better way to avoid problem with bond.begin = 0\n  if (Number.isInteger(bond?.end) && Number.isInteger(bond?.begin)) {\n    action.addOp(new BondAdd(bond?.end, bond?.begin, bond).perform(restruct))\n  }\n\n  // todo: swap atoms stereoLabels and stereoAtoms in fragment\n\n  return action\n}\n\nexport function fromBondStereoUpdate(\n  restruct: ReStruct,\n  bond: Bond,\n  withReverse?: boolean\n): Action {\n  const action = new Action()\n  const struct = restruct.molecule\n\n  const beginFrId = struct.atoms.get(bond?.begin)?.fragment\n  const endFrId = struct.atoms.get(bond?.end)?.fragment\n\n  const fragmentStereoBonds: Array<Bond> = []\n\n  struct.bonds.forEach((bond) => {\n    if (struct.atoms.get(bond.begin)?.fragment === beginFrId) {\n      fragmentStereoBonds.push(bond)\n    }\n\n    if (\n      beginFrId !== endFrId &&\n      struct.atoms.get(bond.begin)?.fragment === endFrId\n    ) {\n      fragmentStereoBonds.push(bond)\n    }\n  })\n\n  const stereoAtomsMap = getStereoAtomsMap(struct, fragmentStereoBonds, bond)\n\n  stereoAtomsMap.forEach((stereoProp, aId) => {\n    if (struct.atoms.get(aId)?.stereoLabel !== stereoProp.stereoLabel) {\n      action.mergeWith(\n        fromStereoAtomAttrs(restruct, aId, stereoProp, withReverse)\n      )\n    }\n  })\n\n  return action\n}\n\nexport function getStereoAtomsMap(\n  struct: Struct,\n  bonds: Array<Bond>,\n  bond?: Bond\n) {\n  const stereoAtomsMap = new Map()\n  const correctAtomIds: Array<number> = []\n\n  bonds.forEach((bond: Bond | undefined) => {\n    if (bond) {\n      const beginNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.begin\n      )\n      const endNeighs: Array<Neighbor> | undefined = struct.atomGetNeighbors(\n        bond.end\n      )\n\n      if (\n        StereoValidator.isCorrectStereoCenter(\n          bond,\n          beginNeighs,\n          endNeighs,\n          struct\n        )\n      ) {\n        const stereoLabel = struct.atoms.get(bond.begin)?.stereoLabel\n        if (\n          stereoLabel == null ||\n          stereoAtomsMap.get(bond.begin)?.stereoLabel == null\n        ) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: getStereoParity(bond.stereo),\n            stereoLabel: stereoLabel || `${StereoLabel.Abs}`\n          })\n        }\n        correctAtomIds.push(bond.begin)\n      } else {\n        if (!correctAtomIds.includes(bond.begin)) {\n          stereoAtomsMap.set(bond.begin, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n        if (!correctAtomIds.includes(bond.end)) {\n          stereoAtomsMap.set(bond.end, {\n            stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n            stereoLabel: null\n          })\n        }\n      }\n    }\n  })\n\n  // in case the stereo band is flipped, changed or removed\n  // TODO the duplication of the code below should be fixed, mayby by function\n  if (bond) {\n    if (!correctAtomIds.includes(bond.begin)) {\n      stereoAtomsMap.set(bond.begin, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n    if (!correctAtomIds.includes(bond.end)) {\n      stereoAtomsMap.set(bond.end, {\n        stereoParity: Atom.PATTERN.STEREO_PARITY.NONE,\n        stereoLabel: null\n      })\n    }\n  }\n\n  return stereoAtomsMap\n}\n\nfunction getStereoParity(stereo: number): number | null {\n  let newAtomParity: number | null = null\n  switch (stereo) {\n    case Bond.PATTERN.STEREO.UP:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.ODD\n      break\n    case Bond.PATTERN.STEREO.EITHER:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EITHER\n      break\n    case Bond.PATTERN.STEREO.DOWN:\n      newAtomParity = Atom.PATTERN.STEREO_PARITY.EVEN\n      break\n  }\n  return newAtomParity\n}\n\nexport function bondChangingAction(\n  restruct: ReStruct,\n  itemID: number,\n  bond: Bond,\n  bondProps: any\n): Action {\n  const action = new Action()\n  let newItemId = itemID\n  if (\n    ((bondProps.stereo !== Bond.PATTERN.STEREO.NONE && //\n      bondProps.type === Bond.PATTERN.TYPE.SINGLE) ||\n      bond.type === Bond.PATTERN.TYPE.DATIVE) &&\n    bond.type === bondProps.type &&\n    bond.stereo === bondProps.stereo\n  ) {\n    action.mergeWith(fromBondFlipping(restruct, itemID))\n    newItemId = (action.operations[1] as BondAdd).data.bid\n  }\n  // if bondTool is stereo and equal to bond for change\n\n  const loop = plainBondTypes.includes(bondProps.type) ? plainBondTypes : null\n  if (\n    bondProps.stereo === Bond.PATTERN.STEREO.NONE &&\n    bondProps.type === Bond.PATTERN.TYPE.SINGLE &&\n    bond.stereo === Bond.PATTERN.STEREO.NONE &&\n    loop\n  ) {\n    // if `Single bond` tool is chosen and bond for change in `plainBondTypes`\n    bondProps.type = loop[(loop.indexOf(bond.type) + 1) % loop.length]\n  }\n\n  return fromBondsAttrs(restruct, newItemId, bondProps).mergeWith(action)\n}\n\nconst plainBondTypes = [\n  Bond.PATTERN.TYPE.SINGLE,\n  Bond.PATTERN.TYPE.DOUBLE,\n  Bond.PATTERN.TYPE.TRIPLE\n]\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Bond, RGroup } from 'domain/entities'\nimport {\n  AtomAdd,\n  AtomAttr,\n  AtomDelete,\n  BondAdd,\n  BondAttr,\n  BondDelete,\n  CalcImplicitH,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  SGroupAtomAdd\n} from '../operations'\nimport { atomGetAttr, atomGetDegree, atomGetSGroups } from './utils'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup'\n\nimport { Action } from './action'\nimport { fromBondStereoUpdate } from './bond'\nimport { without } from 'lodash/fp'\n\nexport function fromAtomAddition(restruct, pos, atom) {\n  atom = Object.assign({}, atom)\n  const action = new Action()\n  atom.fragment = (\n    action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n  ).frid\n\n  const aid = (\n    action.addOp(new AtomAdd(atom, pos).perform(restruct)) as AtomAdd\n  ).data.aid\n  action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n  return action\n}\n\n/**\n * @param restruct { ReStruct }\n * @param ids { Array<number>|number }\n * @param attrs { object }\n * @param reset { boolean? }\n */\nexport function fromAtomsAttrs(restruct, ids, attrs, reset) {\n  const action = new Action()\n  const aids = Array.isArray(ids) ? ids : [ids]\n\n  aids.forEach((aid) => {\n    Object.keys(Atom.attrlist).forEach((key) => {\n      if (key === 'attpnt' && !(key in attrs)) return\n      if (!(key in attrs) && !reset) return\n\n      const value = key in attrs ? attrs[key] : Atom.attrGetDefault(key)\n\n      switch (key) {\n        case 'stereoLabel':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        case 'stereoParity':\n          if (key in attrs && value) {\n            action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          }\n          break\n        default:\n          action.addOp(new AtomAttr(aid, key, value).perform(restruct))\n          break\n      }\n    })\n\n    if (\n      !reset &&\n      'label' in attrs &&\n      attrs.label !== null &&\n      attrs.label !== 'L#' &&\n      !('atomList' in attrs)\n    ) {\n      action.addOp(new AtomAttr(aid, 'atomList', null).perform(restruct))\n    }\n\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n\n    const atomNeighbors = restruct.molecule.atomGetNeighbors(aid)\n    const bond = restruct.molecule.bonds.get(atomNeighbors[0]?.bid)\n    if (bond) {\n      action.mergeWith(fromBondStereoUpdate(restruct, bond))\n    }\n  })\n\n  return action\n}\n\nexport function fromStereoAtomAttrs(restruct, aid, attrs, withReverse) {\n  const action = new Action()\n  const atom = restruct.molecule.atoms.get(aid)\n  if (atom) {\n    const frid = atom.fragment\n\n    if ('stereoParity' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoParity', attrs.stereoParity).perform(restruct)\n      )\n    }\n    if ('stereoLabel' in attrs) {\n      action.addOp(\n        new AtomAttr(aid, 'stereoLabel', attrs.stereoLabel).perform(restruct)\n      )\n      if (attrs.stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid).perform(restruct))\n      } else {\n        action.addOp(new FragmentAddStereoAtom(frid, aid).perform(restruct))\n      }\n    }\n    if (withReverse) action.operations.reverse()\n  }\n\n  return action\n}\n\nexport function fromAtomsFragmentAttr(restruct, aids, newfrid) {\n  const action = new Action()\n\n  aids.forEach((aid) => {\n    const atom = restruct.molecule.atoms.get(aid)\n    const oldfrid = atom.fragment\n    action.addOp(new AtomAttr(aid, 'fragment', newfrid))\n\n    if (atom.stereoLabel !== null) {\n      action.addOp(new FragmentAddStereoAtom(newfrid, aid))\n      action.addOp(new FragmentDeleteStereoAtom(oldfrid, aid))\n    }\n  })\n\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param srcId { number }\n * @param dstId { number }\n * @return { Action }\n */\nexport function fromAtomMerge(restruct, srcId, dstId) {\n  if (srcId === dstId) return new Action()\n\n  const fragAction = new Action()\n  mergeFragmentsIfNeeded(fragAction, restruct, srcId, dstId)\n\n  const action = new Action()\n\n  const atomNeighbors = restruct.molecule.atomGetNeighbors(srcId)\n  atomNeighbors.forEach((nei) => {\n    const bond = restruct.molecule.bonds.get(nei.bid)\n\n    if (dstId === bond.begin || dstId === bond.end) {\n      // src & dst have one nei\n      action.addOp(new BondDelete(nei.bid))\n      return\n    }\n\n    const begin = bond.begin === nei.aid ? nei.aid : dstId\n    const end = bond.begin === nei.aid ? dstId : nei.aid\n\n    const mergeBondId = restruct.molecule.findBondId(begin, end)\n\n    if (mergeBondId === null) {\n      action.addOp(new BondAdd(begin, end, bond))\n    } else {\n      // replace old bond with new bond\n      const attrs = Bond.getAttrHash(bond)\n      Object.keys(attrs).forEach((key) => {\n        action.addOp(new BondAttr(mergeBondId, key, attrs[key]))\n      })\n    }\n\n    action.addOp(new BondDelete(nei.bid))\n  })\n\n  const attrs = Atom.getAttrHash(restruct.molecule.atoms.get(srcId))\n\n  if (atomGetDegree(restruct, srcId) === 1 && attrs.label === '*') {\n    attrs.label = 'C'\n  }\n\n  Object.keys(attrs).forEach((key) => {\n    if (key !== 'stereoLabel' && key !== 'stereoParity') {\n      action.addOp(new AtomAttr(dstId, key, attrs[key]))\n    }\n  })\n\n  const sgChanged = removeAtomFromSgroupIfNeeded(action, restruct, srcId)\n\n  if (sgChanged) removeSgroupIfNeeded(action, restruct, [srcId])\n\n  action.addOp(new AtomDelete(srcId))\n  action.addOp(new CalcImplicitH([dstId]))\n  const dstAtomNeighbors = restruct.molecule.atomGetNeighbors(dstId)\n  const bond = restruct.molecule.bonds.get(\n    dstAtomNeighbors[0]?.bid || atomNeighbors[0]?.bid\n  )\n\n  return action\n    .perform(restruct)\n    .mergeWith(fragAction)\n    .mergeWith(fromBondStereoUpdate(restruct, bond))\n}\n\nexport function mergeFragmentsIfNeeded(action, restruct, srcId, dstId) {\n  const frid = atomGetAttr(restruct, srcId, 'fragment')\n  const frid2 = atomGetAttr(restruct, dstId, 'fragment')\n  if (frid2 === frid || typeof frid2 !== 'number') {\n    return\n  }\n\n  const struct = restruct.molecule\n\n  const rgid = RGroup.findRGroupByFragment(struct.rgroups, frid2)\n  if (!(typeof rgid === 'undefined')) {\n    action\n      .mergeWith(fromRGroupFragment(restruct, null, frid2))\n      .mergeWith(fromUpdateIfThen(restruct, 0, rgid))\n  }\n\n  const fridAtoms = struct.getFragmentIds(frid)\n\n  const atomsToNewFrag: Array<any> = []\n  struct.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid2) atomsToNewFrag.push(aid)\n  })\n  const moveAtomsAction = fromAtomsFragmentAttr(restruct, atomsToNewFrag, frid)\n\n  mergeSgroups(action, restruct, fridAtoms, dstId)\n  action.addOp(new FragmentDelete(frid2).perform(restruct))\n  action.mergeWith(moveAtomsAction)\n}\n\nexport function mergeSgroups(action, restruct, srcAtoms, dstAtom) {\n  const sgroups = atomGetSGroups(restruct, dstAtom)\n\n  sgroups.forEach((sid) => {\n    const sgroup = restruct.molecule.sgroups.get(sid)\n    const notExpandedContexts = ['Atom', 'Bond', 'Group']\n    if (\n      sgroup.type === 'DAT' &&\n      notExpandedContexts.includes(sgroup.data.context)\n    ) {\n      return\n    }\n    const atomsToSgroup: any = without(sgroup.atoms, srcAtoms)\n    atomsToSgroup.forEach((aid) =>\n      action.addOp(new SGroupAtomAdd(sid, aid).perform(restruct))\n    )\n  })\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AlignDescriptors, CanvasLoad } from '../operations'\n\nimport { Action } from './action'\n\nexport function fromNewCanvas(restruct, struct) {\n  const action = new Action()\n\n  action.addOp(new CanvasLoad(struct))\n  return action.perform(restruct)\n}\n\nexport function fromDescriptorsAlign(restruct) {\n  const action = new Action()\n  action.addOp(new AlignDescriptors())\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { AtomAdd, FragmentAdd } from '../operations'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { atomGetAttr } from './utils'\nimport { fromBondAddition } from './bond'\n\nexport function fromChain(restruct, p0, v, nSect, atomId) {\n  // eslint-disable-line max-params\n  const dx = Math.cos(Math.PI / 6)\n  const dy = Math.sin(Math.PI / 6)\n\n  let action = new Action()\n\n  const frid =\n    atomId !== null\n      ? atomGetAttr(restruct, atomId, 'fragment')\n      : (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n\n  const chainItems: any = {\n    atoms: [],\n    bonds: []\n  }\n\n  let id0 =\n    atomId !== null\n      ? atomId\n      : (\n          action.addOp(\n            new AtomAdd({ label: 'C', fragment: frid }, p0).perform(restruct)\n          ) as AtomAdd\n        ).data.aid\n\n  chainItems.atoms.push(id0)\n  action.operations.reverse()\n\n  for (let i = 0; i < nSect; i++) {\n    const pos = new Vec2(dx * (i + 1), i & 1 ? 0 : dy).rotate(v).add(p0)\n\n    const ret = fromBondAddition(restruct, {}, id0, {}, pos)\n    action = ret[0].mergeWith(action)\n    id0 = ret[2]\n    chainItems.bonds.push(ret[3])\n    chainItems.atoms.push(id0)\n  }\n\n  return [action, chainItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Action } from './action'\nimport { fromAtomMerge } from './atom'\nimport { fromBondsMerge } from './bond'\nimport utils from '../shared/utils'\n\nexport function fromItemsFuse(restruct, items) {\n  let action = new Action()\n\n  if (!items) return action\n\n  const usedAtoms = new Set()\n\n  // merge single atoms\n  items.atoms.forEach((dst, src) => {\n    if (usedAtoms.has(dst) || usedAtoms.has(src)) return\n\n    action = fromAtomMerge(restruct, src, dst).mergeWith(action)\n    usedAtoms.add(dst).add(src)\n  })\n\n  // merge bonds\n  action = fromBondsMerge(restruct, items.bonds).mergeWith(action)\n\n  return action\n}\n\nexport function getItemsToFuse(editor, items) {\n  const struct = editor.render.ctab.molecule\n\n  const mergeItems = items || {\n    atoms: Array.from(struct.atoms.keys()),\n    bonds: Array.from(struct.bonds.keys())\n  }\n\n  return closestToMerge(\n    struct,\n    editor.findMerge(mergeItems, ['atoms', 'bonds'])\n  )\n}\n\nexport function getHoverToFuse(items) {\n  if (!items) return null\n\n  const hoverItems = {\n    atoms: Array.from(items.atoms.values()),\n    bonds: Array.from(items.bonds.values())\n  }\n\n  return { map: 'merge', id: +Date.now(), items: hoverItems }\n}\n\n/**\n * @param struct\n * @param closestMap {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n * @return {{\n * \t\tatoms: Map<number, number>,\n * \t\tbonds: Map<number, number>\n * }}\n */\nfunction closestToMerge(struct, closestMap) {\n  const mergeMap = {\n    atoms: new Map(closestMap.atoms),\n    bonds: new Map(closestMap.bonds)\n  }\n\n  closestMap.bonds.forEach((dstId, srcId) => {\n    const bond = struct.bonds.get(srcId)\n    const bondCI = struct.bonds.get(dstId)\n\n    if (utils.mergeBondsParams(struct, bond, struct, bondCI).merged) {\n      mergeMap.atoms.delete(bond.begin)\n      mergeMap.atoms.delete(bond.end)\n    } else {\n      mergeMap.bonds.delete(srcId)\n    }\n  })\n\n  if (mergeMap.atoms.size === 0 && mergeMap.bonds.size === 0) return null\n\n  return mergeMap\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondMove,\n  EnhancedFlagMove,\n  FragmentAdd,\n  FragmentDelete,\n  FragmentDeleteStereoAtom,\n  FragmentStereoFlag,\n  LoopMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove,\n  SimpleObjectMove,\n  TextMove\n} from '../operations'\nimport { Pile, RGroup, Vec2 } from 'domain/entities'\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { fromAtomsFragmentAttr } from './atom'\nimport { getRelSgroupsBySelection } from './utils'\n\nexport function fromMultipleMove(restruct, lists, d) {\n  d = new Vec2(d)\n\n  const action = new Action()\n  const struct = restruct.molecule\n  const loops = new Pile()\n  const atomsToInvalidate = new Pile()\n\n  if (lists.atoms) {\n    const atomSet = new Pile(lists.atoms)\n    const bondlist: Array<number> = []\n\n    restruct.bonds.forEach((bond, bid) => {\n      if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\n        bondlist.push(bid)\n        // add all adjacent loops\n        // those that are not completely inside the structure will get redrawn anyway\n        ;['hb1', 'hb2'].forEach((hb) => {\n          const loop = struct.halfBonds.get(bond.b[hb]).loop\n          if (loop >= 0) loops.add(loop)\n        })\n        return\n      }\n\n      if (atomSet.has(bond.b.begin)) {\n        atomsToInvalidate.add(bond.b.begin)\n        return\n      }\n\n      if (atomSet.has(bond.b.end)) atomsToInvalidate.add(bond.b.end)\n    })\n\n    bondlist.forEach((bond) => {\n      action.addOp(new BondMove(bond, d))\n    })\n\n    loops.forEach((loopId) => {\n      if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\n        // hack\n        action.addOp(new LoopMove(loopId, d))\n      }\n    })\n\n    lists.atoms.forEach((aid) => {\n      action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)))\n    })\n\n    if (lists.sgroupData && lists.sgroupData.length === 0) {\n      const sgroups = getRelSgroupsBySelection(restruct, lists.atoms)\n      sgroups.forEach((sg) => {\n        action.addOp(new SGroupDataMove(sg.id, d))\n      })\n    }\n  }\n\n  if (lists.rxnArrows) {\n    lists.rxnArrows.forEach((rxnArrow) => {\n      action.addOp(new RxnArrowMove(rxnArrow, d, true))\n    })\n  }\n\n  if (lists.rxnPluses) {\n    lists.rxnPluses.forEach((rxnPulse) => {\n      action.addOp(new RxnPlusMove(rxnPulse, d, true))\n    })\n  }\n\n  if (lists.simpleObjects) {\n    lists.simpleObjects.forEach((simpleObject) => {\n      action.addOp(new SimpleObjectMove(simpleObject, d, true))\n    })\n  }\n\n  if (lists.sgroupData) {\n    lists.sgroupData.forEach((sgData) => {\n      action.addOp(new SGroupDataMove(sgData, d))\n    })\n  }\n\n  if (lists.enhancedFlags) {\n    lists.enhancedFlags.forEach((fid) => {\n      action.addOp(new EnhancedFlagMove(fid, d))\n    })\n  }\n\n  if (lists.texts) {\n    lists.texts.forEach((text) => {\n      action.addOp(new TextMove(text, d, true))\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\n  const action = new Action()\n\n  if (!flag) {\n    const struct = restruct.molecule\n    const frag = restruct.molecule.frags.get(frid)\n    frag.stereoAtoms.forEach((aid) => {\n      if (struct.atoms.get(aid).stereoLabel === null) {\n        action.addOp(new FragmentDeleteStereoAtom(frid, aid))\n      }\n    })\n  }\n\n  action.addOp(new FragmentStereoFlag(frid))\n  return action.perform(restruct)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param aid { number }\n * @param frid { number }\n * @param newfrid { number }\n * @returns { Action }\n */\nfunction processAtom(restruct, aid, frid, newfrid) {\n  const queue = [aid]\n  const usedIds = new Pile(queue)\n\n  while (queue.length > 0) {\n    const id = queue.shift()\n\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\n      if (\n        restruct.molecule.atoms.get(nei.aid).fragment === frid &&\n        !usedIds.has(nei.aid)\n      ) {\n        usedIds.add(nei.aid)\n        queue.push(nei.aid)\n      }\n    })\n  }\n\n  return fromAtomsFragmentAttr(restruct, usedIds, newfrid)\n}\n\n/**\n * @param restruct { ReStruct }\n * @param frid { number }\n * @param rgForRemove\n * @return { Action }\n */\n// TODO [RB] the thing is too tricky :) need something else in future\nexport function fromFragmentSplit(\n  restruct,\n  frid,\n  rgForRemove: Array<number> = []\n) {\n  const action = new Action()\n  const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)\n\n  restruct.molecule.atoms.forEach((atom, aid) => {\n    if (atom.fragment === frid) {\n      const newfrid = (\n        action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd\n      ).frid\n\n      action.mergeWith(processAtom(restruct, aid, frid, newfrid))\n\n      if (rgid) action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid))\n    }\n  })\n\n  if (frid !== -1) {\n    action.mergeWith(fromRGroupFragment(restruct, 0, frid))\n    action.addOp(new FragmentDelete(frid).perform(restruct))\n    action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove))\n  }\n\n  action.operations.reverse()\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomDelete,\n  BondDelete,\n  CalcImplicitH,\n  RxnArrowDelete,\n  RxnPlusDelete,\n  SimpleObjectDelete,\n  TextDelete\n} from '../operations'\nimport { Pile, RGroup } from 'domain/entities'\nimport {\n  fromSgroupDeletion,\n  removeAtomFromSgroupIfNeeded,\n  removeSgroupIfNeeded\n} from './sgroup'\n\nimport { Action } from './action'\nimport assert from 'assert'\nimport { atomGetDegree } from './utils'\nimport { fromBondStereoUpdate } from '../actions/bond'\nimport { fromFragmentSplit } from './fragment'\n\nexport function fromOneAtomDeletion(restruct, id) {\n  return fromFragmentDeletion(restruct, { atoms: [id] })\n}\n\nfunction fromBondDeletion(restruct, bid: number, skipAtoms: Array<any> = []) {\n  let action = new Action()\n  const bond: any = restruct.molecule.bonds.get(bid)\n  const atomsToRemove: Array<any> = []\n\n  action.addOp(new BondDelete(bid))\n\n  if (\n    !skipAtoms.includes(bond.begin) &&\n    atomGetDegree(restruct, bond.begin) === 1\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\n      atomsToRemove.push(bond.begin)\n    }\n\n    action.addOp(new AtomDelete(bond.begin))\n  }\n\n  if (\n    !skipAtoms.includes(bond.end) &&\n    atomGetDegree(restruct, bond.end) === 1\n  ) {\n    if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\n      atomsToRemove.push(bond.end)\n    }\n\n    action.addOp(new AtomDelete(bond.end))\n  }\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n  action = action.perform(restruct)\n  action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct))\n  action.mergeWith(fromBondStereoUpdate(restruct, bond, false))\n\n  action.operations.reverse()\n\n  return action\n}\n\nexport function fromOneBondDeletion(restruct, id) {\n  const frid = restruct.molecule.getBondFragment(id)\n  let action = fromBondDeletion(restruct, id)\n\n  action = fromFragmentSplit(restruct, frid).mergeWith(action)\n\n  return action\n}\n\nexport function fromFragmentDeletion(restruct, selection) {\n  assert(!!selection != null)\n\n  let action = new Action()\n  const atomsToRemove: Array<number> = []\n  const frids: Array<number> = []\n\n  selection = {\n    // TODO: refactor me\n    atoms: selection.atoms || [],\n    bonds: selection.bonds || [],\n    rxnPluses: selection.rxnPluses || [],\n    rxnArrows: selection.rxnArrows || [],\n    sgroupData: selection.sgroupData || [],\n    simpleObjects: selection.simpleObjects || [],\n    texts: selection.texts || []\n  }\n\n  const actionRemoveDataSGroups = new Action()\n  restruct.molecule.sgroups.forEach((sg, id) => {\n    if (\n      selection.sgroupData.includes(id) ||\n      new Pile(selection.atoms).isSuperset(new Pile(sg.atoms))\n    ) {\n      actionRemoveDataSGroups.mergeWith(fromSgroupDeletion(restruct, id))\n    }\n  })\n\n  selection.atoms.forEach((aid) => {\n    restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\n      if (selection.bonds.indexOf(nei.bid) === -1) {\n        selection.bonds = selection.bonds.concat([nei.bid])\n      }\n    })\n  })\n\n  const actionRemoveBonds = new Action()\n  selection.bonds.forEach((bid) => {\n    const frid = restruct.molecule.getBondFragment(bid)\n    if (frids.indexOf(frid) < 0) frids.push(frid)\n\n    actionRemoveBonds.mergeWith(\n      fromBondDeletion(restruct, bid, selection.atoms)\n    )\n  })\n\n  selection.atoms.forEach((aid) => {\n    const frid3 = restruct.molecule.atoms.get(aid).fragment\n    if (frids.indexOf(frid3) < 0) frids.push(frid3)\n\n    if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\n      atomsToRemove.push(aid)\n    }\n\n    action.addOp(new AtomDelete(aid))\n  })\n\n  removeSgroupIfNeeded(action, restruct, atomsToRemove)\n\n  selection.rxnArrows.forEach((id) => {\n    action.addOp(new RxnArrowDelete(id))\n  })\n\n  selection.rxnPluses.forEach((id) => {\n    action.addOp(new RxnPlusDelete(id))\n  })\n\n  selection.simpleObjects.forEach((id) => {\n    action.addOp(new SimpleObjectDelete(id))\n  })\n\n  selection.texts.forEach((id) => {\n    action.addOp(new TextDelete(id))\n  })\n\n  action = action.perform(restruct)\n  action.mergeWith(actionRemoveBonds)\n\n  const rgForRemove: Array<number> = frids.map(\n    (frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid)!\n  )\n\n  while (frids.length > 0) {\n    action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(\n      action\n    )\n  }\n\n  action.mergeWith(actionRemoveDataSGroups)\n\n  return action\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomAdd,\n  BondAdd,\n  FragmentAdd,\n  FragmentAddStereoAtom,\n  RGroupFragment,\n  RxnArrowAdd,\n  RxnPlusAdd,\n  SimpleObjectAdd,\n  TextCreate,\n  CalcImplicitH\n} from '../operations'\nimport { fromRGroupAttrs, fromUpdateIfThen } from './rgroup'\n\nimport { Action } from './action'\nimport { Vec2 } from 'domain/entities'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromPaste(restruct, pstruct, point, angle = 0) {\n  const xy0 = getStructCenter(pstruct)\n  const offset = Vec2.diff(point, xy0)\n\n  const action = new Action()\n\n  const aidMap = new Map()\n  const fridMap = new Map()\n\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n\n  pstruct.atoms.forEach((atom, aid) => {\n    if (!fridMap.has(atom.fragment)) {\n      fridMap.set(\n        atom.fragment,\n        (action.addOp(new FragmentAdd().perform(restruct)) as FragmentAdd).frid\n      )\n    }\n\n    const tmpAtom = Object.assign(atom.clone(), {\n      fragment: fridMap.get(atom.fragment)\n    })\n    const operation = new AtomAdd(\n      tmpAtom,\n      Vec2.diff(atom.pp, xy0).rotate(angle).add(point)\n    ).perform(restruct) as AtomAdd\n    action.addOp(operation)\n    aidMap.set(aid, operation.data.aid)\n\n    pasteItems.atoms.push(operation.data.aid)\n  })\n\n  pstruct.frags.forEach((frag, frid) => {\n    if (!frag) return\n    frag.stereoAtoms.forEach((aid) =>\n      action.addOp(\n        new FragmentAddStereoAtom(fridMap.get(frid), aidMap.get(aid)).perform(\n          restruct\n        )\n      )\n    )\n  })\n\n  pstruct.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      aidMap.get(bond.begin),\n      aidMap.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  pasteItems.atoms.forEach((aid) => {\n    action.addOp(new CalcImplicitH([aid]).perform(restruct))\n  })\n\n  pstruct.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => aidMap.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      sg.pp ? sg.pp.add(offset) : null,\n      sg.type === 'SUP' ? sg.data.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  pstruct.rxnArrows.forEach((rxnArrow) => {\n    action.addOp(\n      new RxnArrowAdd(\n        rxnArrow.pos.map((p) => p.add(offset)),\n        rxnArrow.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rxnPluses.forEach((plus) => {\n    action.addOp(new RxnPlusAdd(plus.pp.add(offset)).perform(restruct))\n  })\n\n  pstruct.simpleObjects.forEach((simpleObject) => {\n    action.addOp(\n      new SimpleObjectAdd(\n        simpleObject.pos.map((p) => p.add(offset)),\n        simpleObject.mode\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.texts.forEach((text) => {\n    action.addOp(\n      new TextCreate(\n        text.content,\n        text.position.add(offset),\n        text.pos.map((p) => p.add(offset))\n      ).perform(restruct)\n    )\n  })\n\n  pstruct.rgroups.forEach((rg, rgid) => {\n    rg.frags.forEach((__frag, frid) => {\n      action.addOp(\n        new RGroupFragment(rgid, fridMap.get(frid)).perform(restruct)\n      )\n    })\n    const ifThen = pstruct.rgroups.get(rgid).ifthen\n    const newRgId = pstruct.rgroups.get(ifThen) ? ifThen : 0\n    action\n      .mergeWith(fromRGroupAttrs(restruct, rgid, rg.getAttrs()))\n      .mergeWith(fromUpdateIfThen(restruct, newRgId, rg.ifthen))\n  })\n\n  action.operations.reverse()\n  return [action, pasteItems]\n}\n\nfunction getStructCenter(struct) {\n  // TODO: Review, function may not work sometimes\n  const onlyOneStructsSgroupId = struct.sgroups.keys().next().value\n  if (\n    struct.sgroups.size === 1 &&\n    !struct.sgroups.get(onlyOneStructsSgroupId).data.expanded\n  ) {\n    return struct.atoms.get(0).pp\n  }\n  if (struct.atoms.size > 0) {\n    let xmin = 1e50\n    let ymin = xmin\n    let xmax = -xmin\n    let ymax = -ymin\n\n    struct.atoms.forEach((atom) => {\n      xmin = Math.min(xmin, atom.pp.x)\n      ymin = Math.min(ymin, atom.pp.y)\n      xmax = Math.max(xmax, atom.pp.x)\n      ymax = Math.max(ymax, atom.pp.y)\n    })\n    return new Vec2((xmin + xmax) / 2, (ymin + ymax) / 2) // TODO: check\n  }\n  if (struct.rxnArrows.size > 0) return struct.rxnArrows.get(0).center()\n  if (struct.rxnPluses.size > 0) return struct.rxnPluses.get(0).pp\n  if (struct.simpleObjects.size > 0) return struct.simpleObjects.get(0).center()\n  if (struct.texts.size > 0) return struct.texts.get(0).position\n\n  return null\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  RxnArrowAdd,\n  RxnArrowDelete,\n  RxnArrowResize,\n  RxnPlusAdd,\n  RxnPlusDelete\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromArrowAddition(restruct, pos, mode) {\n  const action = new Action()\n  action.addOp(new RxnArrowAdd(pos, mode))\n  return action.perform(restruct)\n}\n\nexport function fromArrowResizing(restruct, id, d, current, anchor) {\n  const action = new Action()\n  action.addOp(new RxnArrowResize(id, d, current, anchor, false))\n  return action.perform(restruct)\n}\n\nexport function fromArrowDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnArrowDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromPlusAddition(restruct, pos) {\n  const action = new Action()\n  action.addOp(new RxnPlusAdd(pos).perform(restruct))\n  return action\n}\n\nexport function fromPlusDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new RxnPlusDelete(id))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AtomMove,\n  BondAttr,\n  EnhancedFlagMove,\n  RxnArrowMove,\n  RxnPlusMove,\n  SGroupDataMove\n} from '../operations'\nimport { Bond, Fragment, Pile, Vec2 } from 'domain/entities'\nimport { getRelSgroupsBySelection, structSelection } from './utils'\n\nimport { Action } from './action'\nimport utils from '../shared/utils'\n\nexport function fromFlip(restruct, selection, dir, center) {\n  // eslint-disable-line max-statements\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (!selection.atoms) {\n    return action.perform(restruct)\n  }\n\n  const fids = selection.atoms.reduce((acc, aid) => {\n    const atom = struct.atoms.get(aid)\n\n    if (!acc[atom.fragment]) {\n      acc[atom.fragment] = []\n    }\n\n    acc[atom.fragment].push(aid)\n    return acc\n  }, {})\n\n  const fidsNumberKeys = Object.keys(fids).map((frag) => parseInt(frag, 10))\n\n  const isFragFound = fidsNumberKeys.find((frag) => {\n    const allFragmentsOfStructure = struct.getFragmentIds(frag)\n    const selectedFragmentsOfStructure = new Pile(fids[frag])\n    const res = allFragmentsOfStructure.equals(selectedFragmentsOfStructure)\n    return !res\n  })\n\n  if (typeof isFragFound === 'number') {\n    return action // empty action\n  }\n\n  Object.keys(fids).forEach((frag) => {\n    const fragment = new Pile(fids[frag])\n\n    const bbox = struct.getCoordBoundingBox(fragment)\n    const calcCenter =\n      center ||\n      new Vec2((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2)\n\n    fragment.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      const d = flipItemByCenter(atom, calcCenter, dir)\n      action.addOp(new AtomMove(aid, d))\n    })\n\n    const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment))\n    sgroups.forEach((sg) => {\n      const d = flipItemByCenter(sg, calcCenter, dir)\n      action.addOp(new SGroupDataMove(sg.id, d))\n    })\n  })\n\n  if (selection.bonds) {\n    selection.bonds.forEach((bid) => {\n      const bond = struct.bonds.get(bid)\n\n      if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.UP) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.DOWN))\n        return\n      }\n\n      if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\n        action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.UP))\n      }\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nfunction flipItemByCenter(item, center, dir) {\n  const d = new Vec2()\n  /* eslint-disable no-mixed-operators */\n  if (dir === 'horizontal') {\n    d.x =\n      center.x > item.pp.x\n        ? 2 * (center.x - item.pp.x)\n        : -2 * (item.pp.x - center.x)\n  } else {\n    // 'vertical'\n    d.y =\n      center.y > item.pp.y\n        ? 2 * (center.y - item.pp.y)\n        : -2 * (item.pp.y - center.y)\n  }\n  /* eslint-enable no-mixed-operators */\n  return d\n}\n\nexport function fromRotate(restruct, selection, center, angle) {\n  // eslint-disable-line\n  const struct = restruct.molecule\n\n  const action = new Action()\n\n  if (!selection) {\n    selection = structSelection(struct)\n  }\n\n  if (selection.atoms) {\n    selection.atoms.forEach((aid) => {\n      const atom = struct.atoms.get(aid)\n      action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)))\n    })\n\n    if (!selection.sgroupData) {\n      const sgroups = getRelSgroupsBySelection(restruct, selection.atoms)\n\n      sgroups.forEach((sg) => {\n        action.addOp(\n          new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle))\n        )\n      })\n    }\n  }\n\n  if (selection.rxnArrows) {\n    selection.rxnArrows.forEach((aid) => {\n      const arrow = struct.rxnArrows.get(aid)\n      action.addOp(\n        new RxnArrowMove(aid, rotateDelta(arrow.center(), center, angle))\n      )\n    })\n  }\n\n  if (selection.rxnPluses) {\n    selection.rxnPluses.forEach((pid) => {\n      const plus = struct.rxnPluses.get(pid)\n      action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)))\n    })\n  }\n\n  if (selection.sgroupData) {\n    selection.sgroupData.forEach((did) => {\n      const data = struct.sgroups.get(did)\n      action.addOp(new SGroupDataMove(did, rotateDelta(data.pp, center, angle)))\n    })\n  }\n\n  const stereoFlags =\n    selection.enhancedFlags || Array.from(restruct.enhancedFlags.keys())\n  if (stereoFlags) {\n    stereoFlags.forEach((flagId) => {\n      const frId = flagId\n      const frag = restruct.molecule.frags.get(frId)\n      action.addOp(\n        new EnhancedFlagMove(\n          flagId,\n          rotateDelta(\n            frag.stereoFlagPosition ||\n              Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId),\n            center,\n            angle\n          )\n        )\n      )\n    })\n  }\n\n  return action.perform(restruct)\n}\n\nexport function fromBondAlign(restruct, bid, dir) {\n  const struct = restruct.molecule\n  const bond = struct.bonds.get(bid)\n  const begin = struct.atoms.get(bond.begin)\n  const end = struct.atoms.get(bond.end)\n\n  const center = begin.pp.add(end.pp).scaled(0.5)\n  let angle = utils.calcAngle(begin.pp, end.pp)\n  const atoms = Array.from(struct.getFragmentIds(begin.fragment))\n\n  // TODO: choose minimal angle\n  angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle\n\n  if (angle === 0 || Math.abs(angle) === Math.PI) {\n    return fromFlip(restruct, { atoms }, dir, center)\n  }\n\n  return fromRotate(restruct, { atoms }, center, angle)\n}\n\nfunction rotateDelta(v, center, angle) {\n  let v1 = v.sub(center)\n  v1 = v1.rotate(angle)\n  v1.add_(center) // eslint-disable-line no-underscore-dangle\n  return v1.sub(v)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  SimpleObjectAdd,\n  SimpleObjectDelete,\n  SimpleObjectResize\n} from '../operations'\n\nimport { Action } from './action'\n\nexport function fromSimpleObjectDeletion(restruct, id) {\n  const action = new Action()\n  action.addOp(new SimpleObjectDelete(id))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectAddition(restruct, pos, mode, toCircle) {\n  const action = new Action()\n  action.addOp(new SimpleObjectAdd(pos, mode, toCircle))\n  return action.perform(restruct)\n}\n\nexport function fromSimpleObjectResizing(\n  restruct,\n  id,\n  d,\n  current,\n  anchor,\n  toCircle\n) {\n  const action = new Action()\n  action.addOp(new SimpleObjectResize(id, d, current, anchor, false, toCircle))\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Atom, Vec2 } from 'domain/entities'\nimport { AtomAdd, BondAdd, CalcImplicitH } from '../operations'\nimport { atomForNewBond, atomGetAttr } from './utils'\nimport { fromAtomsAttrs, mergeSgroups } from './atom'\nimport { fromBondAddition, fromBondStereoUpdate, fromBondsAttrs } from './bond'\n\nimport { Action } from './action'\nimport closest from '../shared/closest'\nimport { fromAromaticTemplateOnBond } from './aromaticFusing'\nimport { fromPaste } from './paste'\nimport utils from '../shared/utils'\nimport { fromSgroupAddition } from './sgroup'\n\nexport function fromTemplateOnCanvas(restruct, template, pos, angle) {\n  const [action, pasteItems] = fromPaste(\n    restruct,\n    template.molecule,\n    pos,\n    angle\n  )\n\n  action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct))\n\n  return [action, pasteItems]\n}\n\nfunction extraBondAction(restruct, aid, angle) {\n  let action = new Action()\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n  let additionalAtom: any = null\n\n  if (angle === null) {\n    const middleAtom = atomForNewBond(restruct, aid)\n    const actionRes = fromBondAddition(\n      restruct,\n      { type: 1 },\n      aid,\n      middleAtom.atom,\n      middleAtom.pos.get_xy0()\n    )\n    action = actionRes[0]\n    action.operations.reverse()\n    additionalAtom = actionRes[2]\n  } else {\n    const operation = new AtomAdd(\n      { label: 'C', fragment: frid },\n      new Vec2(1, 0)\n        .rotate(angle)\n        .add(restruct.molecule.atoms.get(aid).pp)\n        .get_xy0()\n    ).perform(restruct) as AtomAdd\n\n    action.addOp(operation)\n    action.addOp(\n      new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct)\n    )\n\n    additionalAtom = operation.data.aid\n  }\n\n  return { action, aid1: additionalAtom }\n}\n\nexport function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {\n  let action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  let atom = struct.atoms.get(aid) // aid - the atom that was clicked on\n  let aid1 = aid // aid1 - the atom on the other end of the extra bond || aid\n\n  let delta: any = null\n\n  if (extraBond) {\n    // create extra bond after click on atom\n    const extraRes = extraBondAction(restruct, aid, angle)\n    action = extraRes.action\n    aid1 = extraRes.aid1\n\n    atom = struct.atoms.get(aid1)\n    delta = utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0\n  } else {\n    if (angle === null) {\n      angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos)\n    }\n    delta = angle - template.angle0\n  }\n\n  const map = new Map()\n  const xy0 = tmpl.atoms.get(template.aid).pp\n  const frid = atomGetAttr(restruct, aid, 'fragment')\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((a, id) => {\n    const attrs: any = Atom.getAttrHash(a)\n    attrs.fragment = frid\n\n    if (id === template.aid) {\n      action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true))\n      map.set(id, aid1)\n      pasteItems.atoms.push(aid1)\n    } else {\n      const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp)\n\n      const operation = new AtomAdd(attrs, v.get_xy0()).perform(\n        restruct\n      ) as AtomAdd\n      action.addOp(operation)\n      map.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, aid)\n\n  tmpl.bonds.forEach((bond) => {\n    const operation = new BondAdd(\n      map.get(bond.begin),\n      map.get(bond.end),\n      bond\n    ).perform(restruct) as BondAdd\n    action.addOp(operation)\n\n    pasteItems.bonds.push(operation.data.bid)\n  })\n\n  tmpl.sgroups.forEach((sg) => {\n    const newsgid = restruct.molecule.sgroups.newId()\n    const sgAtoms = sg.atoms.map((aid) => map.get(aid))\n    const sgAction = fromSgroupAddition(\n      restruct,\n      sg.type,\n      sgAtoms,\n      sg.data,\n      newsgid,\n      atom.pp,\n      sg.type === 'SUP' ? sg.expanded : null,\n      sg.data.name\n    )\n    sgAction.operations.reverse().forEach((oper) => {\n      action.addOp(oper)\n    })\n  })\n\n  action.operations.reverse()\n\n  action.addOp(new CalcImplicitH([...pasteItems.atoms, aid]).perform(restruct))\n  action.mergeWith(\n    fromBondStereoUpdate(\n      restruct,\n      restruct.molecule.bonds.get(pasteItems.bonds[0])\n    )\n  )\n\n  return [action, pasteItems]\n}\n\nexport function fromTemplateOnBondAction(\n  restruct,\n  template,\n  bid,\n  events,\n  flip,\n  force\n) {\n  if (!force) return fromTemplateOnBond(restruct, template, bid, flip)\n\n  const simpleFusing = (restruct, template, bid) =>\n    fromTemplateOnBond(restruct, template, bid, flip) // eslint-disable-line\n  /* aromatic merge (Promise) */\n  return fromAromaticTemplateOnBond(\n    restruct,\n    template,\n    bid,\n    events,\n    simpleFusing\n  )\n}\n\nfunction fromTemplateOnBond(restruct, template, bid, flip) {\n  // TODO: refactor function !!\n  const action = new Action()\n\n  const tmpl = template.molecule\n  const struct = restruct.molecule\n\n  const bond = struct.bonds.get(bid)\n  const tmplBond = tmpl.bonds.get(template.bid)\n\n  const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin)\n\n  const atomsMap = new Map([\n    [tmplBond.begin, flip ? bond.end : bond.begin],\n    [tmplBond.end, flip ? bond.begin : bond.end]\n  ])\n\n  // calc angle\n  const bondAtoms = {\n    begin: flip ? tmplBond.end : tmplBond.begin,\n    end: flip ? tmplBond.begin : tmplBond.end\n  }\n  const { angle, scale } = utils.mergeBondsParams(struct, bond, tmpl, bondAtoms)\n\n  const frid = struct.getBondFragment(bid)\n\n  /* For merge */\n  const pasteItems: any = {\n    // only atoms and bonds now\n    atoms: [],\n    bonds: []\n  }\n  /* ----- */\n\n  tmpl.atoms.forEach((atom, id) => {\n    const attrs: any = Atom.getAttrHash(atom)\n    attrs.fragment = frid\n    if (id === tmplBond.begin || id === tmplBond.end) {\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      return\n    }\n\n    const v = Vec2.diff(atom.pp, tmplBegin.pp)\n      .rotate(angle)\n      .scaled(scale)\n      .add(struct.atoms.get(bond.begin).pp)\n    const mergeA = closest.atom(restruct, v, null, 0.1)\n\n    if (mergeA === null) {\n      const operation = new AtomAdd(attrs, v).perform(restruct) as AtomAdd\n      action.addOp(operation)\n      atomsMap.set(id, operation.data.aid)\n      pasteItems.atoms.push(operation.data.aid)\n    } else {\n      atomsMap.set(id, mergeA.id)\n\n      action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true))\n      // TODO [RB] need to merge fragments?\n    }\n  })\n  mergeSgroups(action, restruct, pasteItems.atoms, bond.begin)\n\n  tmpl.bonds.forEach((tBond) => {\n    const existId = struct.findBondId(\n      atomsMap.get(tBond.begin),\n      atomsMap.get(tBond.end)\n    )\n    if (existId === null) {\n      const operation = new BondAdd(\n        atomsMap.get(tBond.begin),\n        atomsMap.get(tBond.end),\n        tBond\n      ).perform(restruct) as BondAdd\n      action.addOp(operation)\n\n      pasteItems.bonds.push(operation.data.bid)\n    } else {\n      const commonBond = bond.type > tmplBond.type ? bond : tmplBond\n      action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true))\n    }\n  })\n\n  if (pasteItems.atoms.length) {\n    action.addOp(\n      new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(\n        restruct\n      )\n    )\n  }\n\n  if (pasteItems.bonds.length) {\n    action.mergeWith(\n      fromBondStereoUpdate(\n        restruct,\n        restruct.molecule.bonds.get(pasteItems.bonds[0])\n      )\n    )\n  }\n\n  action.operations.reverse()\n\n  return [action, pasteItems]\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { TextCreate, TextDelete, TextUpdate } from '../operations'\n\nimport { Action } from './action'\nimport { ReStruct } from '../../render'\nimport { Vec2 } from 'domain/entities'\n\nexport function fromTextCreation(\n  restruct: ReStruct,\n  content: string,\n  position: Vec2,\n  pos: Array<Vec2>\n) {\n  const action = new Action()\n  action.addOp(new TextCreate(content, position, pos))\n  return action.perform(restruct)\n}\n\nexport function fromTextUpdating(\n  restruct: ReStruct,\n  id: number,\n  content: string\n) {\n  const action = new Action()\n  action.addOp(new TextUpdate(id, content))\n  return action.perform(restruct)\n}\n\nexport function fromTextDeletion(restruct: ReStruct, id: number) {\n  const action = new Action()\n\n  action.addOp(new TextDelete(id))\n\n  return action.perform(restruct)\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { Highlight } from 'domain/entities'\nimport { ReStruct } from '../../render'\n\nimport { BaseOperation } from './base'\nimport { OperationType } from './OperationType'\n\ntype Data = {\n  atoms: Array<number>\n  bonds: Array<number>\n  color: string\n  highlightId?: number\n}\n\nexport class HighlightAdd extends BaseOperation {\n  data: Data\n\n  constructor(\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string,\n    highlightId?: number\n  ) {\n    super(OperationType.ADD_HIGHLIGHT)\n    this.data = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.data\n\n    if (!color) {\n      return\n    }\n\n    const struct = restruct.molecule\n    const highlight = new Highlight({\n      atoms,\n      bonds,\n      color\n    })\n\n    if (typeof this.data.highlightId !== 'number') {\n      this.data.highlightId = struct.highlights.add(highlight)\n    } else {\n      struct.highlights.set(this.data.highlightId, highlight)\n    }\n\n    notifyChanged(restruct, atoms, bonds)\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightDelete(highlightId, atoms, bonds, color)\n    return inverted\n  }\n}\n\nexport class HighlightDelete extends BaseOperation {\n  data: Data\n\n  constructor(\n    highlightId?: number,\n    atoms?: Array<number>,\n    bonds?: Array<number>,\n    color?: string\n  ) {\n    super(OperationType.REMOVE_HIGHLIGHT, 5)\n    this.data = {\n      highlightId: highlightId,\n      atoms: atoms || [],\n      bonds: bonds || [],\n      color: color || 'white'\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    if (typeof this.data.highlightId === 'number') {\n      const struct = restruct.molecule\n\n      const highlightToRemove = struct.highlights.get(this.data.highlightId)\n      if (typeof highlightToRemove === 'undefined') {\n        return\n      }\n\n      const { atoms, bonds, color } = highlightToRemove\n\n      this.data.atoms = atoms\n      this.data.bonds = bonds\n      this.data.color = color\n\n      struct.highlights.delete(this.data.highlightId)\n      notifyChanged(restruct, atoms, bonds)\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color, highlightId } = this.data\n    const inverted = new HighlightAdd(atoms, bonds, color, highlightId)\n    inverted.data = this.data\n    return inverted\n  }\n}\n\nexport class HighlightUpdate extends BaseOperation {\n  // making sure highlightId is not optional\n  newData: Data & { highlightId: number }\n  oldData: Data & { highlightId: number }\n\n  constructor(\n    highlightId: number,\n    atoms: Array<number>,\n    bonds: Array<number>,\n    color: string\n  ) {\n    super(OperationType.UPDATE_HIGHLIGHT)\n    this.newData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n\n    // pre-filling with new data. Upon execution this will be replaced\n    this.oldData = {\n      atoms: atoms,\n      bonds: bonds,\n      color: color,\n      highlightId: highlightId\n    }\n  }\n\n  execute(restruct: ReStruct) {\n    const { atoms, bonds, color } = this.newData\n    if (!color) {\n      return\n    }\n\n    const highlightId = this.newData.highlightId\n    const struct = restruct.molecule\n\n    const highlightToUpdate = struct.highlights.get(highlightId)\n\n    if (highlightToUpdate) {\n      // saving data of existing highlight\n      const {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor\n      } = highlightToUpdate\n      this.oldData = {\n        atoms: oldAtoms,\n        bonds: oldBonds,\n        color: oldColor,\n        highlightId\n      }\n\n      // creating new highlight with new data\n      const updatedHighlight = new Highlight({\n        atoms,\n        bonds,\n        color\n      })\n\n      // setting the new highlight\n      struct.highlights.set(this.newData.highlightId, updatedHighlight)\n\n      // notify atoms from both collections that repaint is needed\n      notifyChanged(restruct, [...atoms, ...oldAtoms], [...bonds, ...oldBonds])\n    }\n  }\n\n  invert() {\n    const { atoms, bonds, color } = this.oldData\n    const inverted = new HighlightUpdate(\n      this.newData.highlightId,\n      atoms,\n      bonds,\n      color\n    )\n    return inverted\n  }\n}\n\nfunction notifyChanged(restruct: ReStruct, atoms?: number[], bonds?: number[]) {\n  // Notifying ReStruct that repaint needed\n  const reAtoms = restruct.atoms\n  const reBonds = restruct.bonds\n\n  if (atoms) {\n    atoms.forEach((atomId) => {\n      if (typeof reAtoms.get(atomId) !== 'undefined') {\n        restruct.markAtom(atomId, 1)\n      }\n    })\n  }\n\n  if (bonds) {\n    bonds.forEach((bondId) => {\n      if (typeof reBonds.get(bondId) !== 'undefined') {\n        restruct.markBond(bondId, 1)\n      }\n    })\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport { ReStruct } from '../../render'\n\nimport { HighlightAdd, HighlightDelete } from '../operations/highlight'\n\nimport { Action } from './action'\n\ntype HighlightType = {\n  atoms: number[]\n  bonds: number[]\n  color: string\n}\n\nexport function fromHighlightCreate(\n  restruct: ReStruct,\n  highlights: HighlightType[]\n): Action {\n  const action = new Action()\n\n  highlights.forEach((highlight) => {\n    const { atoms, bonds, color } = highlight\n\n    action.addOp(new HighlightAdd(atoms, bonds, color))\n  })\n  return action.perform(restruct)\n}\n\nexport function fromHighlightClear(restruct: ReStruct): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  highlights.forEach((_, key) => {\n    action.addOp(new HighlightDelete(key))\n  })\n\n  return action.perform(restruct)\n}\n\n/*\n// Update highlight by placing new one on the given id\nexport function fromHighlightUpdate(\n  highlightId: number,\n  restruct: ReStruct,\n  atoms: number[],\n  bonds: number[],\n  color: string\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n\n  const selectedHighlight = highlights.get(highlightId)\n  if (!selectedHighlight) {\n    return action\n  }\n\n  const updateOperation = new HighlightUpdate(highlightId, atoms, bonds, color)\n  action.addOp(updateOperation)\n\n  return action.perform(restruct)\n}\n*/\n\n/*\n// Delete single highlight by id\nexport function fromHighlightDelete(\n  restruct: ReStruct,\n  highlightId: number\n): Action {\n  const action = new Action()\n\n  const highlights = restruct.molecule.highlights\n  if (highlights.has(highlightId)) {\n    action.addOp(new HighlightDelete(highlightId))\n\n    return action.perform(restruct)\n  }\n  return action\n}\n*/\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nexport const SgContexts = {\n  Fragment: 'Fragment',\n  Multifragment: 'Multifragment',\n  Bond: 'Bond',\n  Atom: 'Atom',\n  Group: 'Group'\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport utils from './shared/utils'\n\n// TODO: delete it\nexport const fracAngle = utils.fracAngle\nexport * from './operations'\nexport * from './actions'\nexport * from './shared/constants'\nexport * from './editor.types'\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  AutomapMode,\n  CalculateProps,\n  CalculateResult,\n  CheckResult,\n  CheckTypes,\n  ChemicalMimeType,\n  ConvertResult,\n  InfoResult,\n  OutputFormatType,\n  StructService\n} from 'domain/services'\nimport { StructOrString } from 'application/indigo.types'\nimport { KetSerializer } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\n\nconst defaultTypes: Array<CheckTypes> = [\n  'radicals',\n  'pseudoatoms',\n  'stereo',\n  'query',\n  'overlapping_atoms',\n  'overlapping_bonds',\n  'rgroups',\n  'chiral',\n  '3d'\n]\nconst defaultCalcProps: Array<CalculateProps> = [\n  'molecular-weight',\n  'most-abundant-mass',\n  'monoisotopic-mass',\n  'gross',\n  'mass-composition'\n]\n\ntype ConvertOptions = {\n  outputFormat?: ChemicalMimeType\n}\ntype AutomapOptions = {\n  mode?: AutomapMode\n}\ntype CheckOptions = {\n  types?: Array<CheckTypes>\n}\ntype CalculateOptions = {\n  properties?: Array<CalculateProps>\n}\ntype RecognizeOptions = {\n  version?: string\n}\ntype GenerateImageOptions = {\n  outputFormat?: OutputFormatType\n  backgroundColor?: string\n}\n\nfunction convertStructToString(\n  struct: StructOrString,\n  serializer: KetSerializer\n): string {\n  if (typeof struct !== 'string') {\n    const aidMap = new Map()\n    const result = struct.clone(null, null, false, aidMap)\n\n    return serializer.serialize(result)\n  }\n\n  return struct\n}\n\nexport class Indigo {\n  #structService: StructService\n  #ketSerializer: KetSerializer\n\n  constructor(structService) {\n    this.#structService = structService\n    this.#ketSerializer = new KetSerializer()\n  }\n\n  info(): Promise<InfoResult> {\n    return this.#structService.info()\n  }\n\n  convert(\n    struct: StructOrString,\n    options?: ConvertOptions\n  ): Promise<ConvertResult> {\n    const outputFormat = options?.outputFormat || ChemicalMimeType.KET\n\n    return this.#structService.convert({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      output_format: outputFormat\n    })\n  }\n\n  layout(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .layout({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  clean(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .clean({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  aromatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .aromatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  dearomatize(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .dearomatize({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  calculateCip(struct: StructOrString): Promise<Struct> {\n    return this.#structService\n      .calculateCip({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  automap(struct: StructOrString, options?: AutomapOptions): Promise<Struct> {\n    const mode = options?.mode || 'discard'\n\n    return this.#structService\n      .automap({\n        struct: convertStructToString(struct, this.#ketSerializer),\n        output_format: ChemicalMimeType.KET,\n        mode\n      })\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  check(struct: StructOrString, options?: CheckOptions): Promise<CheckResult> {\n    const types = options?.types || defaultTypes\n\n    return this.#structService.check({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      types\n    })\n  }\n\n  calculate(\n    struct: StructOrString,\n    options?: CalculateOptions\n  ): Promise<CalculateResult> {\n    const properties = options?.properties || defaultCalcProps\n\n    return this.#structService.calculate({\n      struct: convertStructToString(struct, this.#ketSerializer),\n      properties\n    })\n  }\n\n  recognize(image: Blob, options?: RecognizeOptions): Promise<Struct> {\n    const version = options?.version || ''\n\n    return this.#structService\n      .recognize(image, version)\n      .then((data) => this.#ketSerializer.deserialize(data.struct))\n  }\n\n  generateImageAsBase64(\n    struct: StructOrString,\n    options?: GenerateImageOptions\n  ): Promise<string> {\n    const outputFormat = options?.outputFormat || 'png'\n    const backgroundColor = options?.backgroundColor || ''\n\n    return this.#structService.generateImageAsBase64(\n      convertStructToString(struct, this.#ketSerializer),\n      {\n        outputFormat,\n        backgroundColor\n      }\n    )\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  FormatterFactory,\n  SupportedFormat,\n  identifyStructFormat\n} from './formatters'\nimport { GenerateImageOptions, StructService } from 'domain/services'\n\nimport { Editor } from './editor'\nimport { Indigo } from 'application/indigo'\nimport { KetSerializer, MolfileFormat } from 'domain/serializers'\nimport { Struct } from 'domain/entities'\nimport assert from 'assert'\nimport { EventEmitter } from 'events'\nimport { runAsyncAction } from 'utilities'\n\nasync function prepareStructToRender(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n): Promise<Struct> {\n  const struct: Struct = await parseStruct(\n    structStr,\n    structService,\n    ketcherInstance\n  )\n  struct.initHalfBonds()\n  struct.initNeighbors()\n  struct.setImplicitHydrogen()\n  struct.markFragments()\n\n  return struct\n}\n\nfunction parseStruct(\n  structStr: string,\n  structService: StructService,\n  ketcherInstance: Ketcher\n) {\n  const format = identifyStructFormat(structStr)\n  const factory = new FormatterFactory(structService)\n  const options = ketcherInstance.editor.options()\n\n  const service = factory.create(format, {\n    'dearomatize-on-load': options['dearomatize-on-load']\n  })\n  return service.getStructureFromStringAsync(structStr)\n}\n\nfunction getStructure(\n  structureFormat = SupportedFormat.rxn,\n  formatterFactory: FormatterFactory,\n  struct: Struct\n): Promise<string> {\n  const formatter = formatterFactory.create(structureFormat)\n  return formatter.getStructureFromStructAsync(struct)\n}\n\nexport class Ketcher {\n  #structService: StructService\n  #formatterFactory: FormatterFactory\n  #editor: Editor\n  #indigo: Indigo\n  #eventBus: EventEmitter\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  get eventBus(): EventEmitter {\n    return this.#eventBus\n  }\n\n  constructor(\n    editor: Editor,\n    structService: StructService,\n    formatterFactory: FormatterFactory\n  ) {\n    assert(editor != null)\n    assert(structService != null)\n    assert(formatterFactory != null)\n\n    this.#editor = editor\n    this.#structService = structService\n    this.#formatterFactory = formatterFactory\n    this.#indigo = new Indigo(this.#structService)\n    this.#eventBus = new EventEmitter()\n  }\n\n  get indigo() {\n    return this.#indigo\n  }\n\n  // TEMP.: getting only dearomatize-on-load setting\n  get settings() {\n    const options = this.#editor.options()\n\n    if ('dearomatize-on-load' in options) {\n      return {\n        'general.dearomatize-on-load': options['dearomatize-on-load']\n      }\n    }\n    throw new Error('dearomatize-on-load option is not provided!')\n  }\n\n  // TODO: create optoions type\n  setSettings(settings: Record<string, string>) {\n    if (!settings) {\n      throw new Error('Please provide settings')\n    }\n\n    // eslint-disable-next-line prefer-const\n    let options = {}\n    if ('general.dearomatize-on-load' in settings) {\n      options['dearomatize-on-load'] = settings['general.dearomatize-on-load']\n    }\n    return this.#editor.setOptions(JSON.stringify(options))\n  }\n\n  getSmiles(isExtended = false): Promise<string> {\n    const format = isExtended\n      ? SupportedFormat.smilesExt\n      : SupportedFormat.smiles\n    return getStructure(format, this.#formatterFactory, this.editor.struct())\n  }\n\n  async getMolfile(molfileFormat?: MolfileFormat): Promise<string> {\n    if (this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.MOL due to reaction arrrows.'\n      )\n    }\n\n    const formatPassed =\n      molfileFormat === 'v3000' ? SupportedFormat.molV3000 : SupportedFormat.mol\n    const format = molfileFormat ? formatPassed : SupportedFormat.molAuto\n\n    const molfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return molfile\n  }\n\n  async getRxn(molfileFormat: MolfileFormat = 'v2000'): Promise<string> {\n    if (!this.containsReaction()) {\n      throw Error(\n        'The structure cannot be saved as *.RXN: there is no reaction arrows.'\n      )\n    }\n    const format =\n      molfileFormat === 'v3000' ? SupportedFormat.rxnV3000 : SupportedFormat.rxn\n    const rxnfile = await getStructure(\n      format,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return rxnfile\n  }\n\n  getKet(): Promise<string> {\n    return getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getSmarts(): Promise<string> {\n    return getStructure(\n      SupportedFormat.smarts,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getCml(): Promise<string> {\n    return getStructure(\n      SupportedFormat.cml,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  getInchi(withAuxInfo = false): Promise<string> {\n    return getStructure(\n      withAuxInfo ? SupportedFormat.inChIAuxInfo : SupportedFormat.inChI,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n  }\n\n  async generateInchIKey(): Promise<string> {\n    const struct: string = await getStructure(\n      SupportedFormat.ket,\n      this.#formatterFactory,\n      this.#editor.struct()\n    )\n\n    return this.#structService.generateInchIKey(struct)\n  }\n\n  containsReaction(): boolean {\n    return this.editor.struct().hasRxnArrow()\n  }\n\n  async setMolecule(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.struct(struct)\n    }, this.eventBus)\n  }\n\n  async addFragment(structStr: string): Promise<void> {\n    runAsyncAction<void>(async () => {\n      assert(typeof structStr === 'string')\n\n      const struct: Struct = await prepareStructToRender(\n        structStr,\n        this.#structService,\n        this\n      )\n\n      this.#editor.structToAddFragment(struct)\n    }, this.eventBus)\n  }\n\n  async layout(): Promise<void> {\n    runAsyncAction<void>(async () => {\n      const struct = await this.#indigo.layout(this.#editor.struct())\n      const ketSerializer = new KetSerializer()\n      this.setMolecule(ketSerializer.serialize(struct))\n    }, this.eventBus)\n  }\n\n  recognize(image: Blob, version?: string): Promise<Struct> {\n    return this.#indigo.recognize(image, { version: version })\n  }\n\n  async generateImage(\n    data: string,\n    options: GenerateImageOptions = { outputFormat: 'png' }\n  ): Promise<Blob> {\n    let meta = ''\n\n    switch (options.outputFormat) {\n      case 'svg':\n        meta = 'image/svg+xml'\n        break\n\n      case 'png':\n      default:\n        meta = 'image/png'\n        options.outputFormat = 'png'\n    }\n\n    const base64 = await this.#structService.generateImageAsBase64(\n      data,\n      options\n    )\n    const byteCharacters = atob(base64)\n    const byteNumbers = new Array(byteCharacters.length)\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i)\n    }\n    const byteArray = new Uint8Array(byteNumbers)\n    const blob = new Blob([byteArray], { type: meta })\n    return blob\n  }\n}\n","/****************************************************************************\n * Copyright 2021 EPAM Systems\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n ***************************************************************************/\n\nimport {\n  StructService,\n  StructServiceOptions,\n  StructServiceProvider\n} from 'domain/services'\n\nimport { Editor } from 'application/editor'\nimport { FormatterFactory } from 'application/formatters'\nimport { Ketcher } from './ketcher'\nimport assert from 'assert'\n\nconst DefaultStructServiceOptions = {\n  'smart-layout': true,\n  'ignore-stereochemistry-errors': true,\n  'mass-skip-error-on-pseudoatoms': false,\n  'gross-formula-add-rsites': true,\n  'aromatize-skip-superatoms': true,\n  'dearomatize-on-load': false\n}\n\nexport class KetcherBuilder {\n  #structServiceProvider?: StructServiceProvider\n\n  withStructServiceProvider(\n    structServiceProvider: StructServiceProvider\n  ): KetcherBuilder {\n    this.#structServiceProvider = structServiceProvider\n    return this\n  }\n\n  build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher {\n    assert(editor != null)\n    assert(this.#structServiceProvider != null)\n\n    const mergedServiceOptions: StructServiceOptions = {\n      ...DefaultStructServiceOptions,\n      ...serviceOptions\n    }\n    const structService: StructService =\n      this.#structServiceProvider!.createStructService(mergedServiceOptions)\n    const ketcher = new Ketcher(\n      editor,\n      structService,\n      new FormatterFactory(structService)\n    )\n    ketcher[this.#structServiceProvider.mode] = true\n\n    return ketcher\n  }\n}\n"],"names":["ElementColor","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","elementsArray","number","label","period","group","title","state","origin","type","mass","leftH","elementsMap","reduce","acc","element","set","Map","Elements","get","key","filter","predicate","Generics","itemSets","displayName","items","description","subGroups","AtomList","params","notList","ids","labels","_createForOfIteratorHelper","id","currenElement","push","labelList","join","atomList","sort","toString","Vec2","args","length","x","y","z","arguments","parseFloat","Error","Math","sqrt","v","s","y1","f","scaled","l","toFixed","assert","max","min","ceil","floor","angle","sin","cos","rotateSC","atan2","a","b","diff","v1","v2","cross","dot","i","addScaled","f1","f2","lc2","Pile","_createSuper","item","setB","isSuperset","subset","has","expression","Array","from","union","add","Set","getValueOrDefault","value","defaultValue","isCorrectPseudo","getPseudo","radicalElectrons","radical","Atom","PATTERN","RADICAL","DOUPLET","SINGLET","TRIPLET","StereoLabel","attributes","fragment","alias","attrlist","isotope","charge","rglabel","attpnt","explicitValence","valence","implicitH","pp","sgs","ringBondCount","substitutionCount","unsaturatedAtom","hCount","aam","invRet","exactChangeFlag","rxnFragmentType","stereoLabel","stereoParity","neighbors","badConn","Object","defineProperty","enumerable","fidMap","ret","conn","isQuery","groupno","rad","hyd","absCharge","abs","atom","attrs","attr","NONE","STEREO_PARITY","ODD","EVEN","EITHER","Bond","begin","end","xxx","stereo","STEREO","topology","TOPOLOGY","reactingCenterStatus","len","sb","sa","center","struct","p1","atoms","p2","sub","normalized","aidMap","cp","bond","TYPE","SINGLE","DOUBLE","TRIPLE","AROMATIC","SINGLE_OR_DOUBLE","SINGLE_OR_AROMATIC","DOUBLE_OR_AROMATIC","ANY","DATIVE","HYDROGEN","UP","DOWN","CIS_TRANS","RING","CHAIN","REACTING_CENTER","NOT_CENTER","UNMARKED","CENTER","UNCHANGED","MADE_OR_BROKEN","ORDER_CHANGED","MADE_OR_BROKEN_AND_CHANGED","StereoFlag","calcStereoFlag","stereoAids","undefined","filteredStereoAtoms","map","aid","hasAnotherLabel","some","stereoFlag","Mixed","match","Abs","And","Or","Fragment","stereoAtoms","stereoFlagPosition","_classPrivateFieldInitSpec","fr","frId","isAdd","includes","bonds","values","atomId","fragmentId","getFragment","bb","getCoordBoundingBox","scaled2obj","options","scale","obj2scaled","Scale","isCorrectStereoCenter","beginNeighs","endNeighs","beginAtom","EndAtomNeigh","NaN","Number","atomGetNeighbors","StereoValidator","FunctionalGroupsProvider","functionalGroupsList","list","instance","SaltsAndSolventsProvider","saltsAndSolventsList","Box2Abs","p0","lp","rb","p","ext","d","centre","relBox","width","height","b1","b2","c","dc","dd","da","db","SGroupBracketParams","w","h","n","SGroup","bracketBox","bracketDir","areas","hover","hovering","selected","selectionPlate","patoms","xBonds","neiAtoms","data","mul","connectivity","name","subscript","expanded","attached","absolute","showUnits","nCharsToDisplay","tagChar","daspPos","fieldType","fieldName","fieldValue","units","query","queryOp","keys","forEach","oldValue","offset","sum","topLeftPoint","context","contentBoxes","contentBB","direction","pos","bba","extend","bbb","include","sgroups","size","descriptorIntersects","sAtom","sAtomPP","getMassCentre","sgroup","moleculeName","saltsAndSolventsProvider","getInstance","saltsAndSolvents","getSaltsAndSolventsList","abbreviation","sgroupsOnCanvas","onlySaltsOrSolvents","isSaltOrSolvent","atomIdInSaltOrSolvent","bondId","bondIdInSaltOrSolvent","newAtoms","j","_mol","sg","atomMap","removeNegative","filterAtoms","field","elem","allAtoms","splice","mol","parentAtomSet","crossBonds","bid","sGroup","crossBondsPerAtom","flat","getCenter","braketBox","vext","atomSet","brackets","crossBondsPerAtomValues","bracketWidth","sz","cl","cr","bracketHeight","negated","cl0","cr0","dr","dl","getDir","a0","_atom","getAtoms","indexOf","inBonds","xAtom1","xAtom2","crossBond","bond1","bond2","tailAtom","amap","aid2","newBond","newCrossBond","xBond2","sGroupForest","getPathToRoot","reverse","sgid","atomAddToSGroup","SUP","MUL","SRU","MON","MER","COP","CRO","MOD","GRA","COM","MIX","FOR","DAT","GEN","sgBottomRightPoint","bottomRightPoint","segmentIntersection","FunctionalGroup","provider","functionalGroups","getFunctionalGroupsList","searchName","foundGroup","find","fg","relatedSGroup","molecule","getBonds","relatedSGroupId","functionalGroup","isAttachmentBond","isAtomInSameFunctionalGroup","otherAtomId","isFunctionalGroup","isSGroupFound","isBondBeginInSGroupAndBondEndOutside","isBondEndInSGroupAndBondBeginOutside","isAttachedSGroup","sgroupsFromReStruct","contractedFunctionalGroups","isContractedFunctionalGroup","contractedFunctionalGroupsAtoms","sgroupId","isExpanded","HalfBond","dir","norm","ang","loop","contra","next","leftSin","leftCos","leftNeighbor","rightSin","rightCos","rightNeighbor","Loop","hbs","isConvex","dblBonds","aromatic","convex","hb","halfBonds","RGroup","atrributes","frags","resth","range","ifthen","index","fid","rgroups","frid","_rgid","rgroup","RxnArrowMode","RxnArrow","currentP","mode","defaultHeight","isElliptical","arrow","EllipticalArcFilledBow","EllipticalArcFilledTriangle","EllipticalArcOpenHalfAngle","EllipticalArcOpenAngle","RxnPlus","SGroupForest","parent","children","atomSets","order","queue","shift","newId","isStrictSuperset","isSubset","equals","parents","childs","findIndex","childId","path","guess","getAtomSetRelations","resetParentLink","parentId","childIndex","checkOverlapping","res","sid","sgAtoms","SimpleObjectMode","SimpleObject","line","rectangle","Pool","nextId","entries","arrayAddIfMissing","array","Struct","loops","isReaction","rxnArrows","rxnPluses","simpleObjects","texts","highlights","_aid","hasRxnProps","_bid","hasRxnArrow","hasRxnPluses","bondSet","dropRxnSymbols","simpleObjectsSet","textsSet","mergeInto","rg","_fnum","clone","getFragmentIds","keepAllRGroups","fidMask","_frag","rgroupsIds","rgid","keepGroup","newfid","oldfid","bidMap","insert","soid","initHalfBonds","initNeighbors","updateHalfBonds","sortNeighbors","findLoops","addAtom","a1","a2","hb1","hb2","halfBondId","halfBond","startCoords","endCoords","coordsDifference","dist","turnLeft","oxAngle","clear","bondInitHalfBonds","hbid","left","hbl","ir","il","setHbNext","halfBondSetAngle","nei","nei2","nextNei","atomSortNeighbors","halfBondUpdate","atomUpdateHalfBonds","remove","position","vec","global","totalLength","cnt","bld","getBondLengthData","totalDist","minDist","k","firstaid","pop","neiId","discardExistingFragments","addedAtoms","components","component","findConnectedComponent","idSet","frag","updateStereoAtom","findConnectedComponents","comp","markFragment","isReactionStruct","avg","getAvgBondLength","getAvgClosestAtomDistance","hbi","ai","bi","hbj","aj","bj","subloops","continueFlag","atomToHalfBond","aid1","subloop","slice","hbid1","hbid2","hba","hbb","every","loopArr","halfBondAngle","totalAngle","PI","hbida","hbidb","newLoops","bondsToMark","hbIdNext","hbId","partitionLoop","loopId","loopIsInner","loopHasSelfIntersections","loopIsConvex","calcConn","isAromatic","correctConn","hasImplicitH","calcValenceMinusHyd","calcValence","calcImplicitHydrogen","connectedComponents","barriers","arrowPos","reactants","products","defineRxnFragmentTypeForAtomset","atomset","arrowpos","TextCommand","preparePositions","positions","Text","content","coords","Highlight","color","customizer","clonedValue","cloneDeep","getNodeWithInvertedYCoord","node","cloneDeepWith","arrowToKet","arrowNode","plusToKet","plusNode","coord","location","prop","ifDef","target","isArray","tfx","parsedValue","KetcherAsyncEvents","runAsyncAction","action","eventEmitter","emit","LOADING","SUCCESS","FAILURE","headerToKet","header","fromRlabel","rgi","val","moleculeToKet","body","rglabelToKet","atomListToKet","atomToKet","bondToKet","sgroupToKet","_objectSpread","source","result","stereoCare","weight","parseInt","refsToRGroups","rgnumber","toUpperCase","toRlabel","moleculeToStruct","ketItem","rglabelToStruct","atomListToStruct","atomToStruct","bondToStruct","sgroupToStruct","markFragments","bindSGroupsToFunctionalGroups","attachmentPoints","Boolean","mapping","$refs","el","elements","toLowerCase","placement","display","fieldData","prepareStructForKet","ketNodes","rgFrags","fragsAtoms","getFragmentCenter","fragAtoms","ketNode","filteredSGroups","filteredSGroupsMap","rgroupToKet","rlogic","rgroupLogicToKet","rglogic","rgroupToStruct","rgroupLogicToStruct","_value","rxnToStruct","simpleObjectToKet","simpleObjectNode","simpleObjectToStruct","object","circleToEllipse","radius","pos0","ellipse","textToKet","textNode","textToStruct","validate","ket","ajv","Ajv","compile","schema","parseNode","currentStruct","KetSerializer","resultingStruct","JSON","parse","nodes","root","$ref","moleculeId","stringify","paddedNum","precision","numStr","replace","padStart","parseDecimalInt","str","isNaN","partitionLine","parts","withspace","partitionLineFixed","itemLength","fmtInfo","bondTypeMap","bondStereoMap","v30bondStereoMap","bondTopologyMap","countsLinePartition","atomLinePartition","bondLinePartition","atomListHeaderPartition","atomListHeaderLength","atomListHeaderItemLength","chargeMap","valenceMap","implicitHydrogenMap","v30atomPropMap","CHG","RAD","MASS","VAL","HCOUNT","INVRET","SUBST","UNSAT","RBCNT","rxnItemsPartition","FRAGMENT","REACTANT","PRODUCT","AGENT","rxnMerge","mols","nReactants","nProducts","nAgents","shouldReactionRelayout","bbReact","bbAgent","bbProd","molReact","molAgent","molProd","bondLengthData","bondLengthDataMol","avgBondLength","getCoordBoundingBoxObj","fragmentType","shiftMol","xorig","over","add_","bb1","bb2","bbReactAll","bbProdAll","defaultArrowLength","defaultOffset","arrowCenter","arrowStart","arrowEnd","rgMerge","scaffold","ctab","readKeyValuePairs","valueString","partition","utils","count","trim","readKeyMultiValuePairs","postLoadMul","atomReductionMap","m","raid","patomsMap","identityMap","bondsToRemove","beginIn","endIn","postLoadSru","postLoadSup","postLoadGen","postLoadDat","postLoadMon","postLoadMer","postLoadCop","postLoadCro","postLoadMod","postLoadGra","postLoadCom","postLoadMix","postLoadFor","postLoadAny","loadSGroup","postLoadMap","initSGroup","sGroups","propData","kv","applySGroupProp","propName","numeric","core","applySGroupArrayProp","num","part","toIntArray","concat","applyDataSGroupName","applyDataSGroupExpand","applyDataSGroupQuery","applyDataSGroupQueryOp","applyDataSGroupDesc","split","applyDataSGroupInfo","applyDataSGroupInfoLine","substr","applyDataSGroupData","finalize","trimRight","startsWith","endsWith","applyDataSGroupDataLine","strArray","parseAtomLine","atomLine","atomSplit","massDifference","parseBondLine","bondLine","bondSplit","parseAtomListLine","atomListLine","parsePropertyLines","ctabLines","rLogic","props","charAt","propValue","isPseudo","test","propertyData","rglabels","a2rs","a2ri","a2r","iii","hhh","ooo","logic","pool","parsePropertyLineAtomList","expandedSGroups","eg","sGroupId","applyAtomProp","propId","propVal","parseCTabV2000","countsSplit","atomCount","bondCount","atomListCount","isAbs","isAnd","stextLinesCount","propertyLinesCount","atomLines","bondLines","atomListLines","atomLists","pair","psg","call","emptyGroups","parseRg2000","coreLines","fragmentLines","parseCTab","strId","parseRxn2000","lines","search","labelsListToIds","hdr","lst","parseAtomLineV3000","subsplit","spacebarsplit","atomListParams","matchNotListInfo","matchedSubstr","splitonce","ival","rgrsplit","parseBondLineV3000","v3000parseCollection","v3000parseSGroup","stripV30","splitSGroupDef","parseBracedNumberList","ATOMS","PATOMS","BONDS","brkxyzStrs","BRKXYZ","brkxyz","MULT","LABEL","CONNECT","FIELDDISP","stripQuotes","FIELDDATA","FIELDNAME","QUERYTYPE","QUERYOP","ESTATE","parseCTabV3000","norgroups","vals","substring","readRGroups3000","rfrags","rlsplit","rfrag","parseRxn3000","findCtabEnd","findRGroupEnd","molLinesReactants","molLinesProducts","current","rGroups","molLines","bracketEquality","currentIndex","firstSliceIndex","quoted","currentSymbol","closingBracketIndex","delim","braceBalance","loadRGroupFragments","parseMol","v2000","version","v3000","parseRxn","prepareForSaving","prepareMulForSaving","prepareSruForSaving","prepareSupForSaving","prepareDatForSaving","prepareGenForSaving","message","saveToMolfile","saveMulToMolfile","saveSruToMolfile","saveSupToMolfile","saveDatToMolfile","saveGenToMolfile","sgMap","bondMap","idstr","makeAtomBondLines","smtLine","bracketsToMolfile","sdtLine","padEnd","sddLine","nCharnCharsToDisplay","normalizeNewlines","charsPerLine","chars","prefix","rem","salLine","getCrossBonds","bracketPos","getBracketParameters","bracket","yComplement","nlRe","END_V2000","Molfile","molfile","reaction","bondMapping","molfileLines","common","skipErrors","preserveIndigoDesc","toRemove","errors","getSGroupsBFS","errorIgnore","ex","sGroupDelete","prepareSGroups","writeCTab2000","skipSGroupErrors","getComponents","all","saver","submol","saveMolecule","getScaffold","getCTab","writePaddedNumber","writeHeader","date","Date","writeCR","writeWhiteSpace","write","getMonth","getDate","getFullYear","getHours","getMinutes","repeat","isAbsFlag","enhancedStereoFlag","writeCTab2000Header","atomsIds","atomsProps","pseudo","writeAtom","writeBond","writeAtomProps","chargeList","isotopeList","radicalList","rglabelList","rglogicList","aplabelList","rbcountList","unsaturatedList","substcountList","writeAtomPropList","writePadded","sgmap","sgmapback","sgorder","q","expandedGroups","expandedGroupsLine","atomLabel","writePaddedFloat","MolSerializer","DefaultOptions","parseCTFile","reactionRelayout","badHeaderRecover","ex1","ex2","ignoreErrors","noRgroups","CisTrans","neighborsFunc","getNeighbors","PARITY","CIS","TRANS","prototype","each","func","getParity","idx","parity","getSubstituents","substituents","sameside","beg","neiBeg","neiEnd","normalize","normBeg","normEnd","prodBeg","prodEnd","samesides","iBeg","iEnd","iNeiBeg","iNeiEnd","sortSubstituents","h0","pureHydrogen","h1","h2","h3","swap","isGeomStereoBond","bondIdx","label1","label2","neiBegin","build","excludeBonds","ct","sign","arr","i1","i2","tmp","Dfs","atomData","atom_data","nComponentsInReactants","vertices","VertexDesc","edges","EdgeDesc","v_seq","dfs_state","parent_vertex","parent_edge","branches","opening_cycles","closing_cycle","SeqElem","vIdx","parVertex","parEdge","walk","vStack","cid","parentVertex","seqElem","atomD","neighbours","neiIdx","edgeIdx","edgeClosingCycle","eIdx","numBranches","numOpeningCycles","Stereocenters","buildFromBonds","alleneMask","neiList","nei1","nei1nei","nei2nei","stereocenter","buildOneCenter","allowed_stereocenters","degree","n_double_bonds","implicit_degree","atomIdx","implicitDegree","pyramid","edgeIds","lastAtomDir","nDoubleBonds","nPureHydrogens","neiAtom","edge_idx","nei_idx","rank","as","main1","main2","side1","side2","mainDir","getBondStereo","xyz1","xyz2","xyzzy","stereo0","stereo1","stereo2","nUp","nDown","xyz","centerIdx","u","eps","sine1","cosine1","sine2","cosine2","v3","isPyramidMappingRigid","rigid","Smiles","smiles","writtenAtoms","writtenComponents","_Atom","lowercase","chirality","branch_cnt","paren_written","h_count","isBondInRing","inLoop","setImplicitHydrogen","allowedLowercase","prepareLoopStructure","bondsInLoops","hbids","touchedCistransbonds","markCisTrans","componentsAll","seqEl","vPrevIdx","openingCycles","stereocenters","sc","implicitHIdx","pyramidMapping","counter","cycleNumbers","firstComponent","writeCycleNumber","calcBondDirection","comma","writeRadicals","needBrackets","hydro","cis_trans","dbonds","ctbond_beg","ctbond_end","saved","aromFailBeg","aromFailEnd","updateSideBonds","subst","sidebonds","findBondId","n1","n2","n3","n4","vprev","ntouched","marked","SmiSerializer","_content","DelimeterRegex","SdfSerializer","molSerializer","exec","chunk","propChunks","deserialize","pc","isFinite","sdfItems","serialize","ChemicalMimeType","pollDeferred","process","complete","timeGap","startTimeGap","Promise","resolve","reject","iterate","then","setTimeout","e","err","parametrizeUrl","url","_","request","method","headers","responseHandler","requestUrl","response","fetch","assign","Accept","credentials","json","ok","error","indigoCall","baseUrl","defaultOptions","customHeaders","RemoteStructService","apiPath","output_format","isAvailable","indigoVersion","indigo_version","imagoVersions","imago_versions","blob","parVersion","req","status","bind","upload_id","metadata","mol_str","outputFormat","resp","text","RemoteStructServiceProvider","currentApiPath","URLSearchParams","document","SupportedFormatProperties","mime","extensions","supportsCoords","formatProperties","molAuto","Mol","molV3000","rxn","Rxn","rxnV3000","DaylightSmiles","smilesExt","ExtendedSmiles","smarts","DaylightSmarts","inChI","InChI","inChIAuxInfo","InChIAuxInfo","cml","CML","KET","cdxml","CDXML","cdx","CDX","unknown","UNKNOWN","imgFormatProperties","svg","extension","png","getPropertiesByImgFormat","format","getPropertiesByFormat","SupportedFormat","KetFormatter","serializer","_ketSerializer","RxnFormatter","_molSerializer","stringifiedMolfile","stringifiedStruct","ServerFormatter","structService","ketSerializer","_structService","convert","convertResult","withCoords","promise","layout","parsedStruct","rescale","formatError","MolfileV2000Formatter","FormatterFactory","structServiceOptions","_excluded","molfileParseOptions","separateOptions","molSerializerOptions","formatter","identifyStructFormat","sanitizedString","er","clearStr","isBase64String","cdxHeader","window","atob","Raphael","translateAbs","delta","transform","st","LayerMap","StereoColoringType","StereLabelStyleType","Visel","paths","boxes","boundingBox","exts","vector","translate","ReObject","viselType","visel","render","vbox","noredraw","removed","show","paper","setStart","drawHover","setFinish","hide","_render","_restruct","_paper","_styles","box","shiftRayBox","r","rc","rd","pid","nid","id0","id1","calcCoordinates","aPoint","bPoint","lengthHyp","obj","pos1","pos2","oPos2","D","util","rect","rectangleArrowHighlightAndSelection","b0x","wOffset","hOffset","transformedPath","svgPath","rotate","rx","ry","polyline","OpenAngle","arrowOpenAngle","FilledTriangle","arrowFilledTriangle","FilledBow","arrowFilledBow","DashedOpenAngle","arrowDashedOpenAngle","Failed","arrowFailed","BothEndsFilledTriangle","arrowBothEndsFilledTriangle","EquilibriumFilledHalfBow","arrowEquilibriumFilledHalfBow","EquilibriumFilledTriangle","arrowEquilibriumFilledTriangle","EquilibriumOpenAngle","arrowEquilibriumOpenAngle","UnbalancedEquilibriumFilledHalfBow","arrowUnbalancedEquilibriumFilledHalfBow","UnbalancedEquilibriumOpenHalfAngle","arrowUnbalancedEquilibriumOpenHalfAngle","UnbalancedEquilibriumLargeFilledHalfBow","arrowUnbalancedEquilibriumLargeFilledHalfBow","UnbalancedEquilibriumFilledHalfTriangle","arrowUnbalancedEquilibriumFilledHalfTriangle","arrowEllipticalArcFilledBow","arrowEllipticalArcFilledTriangle","arrowEllipticalArcOpenAngle","arrowEllipticalArcOpenHalfAngle","arrowLength","arrowAngle","arrowHeadLength","arrowHeadWidth","arrowHeadAttr","lineattr","triangleLength","triangleWidth","fill","dashInterval","failSignWidth","arrowLen","lineOffset","arrowOffset","unbalanceVal","plus","bondSingle","makeStroke","stroke","bondSingleUp","b3","bondSingleStereoBold","a3","a4","bondDoubleStereoBold","sgBondPath","bondSingleDown","nlines","step","bsp","stereoBond","bondSingleEither","bondDouble","cisTrans","bondSingleOrDouble","nSect","bondSpace","pi","bondTriple","bondAromatic","bondShift","l1","l2","bondAny","bondHydrogen","bondDative","reactingCenter","pathdesc","topologyMark","mark","font","fontszsub","rbb","getBBox","recenterText","radicalCap","lineWidth","dw","dh","radicalBullet","circle","b0","sgroupBracketStyle","selectionRectangle","lassoStyle","selectionPolygon","pstr","selectionLine","dashedPath","dash","t0","t1","black","t2","coordStr","aromaticBondPaths","mask","vml","gap","StereoLabelMinOpacity","ShowHydrogenLabels","ReAtom","showLabel","hydrogenOnTheLeft","getVBoxObj","makeHoverPlate","addReObjectPath","ps","isAtomInContractedFunctionalGroup","atomSelectionPlateRadius","hoverStyle","restruct","styles","selectionStyle","isAttachmentPointAtom","sgroupName","setHydrogenPos","isLabelVisible","rightMargin","leftMargin","implh","isHydrogen","buildLabel","zoom","showAtomIds","idPos","lc","draw","indices","setHover","hydroIndex","showHydroIndex","showRadical","showIsotope","displayHydrogen","showHydrogenLabels","showHydrogen","hydrogen","showCharge","showValence","showExplicitValence","showValenceWarnings","warning","showWarning","warnings","pathAndRBoxTranslate","lsb","bisectLargestSector","showAttpnt","aamText","getAamText","queryAttrsText","getQueryAttrsText","shouldDisplayStereoLabel","stereoLabelStyle","aamPath","atomColoring","getStereoAtomColor","childNodes","setAttribute","opacity","getStereoAtomOpacity","aamBox","t","fromRelBox","isHighlighted","highlightColor","highlight","hasCurrentHighlight","style","colorStereogenicCenters","Off","BondsOnly","getColorFromStereoLabel","stereoLabelType","colorOfAndCenters","colorOfOrCenters","colorOfAbsoluteCenters","stereoLabelNumber","autoFadeOfStereoLabels","labelStyle","flag","On","Classic","IUPAC","visibleTerminal","Hetero","neighborsLength","shouldBeVisible","carbonExplicitly","sameNotStereo","hydrogenLabels","Terminal","TerminalAndHetero","yl","yr","nl","nr","getLabelText","fontsz","hshift","vshift","mapValence","hydrogenLeft","asterisk","attpntText","attpntPath1","attpntRbb","lsbn","shiftBondEnd","arrowLeft","arrowRight","attpntPath","angles","daMax","margin","ReBond","doubleBondShift","bondRecalc","isBondInContractedFunctionalGroup","checkStereoBold","setDoubleBondShift","getBondPath","getReactingCenterPath","getTopologyMark","ipath","bondIdxOff","subFontSize","showBondIds","getIdsPath","showHalfBondIds","showLoopIds","highlightPath","getHighlightPath","beginning","pathString","findIncomingStereoUpBond","bid0","includeBoldStereoBond","neibond","singleUp","boldStereo","findIncomingUpBonds","halfbonds","neihbid1","neihbid2","shiftA","shiftB","getBondSingleStereoBoldPath","getBondSingleUpPath","getBondSingleDownPath","getBondSingleEitherPath","getStereoBondColor","getBondDoubleStereoBoldPath","getBondDoublePath","inAromaticLoop","getBondAromaticPath","getSingleOrDoublePath","stereoUpBondGetCoordinates","defaultColor","beginAtomStereoLabel","endAtomStereoLabel","LabelsOnly","coords1","coords2","getBondLineShift","neihbid","neihb","cosHalf","biss","denomAdd","interval","s1","s2","dashdotPattern","getAromaticBondPaths","lw","bs","alongIntRc","alongIntMadeBroken","alongSz","acrossInt","acrossSz","tiltTan","fixed","param1","param2","pb","irbb","selectDoubleBondShiftChain","loop1","loop2","d1","d2","selectDoubleBondShift","atom1","atom2","nLeft","nRight","ReEnhancedFlag","hoverPath","getDefaultStereoFlagPosition","stereoFlagMap","absFlagLabel","andFlagLabel","mixedFlagLabel","orFlagLabel","showStereoFlags","ReFrag","firstFrag","secondFrag","_ui_editor","calcBBox","keyOf","BORDER_EXT","ReRGroup","labelBox","fragGetAtoms","fragGetBonds","bbf","rGroupdrawBrackets","labelSet","fontRLabel","logicStyle","fontRLogic","rLogicToString","logicPath","logicBox","_draw","fnum","drawing","cy","leftBracket","rightBracket","ifThen","rangeExists","restH","nextRg","ReRxnArrow","point","distRef","getReferencePointDistance","calculateDistanceToLine","getReferencePoints","startPoint","endPoint","middlePoint","refPoint","refPoints","rp","generatePath","findMiddlePoint","scaleFactor","selectionSet","scaledRP","getArrowParams","x1","x2","y2","hypot","_id","per","minX","minY","coordinates1","coordinates2","ReRxnPlus","ReDataSGroupData","dataArea","ReSGroup","remol","firstSgroupAtom","SGroupdrawBrackets","drawGroupDat","getHighlighPathInfo","startX","startY","sGroupItem","lowerIndexText","upperIndexText","indexAttribute","bracketR","renderIndex","indexPos","indexPath","indexBox","showValue","toFront","calculatePP","drawAttachedDat","drawAbsoluteDat","sbox","sgroupData","nameI","boxI","sboxI","BracketParams","crossBondsValues","tl","tr","tt","tb","cc","dt","contractedFunctionalGroupSize","hoverPp","ReSimpleObject","simpleObject","pointToCenter","topX","topY","bottomX","bottomY","distances","onlyOnObject","poly","atan","enhPaths","stylesApplied","enhPath","hoverStyleSimpleObject","ReLoop","rlid","apos","bpos","aromaticCircle","pathStr","halfAngle","minSin","qi","SCALE","ReText","getRelBox","topLeft","firstElOfFirstRow","leftEdge","firstRow","topEdge","widestRow","nextRow","getRowWidth","lastElOfWidestRow","rightEdge","lastRow","bottomEdge","row","rowWidth","paperScale","shiftY","rawContentState","blocks","block","ranges","getRanges","shiftX","start","setPos","flatten","getStyles","nextStyles","isEqual","inlineStyleRanges","inlineRange","customFontSize","FontSize","textRange","Bold","Italic","Subscript","Superscript","ReStruct","initLayers","clearMarks","lid","reloops","enhancedFlags","reAtom","adjacentComponents","neighbor","compId","aidSet","getConnectedComponent","ccFragmentType","ccid","removeConnectedComponent","addConnectedComponent","layers","visible","parentNode","insertBefore","maps","structChanged","markItem","mapChanged","clearVisel","selection","isSelectionEmpty","eachItem","scaleVisel","force","initialized","_item","atomsChanged","connectedComponentRemoveAtom","emptyFrags","clearConnectedComponents","atomsChangedArray","assignConnectedComponents","verifyLoops","updLoops","updateLoops","showLabels","showBonds","showLoops","showReactionSymbols","showSGroups","showFragments","showRGroups","showEnhancedFlags","showSimpleObjects","showTexts","reloop","markBond","simpleObjectsChanged","textsChanged","rxnArrowsChanged","rxnPlusesChanged","resgroup","bondlist","markAtom","isValid","loopRemove","enhancedFlagsChanged","chid","bondsChanged","mapValues","isSelectable","sgId","sGroupAtoms","showItemSelection","exists","isSelectionSvgObjectExists","makeSelectionPlate","anySelection","scaleRPath","FRAC","setFracAngle","calcAngle","fracAngle","angle2","round","calcNewAtomPos","ctrlKey","degrees","BONDS_MERGE_ANGLE","BONDS_MERGE_SCALE","mergeBondsParams","struct1","struct2","begin1","begin2","end1","end2","mergeAngle","merged","inRange","opt","rotationStep","labelFontSize","autoScale","autoScaleMargin","maxBondLength","hideImplicitHydrogen","hideTerminalLabels","doubleBondWidth","stereoBondWidth","bondThickness","Render","clientArea","renderWidth","clientWidth","renderHeight","clientHeight","userOpts","ZERO","updateOptions","opts","passedOptions","view2obj","isRelative","scroll","scrollPos","useOldZoom","obj2view","scrollLeft","scrollTop","page2obj","event","getBoundingClientRect","offsetTop","top","offsetLeft","clientX","clientY","setPaperSize","setSize","setViewBox","setOffset","newoffset","setZoom","calcExtend","sSz","x0","y0","ey","setScrollOffset","cx","update","setScale","canvas","setMolecule","viewSz","changes","setSelection","sf","UNIT","eb","vb","cb","oldCb","oldBb","sz1","marg","mv","csz","rescaleAmount","sz2","BaseOperation","priority","execute","_inverted","invert","level","invalidateLoop","halfBond1","halfBond2","invalidateAtom","invalidateBond","invalidateItem","OperationType","freeze","ATOM_ADD","ATOM_DELETE","ATOM_ATTR","ATOM_MOVE","CALC_IMPLICIT_H","BOND_ADD","BOND_DELETE","BOND_ATTR","BOND_MOVE","LOOP_MOVE","S_GROUP_ATOM_ADD","S_GROUP_ATOM_REMOVE","S_GROUP_ATTR","S_GROUP_CREATE","S_GROUP_DELETE","S_GROUP_ADD_TO_HIERACHY","S_GROUP_REMOVE_FROM_HIERACHY","R_GROUP_ATTR","R_GROUP_FRAGMENT","UPDATE_IF_THEN","RESTORE_IF_THEN","RXN_ARROW_ADD","RXN_ARROW_DELETE","RXN_ARROW_MOVE","RXN_ARROW_RESIZE","RXN_PLUS_ADD","RXN_PLUS_DELETE","RXN_PLUS_MOVE","S_GROUP_DATA_MOVE","CANVAS_LOAD","ALIGN_DESCRIPTORS","SIMPLE_OBJECT_ADD","SIMPLE_OBJECT_DELETE","SIMPLE_OBJECT_MOVE","SIMPLE_OBJECT_RESIZE","RESTORE_DESCRIPTORS_POSITION","FRAGMENT_ADD","FRAGMENT_DELETE","FRAGMENT_STEREO_FLAG","FRAGMENT_ADD_STEREO_ATOM","FRAGMENT_DELETE_STEREO_ATOM","ENHANCED_FLAG_MOVE","TEXT_CREATE","TEXT_UPDATE","TEXT_DELETE","TEXT_MOVE","ADD_HIGHLIGHT","UPDATE_HIGHLIGHT","REMOVE_HIGHLIGHT","AtomAttr","attribute","data2","inverted","AtomMove","noinvalidate","reatom","AtomAdd","atomSetPos","AtomDelete","restructedAtom","markItemRemoved","BondAttr","BondMove","BondAdd","structBond","atomAddNeighbor","BondDelete","rebond","prev","CanvasLoad","oldStruct","clearVisels","AlignDescriptors","history","structBox","alignPoint","RestoreDescriptorsPosition","EnhancedFlagMove","currentPosition","newPosition","UpdateIfThen","rgNew","rgOld","skipRgids","rgid_new","rgid_old","ifThenHistory","RestoreIfThen","rgValue","FragmentAdd","FragmentDelete","enhancedFalg","FragmentAddStereoAtom","invalidateEnhancedFlag","FragmentDeleteStereoAtom","FragmentStereoFlag","updateStereoFlag","CalcImplicitH","aids","atomIds","aIds","LoopMove","RGroupAttr","rgroupId","rgp","RGroupFragment","rg_new","rg_old","findRGroupByFragment","removeOld","setNew","RxnArrowMove","Base","move","RxnArrowResize","anchor","previousPos0","get_xy0","previousPos1","reItem","angleInRadians","cosAngle","sinAngle","diffX","diffY","newMiddlePoint","RxnPlusMove","RxnPlusAdd","plid","newRxn","structRxn","rxnPlusSetPos","RxnPlusDelete","RxnArrowAdd","itemId","rxnArrowSetPos","RxnArrowDelete","performed","SimpleObjectAdd","toCircle","makeCircleFromEllipse","simpleObjectSetPos","SimpleObjectDelete","SimpleObjectMove","handleRectangleChangeWithAnchor","SimpleObjectResize","circlePoint","position0","position1","SGroupAtomAdd","SGroupAtomRemove","removeAtom","SGroupAttr","setAttr","SGroupDataMove","SGroupAddToHierarchy","relations","SGroupRemoveFromHierarchy","SGroupCreate","SGroupDelete","relatedFGroupId","fgid","TextCreate","textSetPosition","TextDelete","TextUpdate","previousContent","TextMove","difference","Action","operations","operation","isDummy","sortedOperations","invertedOperation","perform","addOp","fromAromaticTemplateOnBond","template","events","simpleFusing","getBondFragment","getFragmentWithBondMap","atomsInStruct","SELECTION_DISTANCE_COEFFICIENT","SELECTION_WITHIN_TEXT","findMaps","findClosestAtom","findClosestBond","findClosestEnhancedFlag","findClosestDataSGroupData","findClosestSGroup","findClosestRxnArrow","findClosestRxnPlus","findClosestFrag","findClosestRGroup","findClosestSimpleObject","findClosestText","cursorPosition","referencePoints","calcDistance","ref","skip","closestAtom","maxMinDist","skipId","closestBond","closestBondCenter","minCDist","mid","cdist","inStripe","_minDist","inBox","xDist","contains","rxnArrow","firstAtomPp","pg","findClosestItem","mp","other","findCloseMerge","srcId","merge","atomGetAttr","atomGetDegree","atomGetSGroups","atomGetPos","findStereoAtoms","structSelection","atomForNewBond","atomNeighbours","prevBondId","prevBond","prevBondType","neiPos","maxI","maxAngle","neiNeighbours","neiV","neiAngle","neiNei","neiNeiPos","vDiff","shallBe180DegToPrevBond","prevBondAngle","closest","getRelSgroupsBySelection","selectedAtoms","_sgid","fromRGroupAttrs","fromRGroupFragment","rgidNew","fromUpdateIfThen","rgidOld","fromSeveralSgroupAddition","descriptors","fromSgroupAddition","fValue","localAttrs","mergeWith","fromSgroupAttrs","setExpandSGroup","fromAtomsAttrs","sGroupAttributeAction","fromSgroupDeletion","sG","sGroupsRecalcCrossBonds","getAttrs","asteriskAction","plainCarbon","isPlainCarbon","fromSgroupAction","newSg","sourceAtoms","SgContexts","fromBondAction","atomsFromBonds","getAtomsFromBonds","newSourceAtoms","uniq","fromGroupAction","Multifragment","fromMultiFragmentAction","Group","fromAtomAction","targetAtoms","allFragments","fragId","getAtomsBondIds","currSelection","bondid","removeAtomFromSgroupIfNeeded","removeSgroupIfNeeded","sgCounts","fromBondAddition","mergeFragments","mergeSgroups","bnd","fromBondStereoUpdate","mergeFragmentsIfNeeded","fromBondsAttrs","reset","bids","attrGetDefault","fromBondsMerge","mergeMap","atomPairs","dstId","bondCI","dst","src","fromAtomMerge","fromBondFlipping","isInteger","withReverse","beginFrId","endFrId","fragmentStereoBonds","stereoAtomsMap","getStereoAtomsMap","stereoProp","aId","fromStereoAtomAttrs","correctAtomIds","getStereoParity","newAtomParity","bondChangingAction","itemID","bondProps","newItemId","plainBondTypes","fromAtomAddition","atomNeighbors","fromAtomsFragmentAttr","newfrid","oldfrid","fragAction","mergeBondId","getAttrHash","sgChanged","dstAtomNeighbors","frid2","fridAtoms","atomsToNewFrag","moveAtomsAction","srcAtoms","dstAtom","notExpandedContexts","atomsToSgroup","without","fromNewCanvas","fromDescriptorsAlign","fromChain","dx","dy","chainItems","fromItemsFuse","usedAtoms","getItemsToFuse","editor","mergeItems","closestToMerge","findMerge","getHoverToFuse","hoverItems","now","closestMap","fromMultipleMove","lists","atomsToInvalidate","rxnPulse","sgData","fromStereoFlagUpdate","processAtom","usedIds","fromFragmentSplit","rgForRemove","fromOneAtomDeletion","fromFragmentDeletion","fromBondDeletion","skipAtoms","atomsToRemove","fromOneBondDeletion","frids","actionRemoveDataSGroups","actionRemoveBonds","frid3","fromPaste","pstruct","xy0","getStructCenter","fridMap","pasteItems","tmpAtom","newsgid","sgAction","oper","__frag","newRgId","onlyOneStructsSgroupId","xmin","ymin","xmax","ymax","fromArrowAddition","fromArrowResizing","fromArrowDeletion","fromPlusAddition","fromPlusDeletion","fromFlip","fids","fidsNumberKeys","isFragFound","allFragmentsOfStructure","selectedFragmentsOfStructure","bbox","calcCenter","flipItemByCenter","fromRotate","rotateDelta","did","stereoFlags","flagId","fromBondAlign","fromSimpleObjectDeletion","fromSimpleObjectAddition","fromSimpleObjectResizing","fromTemplateOnCanvas","extraBondAction","additionalAtom","middleAtom","actionRes","fromTemplateOnAtom","extraBond","tmpl","extraRes","angle0","fromTemplateOnBondAction","flip","fromTemplateOnBond","tmplBond","tmplBegin","atomsMap","bondAtoms","mergeA","tBond","existId","commonBond","fromTextCreation","fromTextUpdating","fromTextDeletion","HighlightAdd","highlightId","notifyChanged","HighlightDelete","highlightToRemove","newData","oldData","highlightToUpdate","oldAtoms","oldBonds","oldColor","updatedHighlight","HighlightUpdate","reAtoms","reBonds","fromHighlightCreate","fromHighlightClear","defaultTypes","defaultCalcProps","convertStructToString","Indigo","info","clean","aromatize","dearomatize","calculateCip","automap","types","check","properties","calculate","image","recognize","backgroundColor","generateImageAsBase64","prepareStructToRender","structStr","ketcherInstance","parseStruct","factory","service","create","getStructureFromStringAsync","getStructure","structureFormat","formatterFactory","getStructureFromStructAsync","Ketcher","EventEmitter","settings","setOptions","isExtended","molfileFormat","containsReaction","formatPassed","rxnfile","withAuxInfo","generateInchIKey","eventBus","structToAddFragment","meta","base64","byteCharacters","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","DefaultStructServiceOptions","KetcherBuilder","structServiceProvider","serviceOptions","mergedServiceOptions","createStructService","ketcher"],"mappings":"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"}